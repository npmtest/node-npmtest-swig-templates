{"/home/travis/build/npmtest/node-npmtest-swig-templates/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_swig_templates */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/lib.npmtest_swig_templates.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/lib.npmtest_swig_templates.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":59}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":65}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_swig_templates */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_swig_templates = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_swig_templates = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":58}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":72},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-swig-templates && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_swig_templates */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_swig_templates","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_swig_templates.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_swig_templates.rollup.js'] =","            local.assetsDict['/assets.npmtest_swig_templates.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_swig_templates.__dirname + '/lib.npmtest_swig_templates.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}}},"branchMap":{},"code":["module.exports = require('./lib/swig');",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/swig.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/swig.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[1,1],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"efn","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":15}}},"2":{"name":"validateOptions","line":88,"loc":{"start":{"line":88,"column":0},"end":{"line":88,"column":34}}},"3":{"name":"(anonymous_3)","line":93,"loc":{"start":{"line":93,"column":60},"end":{"line":93,"column":75}}},"4":{"name":"(anonymous_4)","line":103,"loc":{"start":{"line":103,"column":29},"end":{"line":103,"column":45}}},"5":{"name":"(anonymous_5)","line":143,"loc":{"start":{"line":143,"column":22},"end":{"line":143,"column":41}}},"6":{"name":"(anonymous_6)","line":153,"loc":{"start":{"line":153,"column":29},"end":{"line":153,"column":47}}},"7":{"name":"(anonymous_7)","line":171,"loc":{"start":{"line":171,"column":15},"end":{"line":171,"column":31}}},"8":{"name":"getLocals","line":186,"loc":{"start":{"line":186,"column":2},"end":{"line":186,"column":30}}},"9":{"name":"shouldCache","line":200,"loc":{"start":{"line":200,"column":2},"end":{"line":200,"column":32}}},"10":{"name":"cacheGet","line":211,"loc":{"start":{"line":211,"column":2},"end":{"line":211,"column":34}}},"11":{"name":"cacheSet","line":230,"loc":{"start":{"line":230,"column":2},"end":{"line":230,"column":39}}},"12":{"name":"(anonymous_12)","line":251,"loc":{"start":{"line":251,"column":25},"end":{"line":251,"column":37}}},"13":{"name":"(anonymous_13)","line":270,"loc":{"start":{"line":270,"column":19},"end":{"line":270,"column":43}}},"14":{"name":"(anonymous_14)","line":295,"loc":{"start":{"line":295,"column":16},"end":{"line":295,"column":66}}},"15":{"name":"(anonymous_15)","line":326,"loc":{"start":{"line":326,"column":22},"end":{"line":326,"column":46}}},"16":{"name":"(anonymous_16)","line":338,"loc":{"start":{"line":338,"column":15},"end":{"line":338,"column":42}}},"17":{"name":"(anonymous_17)","line":365,"loc":{"start":{"line":365,"column":19},"end":{"line":365,"column":48}}},"18":{"name":"remapBlocks","line":390,"loc":{"start":{"line":390,"column":2},"end":{"line":390,"column":39}}},"19":{"name":"(anonymous_19)","line":391,"loc":{"start":{"line":391,"column":29},"end":{"line":391,"column":46}}},"20":{"name":"importNonBlocks","line":410,"loc":{"start":{"line":410,"column":2},"end":{"line":410,"column":43}}},"21":{"name":"(anonymous_21)","line":412,"loc":{"start":{"line":412,"column":23},"end":{"line":412,"column":40}}},"22":{"name":"(anonymous_22)","line":413,"loc":{"start":{"line":413,"column":31},"end":{"line":413,"column":48}}},"23":{"name":"getParents","line":428,"loc":{"start":{"line":428,"column":2},"end":{"line":428,"column":39}}},"24":{"name":"(anonymous_24)","line":485,"loc":{"start":{"line":485,"column":20},"end":{"line":485,"column":47}}},"25":{"name":"(anonymous_25)","line":523,"loc":{"start":{"line":523,"column":16},"end":{"line":523,"column":43}}},"26":{"name":"(anonymous_26)","line":547,"loc":{"start":{"line":547,"column":20},"end":{"line":547,"column":52}}},"27":{"name":"(anonymous_27)","line":549,"loc":{"start":{"line":549,"column":37},"end":{"line":549,"column":56}}},"28":{"name":"(anonymous_28)","line":592,"loc":{"start":{"line":592,"column":17},"end":{"line":592,"column":44}}},"29":{"name":"compiled","line":607,"loc":{"start":{"line":607,"column":4},"end":{"line":607,"column":30}}},"30":{"name":"(anonymous_30)","line":653,"loc":{"start":{"line":653,"column":21},"end":{"line":653,"column":54}}},"31":{"name":"(anonymous_31)","line":675,"loc":{"start":{"line":675,"column":41},"end":{"line":675,"column":61}}},"32":{"name":"(anonymous_32)","line":715,"loc":{"start":{"line":715,"column":13},"end":{"line":715,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":33}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}},"3":{"start":{"line":28,"column":0},"end":{"line":73,"column":18}},"4":{"start":{"line":80,"column":0},"end":{"line":80,"column":29}},"5":{"start":{"line":80,"column":17},"end":{"line":80,"column":27}},"6":{"start":{"line":88,"column":0},"end":{"line":125,"column":1}},"7":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"8":{"start":{"line":90,"column":4},"end":{"line":90,"column":11}},"9":{"start":{"line":93,"column":2},"end":{"line":108,"column":5}},"10":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"11":{"start":{"line":95,"column":6},"end":{"line":95,"column":13}},"12":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"13":{"start":{"line":98,"column":6},"end":{"line":98,"column":103}},"14":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"15":{"start":{"line":101,"column":6},"end":{"line":101,"column":92}},"16":{"start":{"line":103,"column":4},"end":{"line":107,"column":7}},"17":{"start":{"line":104,"column":6},"end":{"line":106,"column":7}},"18":{"start":{"line":105,"column":8},"end":{"line":105,"column":144}},"19":{"start":{"line":110,"column":2},"end":{"line":116,"column":3}},"20":{"start":{"line":111,"column":4},"end":{"line":115,"column":5}},"21":{"start":{"line":112,"column":6},"end":{"line":114,"column":7}},"22":{"start":{"line":113,"column":8},"end":{"line":113,"column":183}},"23":{"start":{"line":117,"column":2},"end":{"line":123,"column":3}},"24":{"start":{"line":118,"column":4},"end":{"line":122,"column":5}},"25":{"start":{"line":119,"column":6},"end":{"line":121,"column":7}},"26":{"start":{"line":120,"column":8},"end":{"line":120,"column":185}},"27":{"start":{"line":143,"column":0},"end":{"line":146,"column":2}},"28":{"start":{"line":144,"column":2},"end":{"line":144,"column":27}},"29":{"start":{"line":145,"column":2},"end":{"line":145,"column":75}},"30":{"start":{"line":153,"column":0},"end":{"line":155,"column":2}},"31":{"start":{"line":154,"column":2},"end":{"line":154,"column":34}},"32":{"start":{"line":171,"column":0},"end":{"line":722,"column":2}},"33":{"start":{"line":172,"column":2},"end":{"line":172,"column":24}},"34":{"start":{"line":173,"column":2},"end":{"line":173,"column":62}},"35":{"start":{"line":174,"column":2},"end":{"line":174,"column":18}},"36":{"start":{"line":175,"column":2},"end":{"line":175,"column":23}},"37":{"start":{"line":176,"column":2},"end":{"line":178,"column":23}},"38":{"start":{"line":186,"column":2},"end":{"line":192,"column":3}},"39":{"start":{"line":187,"column":4},"end":{"line":189,"column":5}},"40":{"start":{"line":188,"column":6},"end":{"line":188,"column":33}},"41":{"start":{"line":191,"column":4},"end":{"line":191,"column":65}},"42":{"start":{"line":200,"column":2},"end":{"line":203,"column":3}},"43":{"start":{"line":201,"column":4},"end":{"line":201,"column":28}},"44":{"start":{"line":202,"column":4},"end":{"line":202,"column":86}},"45":{"start":{"line":211,"column":2},"end":{"line":221,"column":3}},"46":{"start":{"line":212,"column":4},"end":{"line":214,"column":5}},"47":{"start":{"line":213,"column":6},"end":{"line":213,"column":13}},"48":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"49":{"start":{"line":217,"column":6},"end":{"line":217,"column":29}},"50":{"start":{"line":220,"column":4},"end":{"line":220,"column":39}},"51":{"start":{"line":230,"column":2},"end":{"line":241,"column":3}},"52":{"start":{"line":231,"column":4},"end":{"line":233,"column":5}},"53":{"start":{"line":232,"column":6},"end":{"line":232,"column":13}},"54":{"start":{"line":235,"column":4},"end":{"line":238,"column":5}},"55":{"start":{"line":236,"column":6},"end":{"line":236,"column":28}},"56":{"start":{"line":237,"column":6},"end":{"line":237,"column":13}},"57":{"start":{"line":240,"column":4},"end":{"line":240,"column":37}},"58":{"start":{"line":251,"column":2},"end":{"line":255,"column":4}},"59":{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},"60":{"start":{"line":253,"column":6},"end":{"line":253,"column":22}},"61":{"start":{"line":270,"column":2},"end":{"line":275,"column":4}},"62":{"start":{"line":271,"column":4},"end":{"line":273,"column":5}},"63":{"start":{"line":272,"column":6},"end":{"line":272,"column":72}},"64":{"start":{"line":274,"column":4},"end":{"line":274,"column":27}},"65":{"start":{"line":295,"column":2},"end":{"line":310,"column":4}},"66":{"start":{"line":296,"column":4},"end":{"line":298,"column":5}},"67":{"start":{"line":297,"column":6},"end":{"line":297,"column":82}},"68":{"start":{"line":300,"column":4},"end":{"line":302,"column":5}},"69":{"start":{"line":301,"column":6},"end":{"line":301,"column":84}},"70":{"start":{"line":304,"column":4},"end":{"line":309,"column":6}},"71":{"start":{"line":326,"column":2},"end":{"line":328,"column":4}},"72":{"start":{"line":327,"column":4},"end":{"line":327,"column":35}},"73":{"start":{"line":338,"column":2},"end":{"line":355,"column":4}},"74":{"start":{"line":339,"column":4},"end":{"line":339,"column":29}},"75":{"start":{"line":341,"column":4},"end":{"line":343,"column":8}},"76":{"start":{"line":345,"column":4},"end":{"line":349,"column":5}},"77":{"start":{"line":346,"column":6},"end":{"line":348,"column":7}},"78":{"start":{"line":347,"column":8},"end":{"line":347,"column":28}},"79":{"start":{"line":351,"column":4},"end":{"line":351,"column":50}},"80":{"start":{"line":352,"column":4},"end":{"line":352,"column":28}},"81":{"start":{"line":354,"column":4},"end":{"line":354,"column":62}},"82":{"start":{"line":365,"column":2},"end":{"line":381,"column":4}},"83":{"start":{"line":366,"column":4},"end":{"line":366,"column":12}},"84":{"start":{"line":368,"column":4},"end":{"line":370,"column":5}},"85":{"start":{"line":369,"column":6},"end":{"line":369,"column":19}},"86":{"start":{"line":372,"column":4},"end":{"line":372,"column":74}},"87":{"start":{"line":374,"column":4},"end":{"line":374,"column":45}},"88":{"start":{"line":376,"column":4},"end":{"line":378,"column":5}},"89":{"start":{"line":377,"column":6},"end":{"line":377,"column":62}},"90":{"start":{"line":380,"column":4},"end":{"line":380,"column":36}},"91":{"start":{"line":390,"column":2},"end":{"line":401,"column":3}},"92":{"start":{"line":391,"column":4},"end":{"line":400,"column":7}},"93":{"start":{"line":392,"column":6},"end":{"line":392,"column":55}},"94":{"start":{"line":393,"column":6},"end":{"line":395,"column":7}},"95":{"start":{"line":394,"column":8},"end":{"line":394,"column":29}},"96":{"start":{"line":396,"column":6},"end":{"line":398,"column":7}},"97":{"start":{"line":397,"column":8},"end":{"line":397,"column":59}},"98":{"start":{"line":399,"column":6},"end":{"line":399,"column":19}},"99":{"start":{"line":410,"column":2},"end":{"line":418,"column":3}},"100":{"start":{"line":411,"column":4},"end":{"line":411,"column":18}},"101":{"start":{"line":412,"column":4},"end":{"line":412,"column":63}},"102":{"start":{"line":412,"column":42},"end":{"line":412,"column":59}},"103":{"start":{"line":413,"column":4},"end":{"line":417,"column":7}},"104":{"start":{"line":414,"column":6},"end":{"line":416,"column":7}},"105":{"start":{"line":415,"column":8},"end":{"line":415,"column":30}},"106":{"start":{"line":428,"column":2},"end":{"line":462,"column":3}},"107":{"start":{"line":429,"column":4},"end":{"line":434,"column":8}},"108":{"start":{"line":436,"column":4},"end":{"line":452,"column":5}},"109":{"start":{"line":437,"column":6},"end":{"line":439,"column":7}},"110":{"start":{"line":438,"column":8},"end":{"line":438,"column":104}},"111":{"start":{"line":441,"column":6},"end":{"line":441,"column":50}},"112":{"start":{"line":442,"column":6},"end":{"line":442,"column":71}},"113":{"start":{"line":443,"column":6},"end":{"line":443,"column":128}},"114":{"start":{"line":444,"column":6},"end":{"line":444,"column":33}},"115":{"start":{"line":446,"column":6},"end":{"line":448,"column":7}},"116":{"start":{"line":447,"column":8},"end":{"line":447,"column":77}},"117":{"start":{"line":449,"column":6},"end":{"line":449,"column":35}},"118":{"start":{"line":451,"column":6},"end":{"line":451,"column":27}},"119":{"start":{"line":455,"column":4},"end":{"line":455,"column":23}},"120":{"start":{"line":456,"column":4},"end":{"line":459,"column":5}},"121":{"start":{"line":457,"column":6},"end":{"line":457,"column":80}},"122":{"start":{"line":458,"column":6},"end":{"line":458,"column":60}},"123":{"start":{"line":461,"column":4},"end":{"line":461,"column":19}},"124":{"start":{"line":485,"column":2},"end":{"line":508,"column":4}},"125":{"start":{"line":486,"column":4},"end":{"line":488,"column":10}},"126":{"start":{"line":490,"column":4},"end":{"line":494,"column":5}},"127":{"start":{"line":492,"column":6},"end":{"line":492,"column":68}},"128":{"start":{"line":493,"column":6},"end":{"line":493,"column":52}},"129":{"start":{"line":496,"column":4},"end":{"line":505,"column":5}},"130":{"start":{"line":497,"column":6},"end":{"line":502,"column":10}},"131":{"start":{"line":504,"column":6},"end":{"line":504,"column":50}},"132":{"start":{"line":507,"column":4},"end":{"line":507,"column":40}},"133":{"start":{"line":523,"column":2},"end":{"line":525,"column":4}},"134":{"start":{"line":524,"column":4},"end":{"line":524,"column":43}},"135":{"start":{"line":547,"column":2},"end":{"line":570,"column":4}},"136":{"start":{"line":548,"column":4},"end":{"line":567,"column":5}},"137":{"start":{"line":549,"column":6},"end":{"line":565,"column":9}},"138":{"start":{"line":550,"column":8},"end":{"line":550,"column":19}},"139":{"start":{"line":552,"column":8},"end":{"line":555,"column":9}},"140":{"start":{"line":553,"column":10},"end":{"line":553,"column":18}},"141":{"start":{"line":554,"column":10},"end":{"line":554,"column":17}},"142":{"start":{"line":557,"column":8},"end":{"line":562,"column":9}},"143":{"start":{"line":558,"column":10},"end":{"line":558,"column":30}},"144":{"start":{"line":560,"column":10},"end":{"line":560,"column":19}},"145":{"start":{"line":561,"column":10},"end":{"line":561,"column":17}},"146":{"start":{"line":564,"column":8},"end":{"line":564,"column":25}},"147":{"start":{"line":566,"column":6},"end":{"line":566,"column":13}},"148":{"start":{"line":569,"column":4},"end":{"line":569,"column":46}},"149":{"start":{"line":592,"column":2},"end":{"line":628,"column":4}},"150":{"start":{"line":593,"column":4},"end":{"line":597,"column":10}},"151":{"start":{"line":599,"column":4},"end":{"line":601,"column":5}},"152":{"start":{"line":600,"column":6},"end":{"line":600,"column":20}},"153":{"start":{"line":603,"column":4},"end":{"line":603,"column":33}},"154":{"start":{"line":604,"column":4},"end":{"line":604,"column":47}},"155":{"start":{"line":605,"column":4},"end":{"line":605,"column":43}},"156":{"start":{"line":607,"column":4},"end":{"line":619,"column":5}},"157":{"start":{"line":608,"column":6},"end":{"line":608,"column":15}},"158":{"start":{"line":609,"column":6},"end":{"line":617,"column":7}},"159":{"start":{"line":610,"column":8},"end":{"line":610,"column":49}},"160":{"start":{"line":611,"column":13},"end":{"line":617,"column":7}},"161":{"start":{"line":612,"column":8},"end":{"line":612,"column":22}},"162":{"start":{"line":613,"column":13},"end":{"line":617,"column":7}},"163":{"start":{"line":614,"column":8},"end":{"line":614,"column":23}},"164":{"start":{"line":616,"column":8},"end":{"line":616,"column":18}},"165":{"start":{"line":618,"column":6},"end":{"line":618,"column":54}},"166":{"start":{"line":621,"column":4},"end":{"line":621,"column":39}},"167":{"start":{"line":623,"column":4},"end":{"line":625,"column":5}},"168":{"start":{"line":624,"column":6},"end":{"line":624,"column":39}},"169":{"start":{"line":627,"column":4},"end":{"line":627,"column":20}},"170":{"start":{"line":653,"column":2},"end":{"line":696,"column":4}},"171":{"start":{"line":654,"column":4},"end":{"line":654,"column":20}},"172":{"start":{"line":656,"column":4},"end":{"line":658,"column":5}},"173":{"start":{"line":657,"column":6},"end":{"line":657,"column":19}},"174":{"start":{"line":660,"column":4},"end":{"line":660,"column":74}},"175":{"start":{"line":661,"column":4},"end":{"line":663,"column":5}},"176":{"start":{"line":662,"column":6},"end":{"line":662,"column":62}},"177":{"start":{"line":664,"column":4},"end":{"line":664,"column":41}},"178":{"start":{"line":666,"column":4},"end":{"line":672,"column":5}},"179":{"start":{"line":667,"column":6},"end":{"line":670,"column":7}},"180":{"start":{"line":668,"column":8},"end":{"line":668,"column":25}},"181":{"start":{"line":669,"column":8},"end":{"line":669,"column":15}},"182":{"start":{"line":671,"column":6},"end":{"line":671,"column":20}},"183":{"start":{"line":674,"column":4},"end":{"line":692,"column":5}},"184":{"start":{"line":675,"column":6},"end":{"line":690,"column":9}},"185":{"start":{"line":676,"column":8},"end":{"line":679,"column":9}},"186":{"start":{"line":677,"column":10},"end":{"line":677,"column":18}},"187":{"start":{"line":678,"column":10},"end":{"line":678,"column":17}},"188":{"start":{"line":680,"column":8},"end":{"line":680,"column":21}},"189":{"start":{"line":682,"column":8},"end":{"line":687,"column":9}},"190":{"start":{"line":683,"column":10},"end":{"line":683,"column":48}},"191":{"start":{"line":685,"column":10},"end":{"line":685,"column":19}},"192":{"start":{"line":686,"column":10},"end":{"line":686,"column":17}},"193":{"start":{"line":689,"column":8},"end":{"line":689,"column":26}},"194":{"start":{"line":691,"column":6},"end":{"line":691,"column":13}},"195":{"start":{"line":694,"column":4},"end":{"line":694,"column":45}},"196":{"start":{"line":695,"column":4},"end":{"line":695,"column":38}},"197":{"start":{"line":715,"column":2},"end":{"line":721,"column":4}},"198":{"start":{"line":716,"column":4},"end":{"line":716,"column":48}},"199":{"start":{"line":717,"column":4},"end":{"line":719,"column":5}},"200":{"start":{"line":718,"column":6},"end":{"line":718,"column":34}},"201":{"start":{"line":720,"column":4},"end":{"line":720,"column":51}},"202":{"start":{"line":727,"column":0},"end":{"line":727,"column":37}},"203":{"start":{"line":728,"column":0},"end":{"line":728,"column":46}},"204":{"start":{"line":729,"column":0},"end":{"line":729,"column":40}},"205":{"start":{"line":730,"column":0},"end":{"line":730,"column":52}},"206":{"start":{"line":731,"column":0},"end":{"line":731,"column":46}},"207":{"start":{"line":732,"column":0},"end":{"line":732,"column":48}},"208":{"start":{"line":733,"column":0},"end":{"line":733,"column":42}},"209":{"start":{"line":734,"column":0},"end":{"line":734,"column":50}},"210":{"start":{"line":735,"column":0},"end":{"line":735,"column":40}},"211":{"start":{"line":736,"column":0},"end":{"line":736,"column":48}},"212":{"start":{"line":737,"column":0},"end":{"line":737,"column":34}},"213":{"start":{"line":738,"column":0},"end":{"line":738,"column":58}},"214":{"start":{"line":739,"column":0},"end":{"line":739,"column":26}}},"branchMap":{"1":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"2":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"4":{"line":97,"type":"binary-expr","locations":[{"start":{"line":97,"column":8},"end":{"line":97,"column":36}},{"start":{"line":97,"column":40},"end":{"line":97,"column":65}}]},"5":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"6":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":6},"end":{"line":104,"column":6}},{"start":{"line":104,"column":6},"end":{"line":104,"column":6}}]},"7":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":55},"end":{"line":105,"column":62}},{"start":{"line":105,"column":65},"end":{"line":105,"column":73}}]},"8":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"10":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":21}},{"start":{"line":111,"column":25},"end":{"line":111,"column":51}}]},"11":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":6},"end":{"line":112,"column":6}},{"start":{"line":112,"column":6},"end":{"line":112,"column":6}}]},"12":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":10},"end":{"line":112,"column":28}},{"start":{"line":112,"column":32},"end":{"line":112,"column":50}}]},"13":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"14":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"15":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"16":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":10},"end":{"line":119,"column":30}},{"start":{"line":119,"column":34},"end":{"line":119,"column":57}}]},"17":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":50},"end":{"line":173,"column":54}},{"start":{"line":173,"column":58},"end":{"line":173,"column":60}}]},"18":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"19":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":16}},{"start":{"line":187,"column":20},"end":{"line":187,"column":35}}]},"20":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":14},"end":{"line":201,"column":21}},{"start":{"line":201,"column":25},"end":{"line":201,"column":27}}]},"21":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":43}},{"start":{"line":202,"column":47},"end":{"line":202,"column":61}},{"start":{"line":202,"column":66},"end":{"line":202,"column":85}}]},"22":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"23":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"24":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"25":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"26":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"27":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"28":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"29":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"30":{"line":307,"type":"binary-expr","locations":[{"start":{"line":307,"column":12},"end":{"line":307,"column":16}},{"start":{"line":307,"column":20},"end":{"line":307,"column":25}}]},"31":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":6},"end":{"line":346,"column":6}},{"start":{"line":346,"column":6},"end":{"line":346,"column":6}}]},"32":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":10},"end":{"line":346,"column":35}},{"start":{"line":346,"column":39},"end":{"line":346,"column":53}}]},"33":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"34":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":4},"end":{"line":376,"column":4}},{"start":{"line":376,"column":4},"end":{"line":376,"column":4}}]},"35":{"line":392,"type":"cond-expr","locations":[{"start":{"line":392,"column":30},"end":{"line":392,"column":49}},{"start":{"line":392,"column":52},"end":{"line":392,"column":54}}]},"36":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":6},"end":{"line":393,"column":6}},{"start":{"line":393,"column":6},"end":{"line":393,"column":6}}]},"37":{"line":393,"type":"binary-expr","locations":[{"start":{"line":393,"column":10},"end":{"line":393,"column":32}},{"start":{"line":393,"column":36},"end":{"line":393,"column":48}}]},"38":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":6},"end":{"line":396,"column":6}},{"start":{"line":396,"column":6},"end":{"line":396,"column":6}}]},"39":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":10},"end":{"line":396,"column":23}},{"start":{"line":396,"column":27},"end":{"line":396,"column":47}}]},"40":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":6},"end":{"line":414,"column":6}},{"start":{"line":414,"column":6},"end":{"line":414,"column":6}}]},"41":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":6}},{"start":{"line":437,"column":6},"end":{"line":437,"column":6}}]},"42":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":10},"end":{"line":437,"column":18}},{"start":{"line":437,"column":22},"end":{"line":437,"column":39}}]},"43":{"line":441,"type":"binary-expr","locations":[{"start":{"line":441,"column":19},"end":{"line":441,"column":29}},{"start":{"line":441,"column":33},"end":{"line":441,"column":49}}]},"44":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":15},"end":{"line":443,"column":44}},{"start":{"line":443,"column":48},"end":{"line":443,"column":127}}]},"45":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":6}},{"start":{"line":446,"column":6},"end":{"line":446,"column":6}}]},"46":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":4},"end":{"line":490,"column":4}},{"start":{"line":490,"column":4},"end":{"line":490,"column":4}}]},"47":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":548,"column":4}},{"start":{"line":548,"column":4},"end":{"line":548,"column":4}}]},"48":{"line":552,"type":"if","locations":[{"start":{"line":552,"column":8},"end":{"line":552,"column":8}},{"start":{"line":552,"column":8},"end":{"line":552,"column":8}}]},"49":{"line":593,"type":"cond-expr","locations":[{"start":{"line":593,"column":24},"end":{"line":593,"column":40}},{"start":{"line":593,"column":43},"end":{"line":593,"column":47}}]},"50":{"line":594,"type":"cond-expr","locations":[{"start":{"line":594,"column":21},"end":{"line":594,"column":43}},{"start":{"line":594,"column":46},"end":{"line":594,"column":50}}]},"51":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":4},"end":{"line":599,"column":4}},{"start":{"line":599,"column":4},"end":{"line":599,"column":4}}]},"52":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":6},"end":{"line":609,"column":6}},{"start":{"line":609,"column":6},"end":{"line":609,"column":6}}]},"53":{"line":609,"type":"binary-expr","locations":[{"start":{"line":609,"column":10},"end":{"line":609,"column":16}},{"start":{"line":609,"column":20},"end":{"line":609,"column":33}}]},"54":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":13},"end":{"line":611,"column":13}},{"start":{"line":611,"column":13},"end":{"line":611,"column":13}}]},"55":{"line":611,"type":"binary-expr","locations":[{"start":{"line":611,"column":17},"end":{"line":611,"column":23}},{"start":{"line":611,"column":27},"end":{"line":611,"column":41}}]},"56":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":13},"end":{"line":613,"column":13}},{"start":{"line":613,"column":13},"end":{"line":613,"column":13}}]},"57":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":17},"end":{"line":613,"column":24}},{"start":{"line":613,"column":28},"end":{"line":613,"column":41}}]},"58":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":4},"end":{"line":623,"column":4}},{"start":{"line":623,"column":4},"end":{"line":623,"column":4}}]},"59":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":4},"end":{"line":656,"column":4}},{"start":{"line":656,"column":4},"end":{"line":656,"column":4}}]},"60":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":4},"end":{"line":661,"column":4}},{"start":{"line":661,"column":4},"end":{"line":661,"column":4}}]},"61":{"line":666,"type":"if","locations":[{"start":{"line":666,"column":4},"end":{"line":666,"column":4}},{"start":{"line":666,"column":4},"end":{"line":666,"column":4}}]},"62":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":6},"end":{"line":667,"column":6}},{"start":{"line":667,"column":6},"end":{"line":667,"column":6}}]},"63":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":4},"end":{"line":674,"column":4}},{"start":{"line":674,"column":4},"end":{"line":674,"column":4}}]},"64":{"line":676,"type":"if","locations":[{"start":{"line":676,"column":8},"end":{"line":676,"column":8}},{"start":{"line":676,"column":8},"end":{"line":676,"column":8}}]},"65":{"line":717,"type":"if","locations":[{"start":{"line":717,"column":4},"end":{"line":717,"column":4}},{"start":{"line":717,"column":4},"end":{"line":717,"column":4}}]}},"code":["var utils = require('./utils'),","  _tags = require('./tags'),","  _filters = require('./filters'),","  parser = require('./parser'),","  dateformatter = require('./dateformatter'),","  loaders = require('./loaders');","","/**"," * Swig version number as a string."," * @example"," * if (swig.version === \"1.4.2\") { ... }"," *"," * @type {String}"," */","exports.version = \"1.4.2\";","","/**"," * Swig Options Object. This object can be passed to many of the API-level Swig methods to control various aspects of the engine. All keys are optional."," * @typedef {Object} SwigOpts"," * @property {boolean} autoescape  Controls whether or not variable output will automatically be escaped for safe HTML output. Defaults to <code data-language=\"js\">true</code>. Functions executed in variable statements will not be auto-escaped. Your application/functions should take care of their own auto-escaping."," * @property {array}   varControls Open and close controls for variables. Defaults to <code data-language=\"js\">['{{', '}}']</code>."," * @property {array}   tagControls Open and close controls for tags. Defaults to <code data-language=\"js\">['{%', '%}']</code>."," * @property {array}   cmtControls Open and close controls for comments. Defaults to <code data-language=\"js\">['{#', '#}']</code>."," * @property {object}  locals      Default variable context to be passed to <strong>all</strong> templates."," * @property {CacheOptions} cache Cache control for templates. Defaults to saving in <code data-language=\"js\">'memory'</code>. Send <code data-language=\"js\">false</code> to disable. Send an object with <code data-language=\"js\">get</code> and <code data-language=\"js\">set</code> functions to customize."," * @property {TemplateLoader} loader The method that Swig will use to load templates. Defaults to <var>swig.loaders.fs</var>."," */","var defaultOptions = {","    autoescape: true,","    varControls: ['{{', '}}'],","    tagControls: ['{%', '%}'],","    cmtControls: ['{#', '#}'],","    locals: {},","    /**","     * Cache control for templates. Defaults to saving all templates into memory.","     * @typedef {boolean|string|object} CacheOptions","     * @example","     * // Default","     * swig.setDefaults({ cache: 'memory' });","     * @example","     * // Disables caching in Swig.","     * swig.setDefaults({ cache: false });","     * @example","     * // Custom cache storage and retrieval","     * swig.setDefaults({","     *   cache: {","     *     get: function (key) { ... },","     *     set: function (key, val) { ... }","     *   }","     * });","     */","    cache: 'memory',","    /**","     * Configure Swig to use either the <var>swig.loaders.fs</var> or <var>swig.loaders.memory</var> template loader. Or, you can write your own!","     * For more information, please see the <a href=\"../loaders/\">Template Loaders documentation</a>.","     * @typedef {class} TemplateLoader","     * @example","     * // Default, FileSystem loader","     * swig.setDefaults({ loader: swig.loaders.fs() });","     * @example","     * // FileSystem loader allowing a base path","     * // With this, you don't use relative URLs in your template references","     * swig.setDefaults({ loader: swig.loaders.fs(__dirname + '/templates') });","     * @example","     * // Memory Loader","     * swig.setDefaults({ loader: swig.loaders.memory({","     *   layout: '{% block foo %}{% endblock %}',","     *   page1: '{% extends \"layout\" %}{% block foo %}Tacos!{% endblock %}'","     * })});","     */","    loader: loaders.fs()","  },","  defaultInstance;","","/**"," * Empty function, used in templates."," * @return {string} Empty string"," * @private"," */","function efn() { return ''; }","","/**"," * Validate the Swig options object."," * @param  {?SwigOpts} options Swig options object."," * @return {undefined}      This method will throw errors if anything is wrong."," * @private"," */","function validateOptions(options) {","  if (!options) {","    return;","  }","","  utils.each(['varControls', 'tagControls', 'cmtControls'], function (key) {","    if (!options.hasOwnProperty(key)) {","      return;","    }","    if (!utils.isArray(options[key]) || options[key].length !== 2) {","      throw new Error('Option \"' + key + '\" must be an array containing 2 different control strings.');","    }","    if (options[key][0] === options[key][1]) {","      throw new Error('Option \"' + key + '\" open and close controls must not be the same.');","    }","    utils.each(options[key], function (a, i) {","      if (a.length < 2) {","        throw new Error('Option \"' + key + '\" ' + (i ? 'open ' : 'close ') + 'control must be at least 2 characters. Saw \"' + a + '\" instead.');","      }","    });","  });","","  if (options.hasOwnProperty('cache')) {","    if (options.cache && options.cache !== 'memory') {","      if (!options.cache.get || !options.cache.set) {","        throw new Error('Invalid cache option ' + JSON.stringify(options.cache) + ' found. Expected \"memory\" or { get: function (key) { ... }, set: function (key, value) { ... } }.');","      }","    }","  }","  if (options.hasOwnProperty('loader')) {","    if (options.loader) {","      if (!options.loader.load || !options.loader.resolve) {","        throw new Error('Invalid loader option ' + JSON.stringify(options.loader) + ' found. Expected { load: function (pathname, cb) { ... }, resolve: function (to, from) { ... } }.');","      }","    }","  }","","}","","/**"," * Set defaults for the base and all new Swig environments."," *"," * @example"," * swig.setDefaults({ cache: false });"," * // => Disables Cache"," *"," * @example"," * swig.setDefaults({ locals: { now: function () { return new Date(); } }});"," * // => sets a globally accessible method for all template"," * //    contexts, allowing you to print the current date"," * // => {{ now()|date('F jS, Y') }}"," *"," * @param  {SwigOpts} [options={}] Swig options object."," * @return {undefined}"," */","exports.setDefaults = function (options) {","  validateOptions(options);","  defaultInstance.options = utils.extend(defaultInstance.options, options);","};","","/**"," * Set the default TimeZone offset for date formatting via the date filter. This is a global setting and will affect all Swig environments, old or new."," * @param  {number} offset Offset from GMT, in minutes."," * @return {undefined}"," */","exports.setDefaultTZOffset = function (offset) {","  dateformatter.tzOffset = offset;","};","","/**"," * Create a new, separate Swig compile/render environment."," *"," * @example"," * var swig = require('swig');"," * var myswig = new swig.Swig({varControls: ['<%=', '%>']});"," * myswig.render('Tacos are <%= tacos =>!', { locals: { tacos: 'delicious' }});"," * // => Tacos are delicious!"," * swig.render('Tacos are <%= tacos =>!', { locals: { tacos: 'delicious' }});"," * // => 'Tacos are <%= tacos =>!'"," *"," * @param  {SwigOpts} [opts={}] Swig options object."," * @return {object}      New Swig environment."," */","exports.Swig = function (opts) {","  validateOptions(opts);","  this.options = utils.extend({}, defaultOptions, opts || {});","  this.cache = {};","  this.extensions = {};","  var self = this,","    tags = _tags,","    filters = _filters;","","  /**","   * Get combined locals context.","   * @param  {?SwigOpts} [options] Swig options object.","   * @return {object}         Locals context.","   * @private","   */","  function getLocals(options) {","    if (!options || !options.locals) {","      return self.options.locals;","    }","","    return utils.extend({}, self.options.locals, options.locals);","  }","","  /**","   * Determine whether caching is enabled via the options provided and/or defaults","   * @param  {SwigOpts} [options={}] Swig Options Object","   * @return {boolean}","   * @private","   */","  function shouldCache(options) {","    options = options || {};","    return (options.hasOwnProperty('cache') && !options.cache) || !self.options.cache;","  }","","  /**","   * Get compiled template from the cache.","   * @param  {string} key           Name of template.","   * @return {object|undefined}     Template function and tokens.","   * @private","   */","  function cacheGet(key, options) {","    if (shouldCache(options)) {","      return;","    }","","    if (self.options.cache === 'memory') {","      return self.cache[key];","    }","","    return self.options.cache.get(key);","  }","","  /**","   * Store a template in the cache.","   * @param  {string} key Name of template.","   * @param  {object} val Template function and tokens.","   * @return {undefined}","   * @private","   */","  function cacheSet(key, options, val) {","    if (shouldCache(options)) {","      return;","    }","","    if (self.options.cache === 'memory') {","      self.cache[key] = val;","      return;","    }","","    self.options.cache.set(key, val);","  }","","  /**","   * Clears the in-memory template cache.","   *","   * @example","   * swig.invalidateCache();","   *","   * @return {undefined}","   */","  this.invalidateCache = function () {","    if (self.options.cache === 'memory') {","      self.cache = {};","    }","  };","","  /**","   * Add a custom filter for swig variables.","   *","   * @example","   * function replaceMs(input) { return input.replace(/m/g, 'f'); }","   * swig.setFilter('replaceMs', replaceMs);","   * // => {{ \"onomatopoeia\"|replaceMs }}","   * // => onofatopeia","   *","   * @param {string}    name    Name of filter, used in templates. <strong>Will</strong> overwrite previously defined filters, if using the same name.","   * @param {function}  method  Function that acts against the input. See <a href=\"/docs/filters/#custom\">Custom Filters</a> for more information.","   * @return {undefined}","   */","  this.setFilter = function (name, method) {","    if (typeof method !== \"function\") {","      throw new Error('Filter \"' + name + '\" is not a valid function.');","    }","    filters[name] = method;","  };","","  /**","   * Add a custom tag. To expose your own extensions to compiled template code, see <code data-language=\"js\">swig.setExtension</code>.","   *","   * For a more in-depth explanation of writing custom tags, see <a href=\"../extending/#tags\">Custom Tags</a>.","   *","   * @example","   * var tacotag = require('./tacotag');","   * swig.setTag('tacos', tacotag.parse, tacotag.compile, tacotag.ends, tacotag.blockLevel);","   * // => {% tacos %}Make this be tacos.{% endtacos %}","   * // => Tacos tacos tacos tacos.","   *","   * @param  {string} name      Tag name.","   * @param  {function} parse   Method for parsing tokens.","   * @param  {function} compile Method for compiling renderable output.","   * @param  {boolean} [ends=false]     Whether or not this tag requires an <i>end</i> tag.","   * @param  {boolean} [blockLevel=false] If false, this tag will not be compiled outside of <code>block</code> tags when extending a parent template.","   * @return {undefined}","   */","  this.setTag = function (name, parse, compile, ends, blockLevel) {","    if (typeof parse !== 'function') {","      throw new Error('Tag \"' + name + '\" parse method is not a valid function.');","    }","","    if (typeof compile !== 'function') {","      throw new Error('Tag \"' + name + '\" compile method is not a valid function.');","    }","","    tags[name] = {","      parse: parse,","      compile: compile,","      ends: ends || false,","      block: !!blockLevel","    };","  };","","  /**","   * Add extensions for custom tags. This allows any custom tag to access a globally available methods via a special globally available object, <var>_ext</var>, in templates.","   *","   * @example","   * swig.setExtension('trans', function (v) { return translate(v); });","   * function compileTrans(compiler, args, content, parent, options) {","   *   return '_output += _ext.trans(' + args[0] + ');'","   * };","   * swig.setTag('trans', parseTrans, compileTrans, true);","   *","   * @param  {string} name   Key name of the extension. Accessed via <code data-language=\"js\">_ext[name]</code>.","   * @param  {*}      object The method, value, or object that should be available via the given name.","   * @return {undefined}","   */","  this.setExtension = function (name, object) {","    self.extensions[name] = object;","  };","","  /**","   * Parse a given source string into tokens.","   *","   * @param  {string} source  Swig template source.","   * @param  {SwigOpts} [options={}] Swig options object.","   * @return {object} parsed  Template tokens object.","   * @private","   */","  this.parse = function (source, options) {","    validateOptions(options);","","    var locals = getLocals(options),","      opt = {},","      k;","","    for (k in options) {","      if (options.hasOwnProperty(k) && k !== 'locals') {","        opt[k] = options[k];","      }","    }","","    options = utils.extend({}, self.options, opt);","    options.locals = locals;","","    return parser.parse(this, source, options, tags, filters);","  };","","  /**","   * Parse a given file into tokens.","   *","   * @param  {string} pathname  Full path to file to parse.","   * @param  {SwigOpts} [options={}]   Swig options object.","   * @return {object} parsed    Template tokens object.","   * @private","   */","  this.parseFile = function (pathname, options) {","    var src;","","    if (!options) {","      options = {};","    }","","    pathname = self.options.loader.resolve(pathname, options.resolveFrom);","","    src = self.options.loader.load(pathname);","","    if (!options.filename) {","      options = utils.extend({ filename: pathname }, options);","    }","","    return self.parse(src, options);","  };","","  /**","   * Re-Map blocks within a list of tokens to the template's block objects.","   * @param  {array}  tokens   List of tokens for the parent object.","   * @param  {object} template Current template that needs to be mapped to the  parent's block and token list.","   * @return {array}","   * @private","   */","  function remapBlocks(blocks, tokens) {","    return utils.map(tokens, function (token) {","      var args = token.args ? token.args.join('') : '';","      if (token.name === 'block' && blocks[args]) {","        token = blocks[args];","      }","      if (token.content && token.content.length) {","        token.content = remapBlocks(blocks, token.content);","      }","      return token;","    });","  }","","  /**","   * Import block-level tags to the token list that are not actual block tags.","   * @param  {array} blocks List of block-level tags.","   * @param  {array} tokens List of tokens to render.","   * @return {undefined}","   * @private","   */","  function importNonBlocks(blocks, tokens) {","    var temp = [];","    utils.each(blocks, function (block) { temp.push(block); });","    utils.each(temp.reverse(), function (block) {","      if (block.name !== 'block') {","        tokens.unshift(block);","      }","    });","  }","","  /**","   * Recursively compile and get parents of given parsed token object.","   *","   * @param  {object} tokens    Parsed tokens from template.","   * @param  {SwigOpts} [options={}]   Swig options object.","   * @return {object}           Parsed tokens from parent templates.","   * @private","   */","  function getParents(tokens, options) {","    var parentName = tokens.parent,","      parentFiles = [],","      parents = [],","      parentFile,","      parent,","      l;","","    while (parentName) {","      if (!options || !options.filename) {","        throw new Error('Cannot extend \"' + parentName + '\" because current template has no filename.');","      }","","      parentFile = parentFile || options.filename;","      parentFile = self.options.loader.resolve(parentName, parentFile);","      parent = cacheGet(parentFile, options) || self.parseFile(parentFile, utils.extend({}, options, { filename: parentFile }));","      parentName = parent.parent;","","      if (parentFiles.indexOf(parentFile) !== -1) {","        throw new Error('Illegal circular extends of \"' + parentFile + '\".');","      }","      parentFiles.push(parentFile);","","      parents.push(parent);","    }","","    // Remap each parents'(1) blocks onto its own parent(2), receiving the full token list for rendering the original parent(1) on its own.","    l = parents.length;","    for (l = parents.length - 2; l >= 0; l -= 1) {","      parents[l].tokens = remapBlocks(parents[l].blocks, parents[l + 1].tokens);","      importNonBlocks(parents[l].blocks, parents[l].tokens);","    }","","    return parents;","  }","","  /**","   * Pre-compile a source string into a cache-able template function.","   *","   * @example","   * swig.precompile('{{ tacos }}');","   * // => {","   * //      tpl: function (_swig, _locals, _filters, _utils, _fn) { ... },","   * //      tokens: {","   * //        name: undefined,","   * //        parent: null,","   * //        tokens: [...],","   * //        blocks: {}","   * //      }","   * //    }","   *","   * In order to render a pre-compiled template, you must have access to filters and utils from Swig. <var>efn</var> is simply an empty function that does nothing.","   *","   * @param  {string} source  Swig template source string.","   * @param  {SwigOpts} [options={}] Swig options object.","   * @return {object}         Renderable function and tokens object.","   */","  this.precompile = function (source, options) {","    var tokens = self.parse(source, options),","      parents = getParents(tokens, options),","      tpl;","","    if (parents.length) {","      // Remap the templates first-parent's tokens using this template's blocks.","      tokens.tokens = remapBlocks(tokens.blocks, parents[0].tokens);","      importNonBlocks(tokens.blocks, tokens.tokens);","    }","","    try {","      tpl = new Function('_swig', '_ctx', '_filters', '_utils', '_fn',","        '  var _ext = _swig.extensions,\\n' +","        '    _output = \"\";\\n' +","        parser.compile(tokens, parents, options) + '\\n' +","        '  return _output;\\n'","        );","    } catch (e) {","      utils.throwError(e, null, options.filename);","    }","","    return { tpl: tpl, tokens: tokens };","  };","","  /**","   * Compile and render a template string for final output.","   *","   * When rendering a source string, a file path should be specified in the options object in order for <var>extends</var>, <var>include</var>, and <var>import</var> to work properly. Do this by adding <code data-language=\"js\">{ filename: '/absolute/path/to/mytpl.html' }</code> to the options argument.","   *","   * @example","   * swig.render('{{ tacos }}', { locals: { tacos: 'Tacos!!!!' }});","   * // => Tacos!!!!","   *","   * @param  {string} source    Swig template source string.","   * @param  {SwigOpts} [options={}] Swig options object.","   * @return {string}           Rendered output.","   */","  this.render = function (source, options) {","    return self.compile(source, options)();","  };","","  /**","   * Compile and render a template file for final output. This is most useful for libraries like Express.js.","   *","   * @example","   * swig.renderFile('./template.html', {}, function (err, output) {","   *   if (err) {","   *     throw err;","   *   }","   *   console.log(output);","   * });","   *","   * @example","   * swig.renderFile('./template.html', {});","   * // => output","   *","   * @param  {string}   pathName    File location.","   * @param  {object}   [locals={}] Template variable context.","   * @param  {Function} [cb] Asyncronous callback function. If not provided, <var>compileFile</var> will run syncronously.","   * @return {string}             Rendered output.","   */","  this.renderFile = function (pathName, locals, cb) {","    if (cb) {","      self.compileFile(pathName, {}, function (err, fn) {","        var result;","","        if (err) {","          cb(err);","          return;","        }","","        try {","          result = fn(locals);","        } catch (err2) {","          cb(err2);","          return;","        }","","        cb(null, result);","      });","      return;","    }","","    return self.compileFile(pathName)(locals);","  };","","  /**","   * Compile string source into a renderable template function.","   *","   * @example","   * var tpl = swig.compile('{{ tacos }}');","   * // => {","   * //      [Function: compiled]","   * //      parent: null,","   * //      tokens: [{ compile: [Function] }],","   * //      blocks: {}","   * //    }","   * tpl({ tacos: 'Tacos!!!!' });","   * // => Tacos!!!!","   *","   * When compiling a source string, a file path should be specified in the options object in order for <var>extends</var>, <var>include</var>, and <var>import</var> to work properly. Do this by adding <code data-language=\"js\">{ filename: '/absolute/path/to/mytpl.html' }</code> to the options argument.","   *","   * @param  {string} source    Swig template source string.","   * @param  {SwigOpts} [options={}] Swig options object.","   * @return {function}         Renderable function with keys for parent, blocks, and tokens.","   */","  this.compile = function (source, options) {","    var key = options ? options.filename : null,","      cached = key ? cacheGet(key, options) : null,","      context,","      contextLength,","      pre;","","    if (cached) {","      return cached;","    }","","    context = getLocals(options);","    contextLength = utils.keys(context).length;","    pre = this.precompile(source, options);","","    function compiled(locals) {","      var lcls;","      if (locals && contextLength) {","        lcls = utils.extend({}, context, locals);","      } else if (locals && !contextLength) {","        lcls = locals;","      } else if (!locals && contextLength) {","        lcls = context;","      } else {","        lcls = {};","      }","      return pre.tpl(self, lcls, filters, utils, efn);","    }","","    utils.extend(compiled, pre.tokens);","","    if (key) {","      cacheSet(key, options, compiled);","    }","","    return compiled;","  };","","  /**","   * Compile a source file into a renderable template function.","   *","   * @example","   * var tpl = swig.compileFile('./mytpl.html');","   * // => {","   * //      [Function: compiled]","   * //      parent: null,","   * //      tokens: [{ compile: [Function] }],","   * //      blocks: {}","   * //    }","   * tpl({ tacos: 'Tacos!!!!' });","   * // => Tacos!!!!","   *","   * @example","   * swig.compileFile('/myfile.txt', { varControls: ['<%=', '=%>'], tagControls: ['<%', '%>']});","   * // => will compile 'myfile.txt' using the var and tag controls as specified.","   *","   * @param  {string} pathname  File location.","   * @param  {SwigOpts} [options={}] Swig options object.","   * @param  {Function} [cb] Asyncronous callback function. If not provided, <var>compileFile</var> will run syncronously.","   * @return {function}         Renderable function with keys for parent, blocks, and tokens.","   */","  this.compileFile = function (pathname, options, cb) {","    var src, cached;","","    if (!options) {","      options = {};","    }","","    pathname = self.options.loader.resolve(pathname, options.resolveFrom);","    if (!options.filename) {","      options = utils.extend({ filename: pathname }, options);","    }","    cached = cacheGet(pathname, options);","","    if (cached) {","      if (cb) {","        cb(null, cached);","        return;","      }","      return cached;","    }","","    if (cb) {","      self.options.loader.load(pathname, function (err, src) {","        if (err) {","          cb(err);","          return;","        }","        var compiled;","","        try {","          compiled = self.compile(src, options);","        } catch (err2) {","          cb(err2);","          return;","        }","","        cb(err, compiled);","      });","      return;","    }","","    src = self.options.loader.load(pathname);","    return self.compile(src, options);","  };","","  /**","   * Run a pre-compiled template function. This is most useful in the browser when you've pre-compiled your templates with the Swig command-line tool.","   *","   * @example","   * $ swig compile ./mytpl.html --wrap-start=\"var mytpl = \" > mytpl.js","   * @example","   * <script src=\"mytpl.js\"></script>","   * <script>","   *   swig.run(mytpl, {});","   *   // => \"rendered template...\"","   * </script>","   *","   * @param  {function} tpl       Pre-compiled Swig template function. Use the Swig CLI to compile your templates.","   * @param  {object} [locals={}] Template variable context.","   * @param  {string} [filepath]  Filename used for caching the template.","   * @return {string}             Rendered output.","   */","  this.run = function (tpl, locals, filepath) {","    var context = getLocals({ locals: locals });","    if (filepath) {","      cacheSet(filepath, {}, tpl);","    }","    return tpl(self, context, filters, utils, efn);","  };","};","","/*!"," * Export methods publicly"," */","defaultInstance = new exports.Swig();","exports.setFilter = defaultInstance.setFilter;","exports.setTag = defaultInstance.setTag;","exports.setExtension = defaultInstance.setExtension;","exports.parseFile = defaultInstance.parseFile;","exports.precompile = defaultInstance.precompile;","exports.compile = defaultInstance.compile;","exports.compileFile = defaultInstance.compileFile;","exports.render = defaultInstance.render;","exports.renderFile = defaultInstance.renderFile;","exports.run = defaultInstance.run;","exports.invalidateCache = defaultInstance.invalidateCache;","exports.loaders = loaders;",""],"l":{"1":1,"15":1,"28":1,"80":1,"88":1,"89":1,"90":1,"93":0,"94":0,"95":0,"97":0,"98":0,"100":0,"101":0,"103":0,"104":0,"105":0,"110":0,"111":0,"112":0,"113":0,"117":0,"118":0,"119":0,"120":0,"143":1,"144":0,"145":0,"153":1,"154":0,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"186":1,"187":0,"188":0,"191":0,"200":1,"201":0,"202":0,"211":1,"212":0,"213":0,"216":0,"217":0,"220":0,"230":1,"231":0,"232":0,"235":0,"236":0,"237":0,"240":0,"251":1,"252":0,"253":0,"270":1,"271":0,"272":0,"274":0,"295":1,"296":0,"297":0,"300":0,"301":0,"304":0,"326":1,"327":0,"338":1,"339":0,"341":0,"345":0,"346":0,"347":0,"351":0,"352":0,"354":0,"365":1,"366":0,"368":0,"369":0,"372":0,"374":0,"376":0,"377":0,"380":0,"390":1,"391":0,"392":0,"393":0,"394":0,"396":0,"397":0,"399":0,"410":1,"411":0,"412":0,"413":0,"414":0,"415":0,"428":1,"429":0,"436":0,"437":0,"438":0,"441":0,"442":0,"443":0,"444":0,"446":0,"447":0,"449":0,"451":0,"455":0,"456":0,"457":0,"458":0,"461":0,"485":1,"486":0,"490":0,"492":0,"493":0,"496":0,"497":0,"504":0,"507":0,"523":1,"524":0,"547":1,"548":0,"549":0,"550":0,"552":0,"553":0,"554":0,"557":0,"558":0,"560":0,"561":0,"564":0,"566":0,"569":0,"592":1,"593":0,"599":0,"600":0,"603":0,"604":0,"605":0,"607":1,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"616":0,"618":0,"621":0,"623":0,"624":0,"627":0,"653":1,"654":0,"656":0,"657":0,"660":0,"661":0,"662":0,"664":0,"666":0,"667":0,"668":0,"669":0,"671":0,"674":0,"675":0,"676":0,"677":0,"678":0,"680":0,"682":0,"683":0,"685":0,"686":0,"689":0,"691":0,"694":0,"695":0,"715":1,"716":0,"717":0,"718":0,"720":0,"727":1,"728":1,"729":1,"730":1,"731":1,"732":1,"733":1,"734":1,"735":1,"736":1,"737":1,"738":1,"739":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/utils.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":1,"47":1,"48":2,"49":2,"50":7,"51":7,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[1,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[1,0],"13":[2,0],"14":[7,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":33}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":21},"end":{"line":18,"column":44}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":19},"end":{"line":28,"column":42}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":34}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":80},"end":{"line":67,"column":95}}},"6":{"name":"(anonymous_6)","line":77,"loc":{"start":{"line":77,"column":15},"end":{"line":77,"column":34}}},"7":{"name":"(anonymous_7)","line":91,"loc":{"start":{"line":91,"column":22},"end":{"line":91,"column":46}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":14},"end":{"line":105,"column":33}}},"9":{"name":"(anonymous_9)","line":130,"loc":{"start":{"line":130,"column":17},"end":{"line":130,"column":29}}},"10":{"name":"(anonymous_10)","line":155,"loc":{"start":{"line":155,"column":15},"end":{"line":155,"column":30}}},"11":{"name":"(anonymous_11)","line":164,"loc":{"start":{"line":164,"column":26},"end":{"line":164,"column":42}}},"12":{"name":"(anonymous_12)","line":176,"loc":{"start":{"line":176,"column":21},"end":{"line":176,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":12}},"2":{"start":{"line":8,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":41}},"4":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":35}},"6":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":64}},"8":{"start":{"line":38,"column":0},"end":{"line":60,"column":2}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":11}},"10":{"start":{"line":41,"column":2},"end":{"line":57,"column":3}},"11":{"start":{"line":42,"column":4},"end":{"line":42,"column":10}},"12":{"start":{"line":43,"column":4},"end":{"line":43,"column":19}},"13":{"start":{"line":44,"column":4},"end":{"line":48,"column":5}},"14":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"15":{"start":{"line":46,"column":8},"end":{"line":46,"column":14}},"16":{"start":{"line":50,"column":4},"end":{"line":56,"column":5}},"17":{"start":{"line":51,"column":6},"end":{"line":55,"column":7}},"18":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"19":{"start":{"line":53,"column":10},"end":{"line":53,"column":16}},"20":{"start":{"line":59,"column":2},"end":{"line":59,"column":13}},"21":{"start":{"line":67,"column":0},"end":{"line":69,"column":2}},"22":{"start":{"line":68,"column":2},"end":{"line":68,"column":105}},"23":{"start":{"line":77,"column":0},"end":{"line":97,"column":2}},"24":{"start":{"line":78,"column":2},"end":{"line":80,"column":6}},"25":{"start":{"line":81,"column":2},"end":{"line":95,"column":3}},"26":{"start":{"line":82,"column":4},"end":{"line":82,"column":19}},"27":{"start":{"line":84,"column":4},"end":{"line":89,"column":5}},"28":{"start":{"line":85,"column":6},"end":{"line":85,"column":34}},"29":{"start":{"line":86,"column":6},"end":{"line":88,"column":7}},"30":{"start":{"line":87,"column":8},"end":{"line":87,"column":14}},"31":{"start":{"line":91,"column":4},"end":{"line":94,"column":7}},"32":{"start":{"line":92,"column":6},"end":{"line":92,"column":37}},"33":{"start":{"line":93,"column":6},"end":{"line":93,"column":21}},"34":{"start":{"line":96,"column":2},"end":{"line":96,"column":18}},"35":{"start":{"line":105,"column":0},"end":{"line":123,"column":2}},"36":{"start":{"line":106,"column":2},"end":{"line":108,"column":6}},"37":{"start":{"line":110,"column":2},"end":{"line":121,"column":3}},"38":{"start":{"line":111,"column":4},"end":{"line":111,"column":19}},"39":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"40":{"start":{"line":113,"column":6},"end":{"line":113,"column":32}},"41":{"start":{"line":116,"column":4},"end":{"line":120,"column":5}},"42":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"43":{"start":{"line":118,"column":8},"end":{"line":118,"column":34}},"44":{"start":{"line":122,"column":2},"end":{"line":122,"column":16}},"45":{"start":{"line":130,"column":0},"end":{"line":148,"column":2}},"46":{"start":{"line":131,"column":2},"end":{"line":137,"column":8}},"47":{"start":{"line":139,"column":2},"end":{"line":146,"column":3}},"48":{"start":{"line":140,"column":4},"end":{"line":140,"column":24}},"49":{"start":{"line":141,"column":4},"end":{"line":145,"column":5}},"50":{"start":{"line":142,"column":6},"end":{"line":144,"column":7}},"51":{"start":{"line":143,"column":8},"end":{"line":143,"column":31}},"52":{"start":{"line":147,"column":2},"end":{"line":147,"column":16}},"53":{"start":{"line":155,"column":0},"end":{"line":167,"column":2}},"54":{"start":{"line":156,"column":2},"end":{"line":158,"column":3}},"55":{"start":{"line":157,"column":4},"end":{"line":157,"column":14}},"56":{"start":{"line":160,"column":2},"end":{"line":162,"column":3}},"57":{"start":{"line":161,"column":4},"end":{"line":161,"column":28}},"58":{"start":{"line":164,"column":2},"end":{"line":166,"column":5}},"59":{"start":{"line":165,"column":4},"end":{"line":165,"column":13}},"60":{"start":{"line":176,"column":0},"end":{"line":184,"column":2}},"61":{"start":{"line":177,"column":2},"end":{"line":179,"column":3}},"62":{"start":{"line":178,"column":4},"end":{"line":178,"column":34}},"63":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"64":{"start":{"line":181,"column":4},"end":{"line":181,"column":34}},"65":{"start":{"line":183,"column":2},"end":{"line":183,"column":33}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":6}},{"start":{"line":51,"column":6},"end":{"line":51,"column":6}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":52,"column":8}},{"start":{"line":52,"column":8},"end":{"line":52,"column":8}}]},"5":{"line":67,"type":"cond-expr","locations":[{"start":{"line":67,"column":64},"end":{"line":67,"column":77}},{"start":{"line":67,"column":80},"end":{"line":69,"column":1}}]},"6":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":95}},{"start":{"line":68,"column":99},"end":{"line":68,"column":104}}]},"7":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":39}},{"start":{"line":68,"column":43},"end":{"line":68,"column":95}}]},"8":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"10":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"11":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"12":{"line":133,"type":"cond-expr","locations":[{"start":{"line":133,"column":31},"end":{"line":133,"column":66}},{"start":{"line":133,"column":69},"end":{"line":133,"column":71}}]},"13":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":10},"end":{"line":140,"column":17}},{"start":{"line":140,"column":21},"end":{"line":140,"column":23}}]},"14":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"15":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"16":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"17":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"18":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]}},"code":["var isArray;","","/**"," * Strip leading and trailing whitespace from a string."," * @param  {string} input"," * @return {string}       Stripped input."," */","exports.strip = function (input) {","  return input.replace(/^\\s+|\\s+$/g, '');","};","","/**"," * Test if a string starts with a given prefix."," * @param  {string} str    String to test against."," * @param  {string} prefix Prefix to check for."," * @return {boolean}"," */","exports.startsWith = function (str, prefix) {","  return str.indexOf(prefix) === 0;","};","","/**"," * Test if a string ends with a given suffix."," * @param  {string} str    String to test against."," * @param  {string} suffix Suffix to check for."," * @return {boolean}"," */","exports.endsWith = function (str, suffix) {","  return str.indexOf(suffix, str.length - suffix.length) !== -1;","};","","/**"," * Iterate over an array or object."," * @param  {array|object} obj Enumerable object."," * @param  {Function}     fn  Callback function executed for each item."," * @return {array|object}     The original input object."," */","exports.each = function (obj, fn) {","  var i, l;","","  if (isArray(obj)) {","    i = 0;","    l = obj.length;","    for (i; i < l; i += 1) {","      if (fn(obj[i], i, obj) === false) {","        break;","      }","    }","  } else {","    for (i in obj) {","      if (obj.hasOwnProperty(i)) {","        if (fn(obj[i], i, obj) === false) {","          break;","        }","      }","    }","  }","","  return obj;","};","","/**"," * Test if an object is an Array."," * @param {object} obj"," * @return {boolean}"," */","exports.isArray = isArray = (Array.hasOwnProperty('isArray')) ? Array.isArray : function (obj) {","  return obj ? (typeof obj === 'object' && Object.prototype.toString.call(obj).indexOf() !== -1) : false;","};","","/**"," * Test if an item in an enumerable matches your conditions."," * @param  {array|object}   obj   Enumerable object."," * @param  {Function}       fn    Executed for each item. Return true if your condition is met."," * @return {boolean}"," */","exports.some = function (obj, fn) {","  var i = 0,","    result,","    l;","  if (isArray(obj)) {","    l = obj.length;","","    for (i; i < l; i += 1) {","      result = fn(obj[i], i, obj);","      if (result) {","        break;","      }","    }","  } else {","    exports.each(obj, function (value, index) {","      result = fn(value, index, obj);","      return !result;","    });","  }","  return !!result;","};","","/**"," * Return a new enumerable, mapped by a given iteration function."," * @param  {object}   obj Enumerable object."," * @param  {Function} fn  Executed for each item. Return the item to replace the original item with."," * @return {object}       New mapped object."," */","exports.map = function (obj, fn) {","  var i = 0,","    result = [],","    l;","","  if (isArray(obj)) {","    l = obj.length;","    for (i; i < l; i += 1) {","      result[i] = fn(obj[i], i);","    }","  } else {","    for (i in obj) {","      if (obj.hasOwnProperty(i)) {","        result[i] = fn(obj[i], i);","      }","    }","  }","  return result;","};","","/**"," * Copy all of the properties in the source objects over to the destination object, and return the destination object. It's in-order, so the last source will override properties of the same name in previous arguments."," * @param {...object} arguments"," * @return {object}"," */","exports.extend = function () {","  var args = arguments,","    target = args[0],","    objs = (args.length > 1) ? Array.prototype.slice.call(args, 1) : [],","    i = 0,","    l = objs.length,","    key,","    obj;","","  for (i; i < l; i += 1) {","    obj = objs[i] || {};","    for (key in obj) {","      if (obj.hasOwnProperty(key)) {","        target[key] = obj[key];","      }","    }","  }","  return target;","};","","/**"," * Get all of the keys on an object."," * @param  {object} obj"," * @return {array}"," */","exports.keys = function (obj) {","  if (!obj) {","    return [];","  }","","  if (Object.keys) {","    return Object.keys(obj);","  }","","  return exports.map(obj, function (v, k) {","    return k;","  });","};","","/**"," * Throw an error with possible line number and source file."," * @param  {string} message Error message"," * @param  {number} [line]  Line number in template."," * @param  {string} [file]  Template file the error occured in."," * @throws {Error} No seriously, the point is to throw an error."," */","exports.throwError = function (message, line, file) {","  if (line) {","    message += ' on line ' + line;","  }","  if (file) {","    message += ' in file ' + file;","  }","  throw new Error(message + '.');","};",""],"l":{"1":1,"8":1,"9":0,"18":1,"19":0,"28":1,"29":0,"38":1,"39":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"50":0,"51":0,"52":0,"53":0,"59":0,"67":1,"68":0,"77":1,"78":0,"81":0,"82":0,"84":0,"85":0,"86":0,"87":0,"91":0,"92":0,"93":0,"96":0,"105":1,"106":0,"110":0,"111":0,"112":0,"113":0,"116":0,"117":0,"118":0,"122":0,"130":1,"131":1,"139":1,"140":2,"141":2,"142":7,"143":7,"147":1,"155":1,"156":0,"157":0,"160":0,"161":0,"164":0,"165":0,"176":1,"177":0,"178":0,"180":0,"181":0,"183":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":45}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":37}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"8":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"9":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"10":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"11":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"12":{"start":{"line":12,"column":0},"end":{"line":12,"column":35}},"13":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":31}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":31}},"16":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}}},"branchMap":{},"code":["exports.autoescape = require('./autoescape');","exports.block = require('./block');","exports[\"else\"] = require('./else');","exports.elseif = require('./elseif');","exports.elif = exports.elseif;","exports[\"extends\"] = require('./extends');","exports.filter = require('./filter');","exports[\"for\"] = require('./for');","exports[\"if\"] = require('./if');","exports[\"import\"] = require('./import');","exports.include = require('./include');","exports.macro = require('./macro');","exports.parent = require('./parent');","exports.raw = require('./raw');","exports.set = require('./set');","exports.spaceless = require('./spaceless');",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/autoescape.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/autoescape.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[0,0],"2":[0,0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":18},"end":{"line":18,"column":82}}},"2":{"name":"(anonymous_2)","line":21,"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":65}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":27}},"2":{"start":{"line":18,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":56}},"4":{"start":{"line":21,"column":0},"end":{"line":36,"column":2}},"5":{"start":{"line":22,"column":2},"end":{"line":22,"column":14}},"6":{"start":{"line":23,"column":2},"end":{"line":33,"column":5}},"7":{"start":{"line":24,"column":4},"end":{"line":31,"column":5}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":33}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":21}},"10":{"start":{"line":30,"column":6},"end":{"line":30,"column":13}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":102}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":14}},"13":{"start":{"line":37,"column":0},"end":{"line":37,"column":20}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":8},"end":{"line":24,"column":16}},{"start":{"line":25,"column":9},"end":{"line":25,"column":34}},{"start":{"line":26,"column":11},"end":{"line":26,"column":38}},{"start":{"line":26,"column":42},"end":{"line":26,"column":77}}]}},"code":["var utils = require('../utils'),","  strings = ['html', 'js'];","","/**"," * Control auto-escaping of variable output from within your templates."," *"," * @alias autoescape"," *"," * @example"," * // myvar = '<foo>';"," * {% autoescape true %}{{ myvar }}{% endautoescape %}"," * // => &lt;foo&gt;"," * {% autoescape false %}{{ myvar }}{% endautoescape %}"," * // => <foo>"," *"," * @param {boolean|string} control One of `true`, `false`, `\"js\"` or `\"html\"`."," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  return compiler(content, parents, options, blockName);","};","exports.parse = function (str, line, parser, types, stack, opts) {","  var matched;","  parser.on('*', function (token) {","    if (!matched &&","        (token.type === types.BOOL ||","          (token.type === types.STRING && strings.indexOf(token.match) === -1))","        ) {","      this.out.push(token.match);","      matched = true;","      return;","    }","    utils.throwError('Unexpected token \"' + token.match + '\" in autoescape tag', line, opts.filename);","  });","","  return true;","};","exports.ends = true;",""],"l":{"1":1,"18":1,"19":0,"21":1,"22":0,"23":0,"24":0,"28":0,"29":0,"30":0,"32":0,"35":0,"37":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/block.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/block.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":18},"end":{"line":13,"column":71}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":45}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":34}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":60}},"3":{"start":{"line":17,"column":0},"end":{"line":22,"column":2}},"4":{"start":{"line":18,"column":2},"end":{"line":20,"column":5}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":31}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":14}},"7":{"start":{"line":24,"column":0},"end":{"line":24,"column":20}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":21}}},"branchMap":{},"code":["/**"," * Defines a block in a template that can be overridden by a template extending this one and/or will override the current template's parent template block of the same name."," *"," * See <a href=\"#inheritance\">Template Inheritance</a> for more information."," *"," * @alias block"," *"," * @example"," * {% block body %}...{% endblock %}"," *"," * @param {literal}  name   Name of the block for use in parent and extended templates."," */","exports.compile = function (compiler, args, content, parents, options) {","  return compiler(content, parents, options, args.join(''));","};","","exports.parse = function (str, line, parser) {","  parser.on('*', function (token) {","    this.out.push(token.match);","  });","  return true;","};","","exports.ends = true;","exports.block = true;",""],"l":{"13":1,"14":0,"17":1,"18":0,"19":0,"21":0,"24":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/else.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/else.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":18},"end":{"line":15,"column":30}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":16},"end":{"line":19,"column":59}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":34}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":22}},"3":{"start":{"line":19,"column":0},"end":{"line":25,"column":2}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":5}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":112}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":65}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":22}},{"start":{"line":24,"column":26},"end":{"line":24,"column":63}}]}},"code":["/**"," * Used within an <code data-language=\"swig\">{% if %}</code> tag, the code block following this tag up until <code data-language=\"swig\">{% endif %}</code> will be rendered if the <i>if</i> statement returns false."," *"," * @alias else"," *"," * @example"," * {% if false %}"," *   statement1"," * {% else %}"," *   statement2"," * {% endif %}"," * // => statement2"," *"," */","exports.compile = function () {","  return '} else {\\n';","};","","exports.parse = function (str, line, parser, types, stack) {","  parser.on('*', function (token) {","    throw new Error('\"else\" tag does not accept any tokens. Found \"' + token.match + '\" on line ' + line + '.');","  });","","  return (stack.length && stack[stack.length - 1].name === 'if');","};",""],"l":{"15":1,"16":0,"19":1,"20":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/elseif.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/elseif.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0},"b":{"1":[0,0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":18},"end":{"line":21,"column":44}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":16},"end":{"line":25,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":37}},"2":{"start":{"line":21,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":50}},"4":{"start":{"line":25,"column":0},"end":{"line":28,"column":2}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":55}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":73}}},"branchMap":{"1":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":9},"end":{"line":27,"column":13}},{"start":{"line":27,"column":18},"end":{"line":27,"column":30}},{"start":{"line":27,"column":34},"end":{"line":27,"column":71}}]}},"code":["var ifparser = require('./if').parse;","","/**"," * Like <code data-language=\"swig\">{% else %}</code>, except this tag can take more conditional statements."," *"," * @alias elseif"," * @alias elif"," *"," * @example"," * {% if false %}"," *   Tacos"," * {% elseif true %}"," *   Burritos"," * {% else %}"," *   Churros"," * {% endif %}"," * // => Burritos"," *"," * @param {...mixed} conditional  Conditional statement that returns a truthy or falsy value."," */","exports.compile = function (compiler, args) {","  return '} else if (' + args.join(' ') + ') {\\n';","};","","exports.parse = function (str, line, parser, types, stack) {","  var okay = ifparser(str, line, parser, types, stack);","  return okay && (stack.length && stack[stack.length - 1].name === 'if');","};",""],"l":{"1":1,"21":1,"22":0,"25":1,"26":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/if.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/if.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":18},"end":{"line":42,"column":82}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":52}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":47}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":23},"end":{"line":64,"column":40}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":24},"end":{"line":71,"column":41}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":25},"end":{"line":75,"column":42}}}},"statementMap":{"1":{"start":{"line":42,"column":0},"end":{"line":46,"column":2}},"2":{"start":{"line":43,"column":2},"end":{"line":45,"column":8}},"3":{"start":{"line":48,"column":0},"end":{"line":84,"column":2}},"4":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"5":{"start":{"line":50,"column":4},"end":{"line":50,"column":79}},"6":{"start":{"line":53,"column":2},"end":{"line":62,"column":5}},"7":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"8":{"start":{"line":55,"column":6},"end":{"line":55,"column":86}},"9":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"10":{"start":{"line":58,"column":6},"end":{"line":58,"column":129}},"11":{"start":{"line":60,"column":4},"end":{"line":60,"column":31}},"12":{"start":{"line":61,"column":4},"end":{"line":61,"column":46}},"13":{"start":{"line":64,"column":2},"end":{"line":69,"column":5}},"14":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"15":{"start":{"line":66,"column":6},"end":{"line":66,"column":86}},"16":{"start":{"line":68,"column":4},"end":{"line":68,"column":31}},"17":{"start":{"line":71,"column":2},"end":{"line":73,"column":5}},"18":{"start":{"line":72,"column":4},"end":{"line":72,"column":31}},"19":{"start":{"line":75,"column":2},"end":{"line":81,"column":5}},"20":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"21":{"start":{"line":77,"column":6},"end":{"line":77,"column":86}},"22":{"start":{"line":79,"column":4},"end":{"line":79,"column":31}},"23":{"start":{"line":80,"column":4},"end":{"line":80,"column":30}},"24":{"start":{"line":83,"column":2},"end":{"line":83,"column":14}},"25":{"start":{"line":86,"column":0},"end":{"line":86,"column":20}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"2":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"3":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"4":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"5":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"6":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":24}},{"start":{"line":76,"column":28},"end":{"line":76,"column":39}}]}},"code":["/**"," * Used to create conditional statements in templates. Accepts most JavaScript valid comparisons."," *"," * Can be used in conjunction with <a href=\"#elseif\"><code data-language=\"swig\">{% elseif ... %}</code></a> and <a href=\"#else\"><code data-language=\"swig\">{% else %}</code></a> tags."," *"," * @alias if"," *"," * @example"," * {% if x %}{% endif %}"," * {% if !x %}{% endif %}"," * {% if not x %}{% endif %}"," *"," * @example"," * {% if x and y %}{% endif %}"," * {% if x && y %}{% endif %}"," * {% if x or y %}{% endif %}"," * {% if x || y %}{% endif %}"," * {% if x || (y && z) %}{% endif %}"," *"," * @example"," * {% if x [operator] y %}"," *   Operators: ==, !=, <, <=, >, >=, ===, !=="," * {% endif %}"," *"," * @example"," * {% if x == 'five' %}"," *   The operands can be also be string or number literals"," * {% endif %}"," *"," * @example"," * {% if x|lower === 'tacos' %}"," *   You can use filters on any operand in the statement."," * {% endif %}"," *"," * @example"," * {% if x in y %}"," *   If x is a value that is present in y, this will return true."," * {% endif %}"," *"," * @param {...mixed} conditional Conditional statement that returns a truthy or falsy value."," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  return 'if (' + args.join(' ') + ') { \\n' +","    compiler(content, parents, options, blockName) + '\\n' +","    '}';","};","","exports.parse = function (str, line, parser, types) {","  if (str === undefined) {","    throw new Error('No conditional statement provided on line ' + line + '.');","  }","","  parser.on(types.COMPARATOR, function (token) {","    if (this.isLast) {","      throw new Error('Unexpected logic \"' + token.match + '\" on line ' + line + '.');","    }","    if (this.prevToken.type === types.NOT) {","      throw new Error('Attempted logic \"not ' + token.match + '\" on line ' + line + '. Use !(foo ' + token.match + ') instead.');","    }","    this.out.push(token.match);","    this.filterApplyIdx.push(this.out.length);","  });","","  parser.on(types.NOT, function (token) {","    if (this.isLast) {","      throw new Error('Unexpected logic \"' + token.match + '\" on line ' + line + '.');","    }","    this.out.push(token.match);","  });","","  parser.on(types.BOOL, function (token) {","    this.out.push(token.match);","  });","","  parser.on(types.LOGIC, function (token) {","    if (!this.out.length || this.isLast) {","      throw new Error('Unexpected logic \"' + token.match + '\" on line ' + line + '.');","    }","    this.out.push(token.match);","    this.filterApplyIdx.pop();","  });","","  return true;","};","","exports.ends = true;",""],"l":{"42":1,"43":0,"48":1,"49":0,"50":0,"53":0,"54":0,"55":0,"57":0,"58":0,"60":0,"61":0,"64":0,"65":0,"66":0,"68":0,"71":0,"72":0,"75":0,"76":0,"77":0,"79":0,"80":0,"83":0,"86":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/extends.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/extends.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":18},"end":{"line":13,"column":30}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":16},"end":{"line":15,"column":28}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":42}},"2":{"start":{"line":13,"column":32},"end":{"line":13,"column":39}},"3":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":21}}},"branchMap":{},"code":["/**"," * Makes the current template extend a parent template. This tag must be the first item in your template."," *"," * See <a href=\"#inheritance\">Template Inheritance</a> for more information."," *"," * @alias extends"," *"," * @example"," * {% extends \"./layout.html\" %}"," *"," * @param {string} parentFile  Relative path to the file that this template extends."," */","exports.compile = function () { return; };","","exports.parse = function () {","  return true;","};","","exports.ends = false;",""],"l":{"13":1,"15":1,"16":0,"19":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/filter.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":82}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":52}}},"3":{"name":"check","line":38,"loc":{"start":{"line":38,"column":2},"end":{"line":38,"column":25}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":28},"end":{"line":44,"column":45}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":23},"end":{"line":55,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":19,"column":0},"end":{"line":33,"column":2}},"3":{"start":{"line":20,"column":2},"end":{"line":25,"column":13}},"4":{"start":{"line":27,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":28,"column":4},"end":{"line":28,"column":15}},"6":{"start":{"line":31,"column":2},"end":{"line":31,"column":51}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":72}},"8":{"start":{"line":35,"column":0},"end":{"line":66,"column":2}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":13}},"10":{"start":{"line":38,"column":2},"end":{"line":42,"column":3}},"11":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"12":{"start":{"line":40,"column":6},"end":{"line":40,"column":86}},"13":{"start":{"line":44,"column":2},"end":{"line":53,"column":5}},"14":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"15":{"start":{"line":46,"column":6},"end":{"line":46,"column":46}},"16":{"start":{"line":47,"column":6},"end":{"line":47,"column":20}},"17":{"start":{"line":48,"column":6},"end":{"line":48,"column":33}},"18":{"start":{"line":49,"column":6},"end":{"line":49,"column":34}},"19":{"start":{"line":50,"column":6},"end":{"line":50,"column":13}},"20":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"21":{"start":{"line":55,"column":2},"end":{"line":63,"column":5}},"22":{"start":{"line":56,"column":4},"end":{"line":61,"column":5}},"23":{"start":{"line":57,"column":6},"end":{"line":57,"column":27}},"24":{"start":{"line":58,"column":6},"end":{"line":58,"column":20}},"25":{"start":{"line":59,"column":6},"end":{"line":59,"column":28}},"26":{"start":{"line":60,"column":6},"end":{"line":60,"column":13}},"27":{"start":{"line":62,"column":4},"end":{"line":62,"column":16}},"28":{"start":{"line":65,"column":2},"end":{"line":65,"column":14}},"29":{"start":{"line":68,"column":0},"end":{"line":68,"column":20}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":2},"end":{"line":27,"column":2}},{"start":{"line":27,"column":2},"end":{"line":27,"column":2}}]},"2":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":25},"end":{"line":31,"column":45}},{"start":{"line":31,"column":48},"end":{"line":31,"column":50}}]},"3":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]}},"code":["var filters = require('../filters');","","/**"," * Apply a filter to an entire block of template."," *"," * @alias filter"," *"," * @example"," * {% filter uppercase %}oh hi, {{ name }}{% endfilter %}"," * // => OH HI, PAUL"," *"," * @example"," * {% filter replace(\".\", \"!\", \"g\") %}Hi. My name is Paul.{% endfilter %}"," * // => Hi! My name is Paul!"," *"," * @param {function} filter  The filter that should be applied to the contents of the tag."," */","","exports.compile = function (compiler, args, content, parents, options, blockName) {","  var filter = args.shift().replace(/\\($/, ''),","    val = '(function () {\\n' +","      '  var _output = \"\";\\n' +","      compiler(content, parents, options, blockName) +","      '  return _output;\\n' +","      '})()';","","  if (args[args.length - 1] === ')') {","    args.pop();","  }","","  args = (args.length) ? ', ' + args.join('') : '';","  return '_output += _filters[\"' + filter + '\"](' + val + args + ');\\n';","};","","exports.parse = function (str, line, parser, types) {","  var filter;","","  function check(filter) {","    if (!filters.hasOwnProperty(filter)) {","      throw new Error('Filter \"' + filter + '\" does not exist on line ' + line + '.');","    }","  }","","  parser.on(types.FUNCTION, function (token) {","    if (!filter) {","      filter = token.match.replace(/\\($/, '');","      check(filter);","      this.out.push(token.match);","      this.state.push(token.type);","      return;","    }","    return true;","  });","","  parser.on(types.VAR, function (token) {","    if (!filter) {","      filter = token.match;","      check(filter);","      this.out.push(filter);","      return;","    }","    return true;","  });","","  return true;","};","","exports.ends = true;",""],"l":{"1":1,"19":1,"20":0,"27":0,"28":0,"31":0,"32":0,"35":1,"36":0,"38":1,"39":0,"40":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"65":0,"68":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/filters.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/filters.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":1,"110":1,"111":0,"112":0,"113":1,"114":0,"115":1,"116":0,"117":1,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":1,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"fnMap":{"1":{"name":"iterateFilter","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":28},"end":{"line":15,"column":45}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":22},"end":{"line":21,"column":44}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":21},"end":{"line":40,"column":38}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":21},"end":{"line":59,"column":38}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":15},"end":{"line":86,"column":54}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":21},"end":{"line":126,"column":43}}},"8":{"name":"(anonymous_8)","line":145,"loc":{"start":{"line":145,"column":17},"end":{"line":145,"column":40}}},"9":{"name":"(anonymous_9)","line":209,"loc":{"start":{"line":209,"column":16},"end":{"line":209,"column":33}}},"10":{"name":"(anonymous_10)","line":240,"loc":{"start":{"line":240,"column":18},"end":{"line":240,"column":40}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":20},"end":{"line":247,"column":37}}},"12":{"name":"(anonymous_12)","line":283,"loc":{"start":{"line":283,"column":15},"end":{"line":283,"column":38}}},"13":{"name":"(anonymous_13)","line":290,"loc":{"start":{"line":290,"column":22},"end":{"line":290,"column":39}}},"14":{"name":"(anonymous_14)","line":319,"loc":{"start":{"line":319,"column":15},"end":{"line":319,"column":40}}},"15":{"name":"(anonymous_15)","line":340,"loc":{"start":{"line":340,"column":15},"end":{"line":340,"column":32}}},"16":{"name":"(anonymous_16)","line":374,"loc":{"start":{"line":374,"column":17},"end":{"line":374,"column":34}}},"17":{"name":"(anonymous_17)","line":400,"loc":{"start":{"line":400,"column":16},"end":{"line":400,"column":33}}},"18":{"name":"(anonymous_18)","line":412,"loc":{"start":{"line":412,"column":14},"end":{"line":412,"column":31}}},"19":{"name":"(anonymous_19)","line":441,"loc":{"start":{"line":441,"column":18},"end":{"line":441,"column":63}}},"20":{"name":"(anonymous_20)","line":457,"loc":{"start":{"line":457,"column":18},"end":{"line":457,"column":35}}},"21":{"name":"(anonymous_21)","line":472,"loc":{"start":{"line":472,"column":15},"end":{"line":472,"column":32}}},"22":{"name":"(anonymous_22)","line":502,"loc":{"start":{"line":502,"column":15},"end":{"line":502,"column":41}}},"23":{"name":"(anonymous_23)","line":539,"loc":{"start":{"line":539,"column":20},"end":{"line":539,"column":37}}},"24":{"name":"(anonymous_24)","line":564,"loc":{"start":{"line":564,"column":16},"end":{"line":564,"column":33}}},"25":{"name":"(anonymous_25)","line":570,"loc":{"start":{"line":570,"column":44},"end":{"line":570,"column":59}}},"26":{"name":"(anonymous_26)","line":586,"loc":{"start":{"line":586,"column":15},"end":{"line":586,"column":32}}},"27":{"name":"(anonymous_27)","line":594,"loc":{"start":{"line":594,"column":20},"end":{"line":594,"column":33}}},"28":{"name":"(anonymous_28)","line":618,"loc":{"start":{"line":618,"column":16},"end":{"line":618,"column":33}}},"29":{"name":"(anonymous_29)","line":638,"loc":{"start":{"line":638,"column":21},"end":{"line":638,"column":38}}},"30":{"name":"(anonymous_30)","line":657,"loc":{"start":{"line":657,"column":21},"end":{"line":657,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":45}},"2":{"start":{"line":10,"column":0},"end":{"line":28,"column":1}},"3":{"start":{"line":11,"column":2},"end":{"line":12,"column":13}},"4":{"start":{"line":14,"column":2},"end":{"line":18,"column":3}},"5":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"6":{"start":{"line":16,"column":6},"end":{"line":16,"column":41}},"7":{"start":{"line":20,"column":2},"end":{"line":25,"column":3}},"8":{"start":{"line":21,"column":4},"end":{"line":23,"column":7}},"9":{"start":{"line":22,"column":6},"end":{"line":22,"column":45}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":15}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":9}},"12":{"start":{"line":40,"column":0},"end":{"line":47,"column":2}},"13":{"start":{"line":41,"column":2},"end":{"line":41,"column":63}},"14":{"start":{"line":42,"column":2},"end":{"line":44,"column":3}},"15":{"start":{"line":43,"column":4},"end":{"line":43,"column":15}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":82}},"17":{"start":{"line":59,"column":0},"end":{"line":66,"column":2}},"18":{"start":{"line":60,"column":2},"end":{"line":60,"column":63}},"19":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"20":{"start":{"line":62,"column":4},"end":{"line":62,"column":15}},"21":{"start":{"line":65,"column":2},"end":{"line":65,"column":93}},"22":{"start":{"line":86,"column":0},"end":{"line":109,"column":2}},"23":{"start":{"line":87,"column":2},"end":{"line":91,"column":13}},"24":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"25":{"start":{"line":94,"column":4},"end":{"line":94,"column":41}},"26":{"start":{"line":97,"column":2},"end":{"line":107,"column":3}},"27":{"start":{"line":98,"column":4},"end":{"line":98,"column":27}},"28":{"start":{"line":99,"column":4},"end":{"line":106,"column":5}},"29":{"start":{"line":100,"column":6},"end":{"line":100,"column":13}},"30":{"start":{"line":101,"column":6},"end":{"line":101,"column":46}},"31":{"start":{"line":102,"column":11},"end":{"line":106,"column":5}},"32":{"start":{"line":103,"column":6},"end":{"line":103,"column":52}},"33":{"start":{"line":105,"column":6},"end":{"line":105,"column":17}},"34":{"start":{"line":108,"column":2},"end":{"line":108,"column":13}},"35":{"start":{"line":126,"column":0},"end":{"line":128,"column":2}},"36":{"start":{"line":127,"column":2},"end":{"line":127,"column":85}},"37":{"start":{"line":145,"column":0},"end":{"line":190,"column":2}},"38":{"start":{"line":146,"column":2},"end":{"line":149,"column":9}},"39":{"start":{"line":151,"column":2},"end":{"line":153,"column":3}},"40":{"start":{"line":152,"column":4},"end":{"line":152,"column":15}},"41":{"start":{"line":155,"column":2},"end":{"line":157,"column":3}},"42":{"start":{"line":156,"column":4},"end":{"line":156,"column":17}},"43":{"start":{"line":159,"column":2},"end":{"line":159,"column":11}},"44":{"start":{"line":161,"column":2},"end":{"line":189,"column":3}},"45":{"start":{"line":163,"column":4},"end":{"line":163,"column":40}},"46":{"start":{"line":164,"column":4},"end":{"line":173,"column":5}},"47":{"start":{"line":165,"column":6},"end":{"line":165,"column":31}},"48":{"start":{"line":166,"column":6},"end":{"line":172,"column":7}},"49":{"start":{"line":167,"column":8},"end":{"line":167,"column":47}},"50":{"start":{"line":168,"column":8},"end":{"line":168,"column":53}},"51":{"start":{"line":169,"column":8},"end":{"line":169,"column":30}},"52":{"start":{"line":171,"column":8},"end":{"line":171,"column":22}},"53":{"start":{"line":174,"column":4},"end":{"line":181,"column":32}},"54":{"start":{"line":184,"column":4},"end":{"line":188,"column":30}},"55":{"start":{"line":191,"column":0},"end":{"line":191,"column":27}},"56":{"start":{"line":209,"column":0},"end":{"line":220,"column":2}},"57":{"start":{"line":210,"column":2},"end":{"line":213,"column":3}},"58":{"start":{"line":211,"column":4},"end":{"line":211,"column":33}},"59":{"start":{"line":212,"column":4},"end":{"line":212,"column":26}},"60":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"61":{"start":{"line":216,"column":4},"end":{"line":216,"column":30}},"62":{"start":{"line":219,"column":2},"end":{"line":219,"column":18}},"63":{"start":{"line":240,"column":0},"end":{"line":264,"column":2}},"64":{"start":{"line":241,"column":2},"end":{"line":243,"column":3}},"65":{"start":{"line":242,"column":4},"end":{"line":242,"column":17}},"66":{"start":{"line":245,"column":2},"end":{"line":245,"column":15}},"67":{"start":{"line":247,"column":2},"end":{"line":261,"column":5}},"68":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"69":{"start":{"line":249,"column":6},"end":{"line":249,"column":13}},"70":{"start":{"line":252,"column":4},"end":{"line":253,"column":41}},"71":{"start":{"line":254,"column":4},"end":{"line":254,"column":25}},"72":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"73":{"start":{"line":257,"column":6},"end":{"line":257,"column":24}},"74":{"start":{"line":260,"column":4},"end":{"line":260,"column":32}},"75":{"start":{"line":263,"column":2},"end":{"line":263,"column":13}},"76":{"start":{"line":283,"column":0},"end":{"line":296,"column":2}},"77":{"start":{"line":284,"column":2},"end":{"line":286,"column":3}},"78":{"start":{"line":285,"column":4},"end":{"line":285,"column":28}},"79":{"start":{"line":288,"column":2},"end":{"line":294,"column":3}},"80":{"start":{"line":289,"column":4},"end":{"line":289,"column":17}},"81":{"start":{"line":290,"column":4},"end":{"line":292,"column":7}},"82":{"start":{"line":291,"column":6},"end":{"line":291,"column":22}},"83":{"start":{"line":293,"column":4},"end":{"line":293,"column":26}},"84":{"start":{"line":295,"column":2},"end":{"line":295,"column":15}},"85":{"start":{"line":319,"column":0},"end":{"line":321,"column":2}},"86":{"start":{"line":320,"column":2},"end":{"line":320,"column":50}},"87":{"start":{"line":322,"column":0},"end":{"line":322,"column":35}},"88":{"start":{"line":340,"column":0},"end":{"line":351,"column":2}},"89":{"start":{"line":341,"column":2},"end":{"line":344,"column":3}},"90":{"start":{"line":342,"column":4},"end":{"line":342,"column":33}},"91":{"start":{"line":343,"column":4},"end":{"line":343,"column":40}},"92":{"start":{"line":346,"column":2},"end":{"line":348,"column":3}},"93":{"start":{"line":347,"column":4},"end":{"line":347,"column":42}},"94":{"start":{"line":350,"column":2},"end":{"line":350,"column":33}},"95":{"start":{"line":374,"column":0},"end":{"line":383,"column":2}},"96":{"start":{"line":375,"column":2},"end":{"line":378,"column":3}},"97":{"start":{"line":376,"column":4},"end":{"line":376,"column":33}},"98":{"start":{"line":377,"column":4},"end":{"line":377,"column":23}},"99":{"start":{"line":379,"column":2},"end":{"line":381,"column":3}},"100":{"start":{"line":380,"column":4},"end":{"line":380,"column":24}},"101":{"start":{"line":382,"column":2},"end":{"line":382,"column":12}},"102":{"start":{"line":400,"column":0},"end":{"line":407,"column":2}},"103":{"start":{"line":401,"column":2},"end":{"line":401,"column":58}},"104":{"start":{"line":402,"column":2},"end":{"line":404,"column":3}},"105":{"start":{"line":403,"column":4},"end":{"line":403,"column":15}},"106":{"start":{"line":406,"column":2},"end":{"line":406,"column":40}},"107":{"start":{"line":412,"column":0},"end":{"line":414,"column":2}},"108":{"start":{"line":413,"column":2},"end":{"line":413,"column":29}},"109":{"start":{"line":415,"column":0},"end":{"line":415,"column":24}},"110":{"start":{"line":441,"column":0},"end":{"line":444,"column":2}},"111":{"start":{"line":442,"column":2},"end":{"line":442,"column":36}},"112":{"start":{"line":443,"column":2},"end":{"line":443,"column":39}},"113":{"start":{"line":457,"column":0},"end":{"line":459,"column":2}},"114":{"start":{"line":458,"column":2},"end":{"line":458,"column":35}},"115":{"start":{"line":472,"column":0},"end":{"line":475,"column":2}},"116":{"start":{"line":474,"column":2},"end":{"line":474,"column":15}},"117":{"start":{"line":476,"column":0},"end":{"line":476,"column":25}},"118":{"start":{"line":502,"column":0},"end":{"line":526,"column":2}},"119":{"start":{"line":503,"column":2},"end":{"line":503,"column":17}},"120":{"start":{"line":504,"column":2},"end":{"line":519,"column":3}},"121":{"start":{"line":505,"column":4},"end":{"line":505,"column":36}},"122":{"start":{"line":506,"column":4},"end":{"line":506,"column":23}},"123":{"start":{"line":508,"column":4},"end":{"line":518,"column":5}},"124":{"start":{"line":510,"column":6},"end":{"line":510,"column":37}},"125":{"start":{"line":511,"column":6},"end":{"line":511,"column":12}},"126":{"start":{"line":513,"column":6},"end":{"line":513,"column":28}},"127":{"start":{"line":514,"column":6},"end":{"line":516,"column":7}},"128":{"start":{"line":515,"column":8},"end":{"line":515,"column":38}},"129":{"start":{"line":517,"column":6},"end":{"line":517,"column":33}},"130":{"start":{"line":521,"column":2},"end":{"line":523,"column":3}},"131":{"start":{"line":522,"column":4},"end":{"line":522,"column":25}},"132":{"start":{"line":525,"column":2},"end":{"line":525,"column":22}},"133":{"start":{"line":539,"column":0},"end":{"line":546,"column":2}},"134":{"start":{"line":540,"column":2},"end":{"line":540,"column":62}},"135":{"start":{"line":541,"column":2},"end":{"line":543,"column":3}},"136":{"start":{"line":542,"column":4},"end":{"line":542,"column":15}},"137":{"start":{"line":545,"column":2},"end":{"line":545,"column":55}},"138":{"start":{"line":564,"column":0},"end":{"line":573,"column":2}},"139":{"start":{"line":565,"column":2},"end":{"line":565,"column":58}},"140":{"start":{"line":566,"column":2},"end":{"line":568,"column":3}},"141":{"start":{"line":567,"column":4},"end":{"line":567,"column":15}},"142":{"start":{"line":570,"column":2},"end":{"line":572,"column":5}},"143":{"start":{"line":571,"column":4},"end":{"line":571,"column":69}},"144":{"start":{"line":586,"column":0},"end":{"line":600,"column":2}},"145":{"start":{"line":587,"column":2},"end":{"line":587,"column":13}},"146":{"start":{"line":589,"column":2},"end":{"line":591,"column":3}},"147":{"start":{"line":590,"column":4},"end":{"line":590,"column":14}},"148":{"start":{"line":593,"column":2},"end":{"line":593,"column":14}},"149":{"start":{"line":594,"column":2},"end":{"line":598,"column":5}},"150":{"start":{"line":595,"column":4},"end":{"line":597,"column":5}},"151":{"start":{"line":596,"column":6},"end":{"line":596,"column":21}},"152":{"start":{"line":599,"column":2},"end":{"line":599,"column":16}},"153":{"start":{"line":618,"column":0},"end":{"line":625,"column":2}},"154":{"start":{"line":619,"column":2},"end":{"line":619,"column":58}},"155":{"start":{"line":620,"column":2},"end":{"line":622,"column":3}},"156":{"start":{"line":621,"column":4},"end":{"line":621,"column":15}},"157":{"start":{"line":624,"column":2},"end":{"line":624,"column":40}},"158":{"start":{"line":638,"column":0},"end":{"line":644,"column":2}},"159":{"start":{"line":639,"column":2},"end":{"line":639,"column":63}},"160":{"start":{"line":640,"column":2},"end":{"line":642,"column":3}},"161":{"start":{"line":641,"column":4},"end":{"line":641,"column":15}},"162":{"start":{"line":643,"column":2},"end":{"line":643,"column":35}},"163":{"start":{"line":657,"column":0},"end":{"line":663,"column":2}},"164":{"start":{"line":658,"column":2},"end":{"line":658,"column":63}},"165":{"start":{"line":659,"column":2},"end":{"line":661,"column":3}},"166":{"start":{"line":660,"column":4},"end":{"line":660,"column":15}},"167":{"start":{"line":662,"column":2},"end":{"line":662,"column":35}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":2},"end":{"line":14,"column":2}},{"start":{"line":14,"column":2},"end":{"line":14,"column":2}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"5":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"7":{"line":101,"type":"cond-expr","locations":[{"start":{"line":101,"column":23},"end":{"line":101,"column":39}},{"start":{"line":101,"column":42},"end":{"line":101,"column":45}}]},"8":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":11},"end":{"line":102,"column":11}},{"start":{"line":102,"column":11},"end":{"line":102,"column":11}}]},"9":{"line":127,"type":"cond-expr","locations":[{"start":{"line":127,"column":73},"end":{"line":127,"column":78}},{"start":{"line":127,"column":81},"end":{"line":127,"column":84}}]},"10":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":29}},{"start":{"line":127,"column":34},"end":{"line":127,"column":39}},{"start":{"line":127,"column":43},"end":{"line":127,"column":68}}]},"11":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"12":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"13":{"line":161,"type":"switch","locations":[{"start":{"line":162,"column":2},"end":{"line":181,"column":32}},{"start":{"line":183,"column":2},"end":{"line":188,"column":30}}]},"14":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":6}},{"start":{"line":166,"column":6},"end":{"line":166,"column":6}}]},"15":{"line":168,"type":"cond-expr","locations":[{"start":{"line":168,"column":35},"end":{"line":168,"column":45}},{"start":{"line":168,"column":48},"end":{"line":168,"column":52}}]},"16":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"17":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":31}},{"start":{"line":210,"column":35},"end":{"line":210,"column":56}}]},"18":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"19":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"20":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"21":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"22":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":2},"end":{"line":284,"column":2}},{"start":{"line":284,"column":2},"end":{"line":284,"column":2}}]},"23":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":2},"end":{"line":288,"column":2}},{"start":{"line":288,"column":2},"end":{"line":288,"column":2}}]},"24":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":37},"end":{"line":320,"column":43}},{"start":{"line":320,"column":47},"end":{"line":320,"column":48}}]},"25":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":2},"end":{"line":341,"column":2}},{"start":{"line":341,"column":2},"end":{"line":341,"column":2}}]},"26":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":6},"end":{"line":341,"column":31}},{"start":{"line":341,"column":35},"end":{"line":341,"column":56}}]},"27":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":2},"end":{"line":346,"column":2}},{"start":{"line":346,"column":2},"end":{"line":346,"column":2}}]},"28":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":2},"end":{"line":375,"column":2}},{"start":{"line":375,"column":2},"end":{"line":375,"column":2}}]},"29":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":6},"end":{"line":375,"column":31}},{"start":{"line":375,"column":35},"end":{"line":375,"column":56}}]},"30":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"31":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":2},"end":{"line":402,"column":2}},{"start":{"line":402,"column":2},"end":{"line":402,"column":2}}]},"32":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":2},"end":{"line":504,"column":2}},{"start":{"line":504,"column":2},"end":{"line":504,"column":2}}]},"33":{"line":508,"type":"switch","locations":[{"start":{"line":509,"column":4},"end":{"line":511,"column":12}},{"start":{"line":512,"column":4},"end":{"line":517,"column":33}}]},"34":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":6},"end":{"line":514,"column":6}},{"start":{"line":514,"column":6},"end":{"line":514,"column":6}}]},"35":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":2},"end":{"line":521,"column":2}},{"start":{"line":521,"column":2},"end":{"line":521,"column":2}}]},"36":{"line":521,"type":"binary-expr","locations":[{"start":{"line":521,"column":6},"end":{"line":521,"column":9}},{"start":{"line":521,"column":13},"end":{"line":521,"column":20}}]},"37":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":9},"end":{"line":525,"column":12}},{"start":{"line":525,"column":16},"end":{"line":525,"column":21}}]},"38":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":2},"end":{"line":541,"column":2}},{"start":{"line":541,"column":2},"end":{"line":541,"column":2}}]},"39":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":2},"end":{"line":566,"column":2}},{"start":{"line":566,"column":2},"end":{"line":566,"column":2}}]},"40":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":2},"end":{"line":589,"column":2}},{"start":{"line":589,"column":2},"end":{"line":589,"column":2}}]},"41":{"line":589,"type":"binary-expr","locations":[{"start":{"line":589,"column":6},"end":{"line":589,"column":12}},{"start":{"line":589,"column":16},"end":{"line":589,"column":37}}]},"42":{"line":595,"type":"if","locations":[{"start":{"line":595,"column":4},"end":{"line":595,"column":4}},{"start":{"line":595,"column":4},"end":{"line":595,"column":4}}]},"43":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":2},"end":{"line":620,"column":2}},{"start":{"line":620,"column":2},"end":{"line":620,"column":2}}]},"44":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":2},"end":{"line":640,"column":2}},{"start":{"line":640,"column":2},"end":{"line":640,"column":2}}]},"45":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":2},"end":{"line":659,"column":2}},{"start":{"line":659,"column":2},"end":{"line":659,"column":2}}]}},"code":["var utils = require('./utils'),","  dateFormatter = require('./dateformatter');","","/**"," * Helper method to recursively run a filter across an object/array and apply it to all of the object/array's values."," * @param  {*} input"," * @return {*}"," * @private"," */","function iterateFilter(input) {","  var self = this,","    out = {};","","  if (utils.isArray(input)) {","    return utils.map(input, function (value) {","      return self.apply(null, arguments);","    });","  }","","  if (typeof input === 'object') {","    utils.each(input, function (value, key) {","      out[key] = self.apply(null, arguments);","    });","    return out;","  }","","  return;","}","","/**"," * Backslash-escape characters that need to be escaped."," *"," * @example"," * {{ \"\\\"quoted string\\\"\"|addslashes }}"," * // => \\\"quoted string\\\""," *"," * @param  {*}  input"," * @return {*}        Backslash-escaped string."," */","exports.addslashes = function (input) {","  var out = iterateFilter.apply(exports.addslashes, arguments);","  if (out !== undefined) {","    return out;","  }","","  return input.replace(/\\\\/g, '\\\\\\\\').replace(/\\'/g, \"\\\\'\").replace(/\\\"/g, '\\\\\"');","};","","/**"," * Upper-case the first letter of the input and lower-case the rest."," *"," * @example"," * {{ \"i like Burritos\"|capitalize }}"," * // => I like burritos"," *"," * @param  {*} input  If given an array or object, each string member will be run through the filter individually."," * @return {*}        Returns the same type as the input."," */","exports.capitalize = function (input) {","  var out = iterateFilter.apply(exports.capitalize, arguments);","  if (out !== undefined) {","    return out;","  }","","  return input.toString().charAt(0).toUpperCase() + input.toString().substr(1).toLowerCase();","};","","/**"," * Format a date or Date-compatible string."," *"," * @example"," * // now = new Date();"," * {{ now|date('Y-m-d') }}"," * // => 2013-08-14"," * @example"," * // now = new Date();"," * {{ now|date('jS \\o\\f F') }}"," * // => 4th of July"," *"," * @param  {?(string|date)}   input"," * @param  {string}           format  PHP-style date format compatible string. Escape characters with <code>\\</code> for string literals."," * @param  {number=}          offset  Timezone offset from GMT in minutes."," * @param  {string=}          abbr    Timezone abbreviation. Used for output only."," * @return {string}                   Formatted date string."," */","exports.date = function (input, format, offset, abbr) {","  var l = format.length,","    date = new dateFormatter.DateZ(input),","    cur,","    i = 0,","    out = '';","","  if (offset) {","    date.setTimezoneOffset(offset, abbr);","  }","","  for (i; i < l; i += 1) {","    cur = format.charAt(i);","    if (cur === '\\\\') {","      i += 1;","      out += (i < l) ? format.charAt(i) : cur;","    } else if (dateFormatter.hasOwnProperty(cur)) {","      out += dateFormatter[cur](date, offset, abbr);","    } else {","      out += cur;","    }","  }","  return out;","};","","/**"," * If the input is `undefined`, `null`, or `false`, a default return value can be specified."," *"," * @example"," * {{ null_value|default('Tacos') }}"," * // => Tacos"," *"," * @example"," * {{ \"Burritos\"|default(\"Tacos\") }}"," * // => Burritos"," *"," * @param  {*}  input"," * @param  {*}  def     Value to return if `input` is `undefined`, `null`, or `false`."," * @return {*}          `input` or `def` value."," */","exports[\"default\"] = function (input, def) {","  return (input !== undefined && (input || typeof input === 'number')) ? input : def;","};","","/**"," * Force escape the output of the variable. Optionally use `e` as a shortcut filter name. This filter will be applied by default if autoescape is turned on."," *"," * @example"," * {{ \"<blah>\"|escape }}"," * // => &lt;blah&gt;"," *"," * @example"," * {{ \"<blah>\"|e(\"js\") }}"," * // => \\u003Cblah\\u003E"," *"," * @param  {*} input"," * @param  {string} [type='html']   If you pass the string js in as the type, output will be escaped so that it is safe for JavaScript execution."," * @return {string}         Escaped string."," */","exports.escape = function (input, type) {","  var out = iterateFilter.apply(exports.escape, arguments),","    inp = input,","    i = 0,","    code;","","  if (out !== undefined) {","    return out;","  }","","  if (typeof input !== 'string') {","    return input;","  }","","  out = '';","","  switch (type) {","  case 'js':","    inp = inp.replace(/\\\\/g, '\\\\u005C');","    for (i; i < inp.length; i += 1) {","      code = inp.charCodeAt(i);","      if (code < 32) {","        code = code.toString(16).toUpperCase();","        code = (code.length < 2) ? '0' + code : code;","        out += '\\\\u00' + code;","      } else {","        out += inp[i];","      }","    }","    return out.replace(/&/g, '\\\\u0026')","      .replace(/</g, '\\\\u003C')","      .replace(/>/g, '\\\\u003E')","      .replace(/\\'/g, '\\\\u0027')","      .replace(/\"/g, '\\\\u0022')","      .replace(/\\=/g, '\\\\u003D')","      .replace(/-/g, '\\\\u002D')","      .replace(/;/g, '\\\\u003B');","","  default:","    return inp.replace(/&(?!amp;|lt;|gt;|quot;|#39;)/g, '&amp;')","      .replace(/</g, '&lt;')","      .replace(/>/g, '&gt;')","      .replace(/\"/g, '&quot;')","      .replace(/'/g, '&#39;');","  }","};","exports.e = exports.escape;","","/**"," * Get the first item in an array or character in a string. All other objects will attempt to return the first value available."," *"," * @example"," * // my_arr = ['a', 'b', 'c']"," * {{ my_arr|first }}"," * // => a"," *"," * @example"," * // my_val = 'Tacos'"," * {{ my_val|first }}"," * // T"," *"," * @param  {*} input"," * @return {*}        The first item of the array or first character of the string input."," */","exports.first = function (input) {","  if (typeof input === 'object' && !utils.isArray(input)) {","    var keys = utils.keys(input);","    return input[keys[0]];","  }","","  if (typeof input === 'string') {","    return input.substr(0, 1);","  }","","  return input[0];","};","","/**"," * Group an array of objects by a common key. If an array is not provided, the input value will be returned untouched."," *"," * @example"," * // people = [{ age: 23, name: 'Paul' }, { age: 26, name: 'Jane' }, { age: 23, name: 'Jim' }];"," * {% for agegroup in people|groupBy('age') %}"," *   <h2>{{ loop.key }}</h2>"," *   <ul>"," *     {% for person in agegroup %}"," *     <li>{{ person.name }}</li>"," *     {% endfor %}"," *   </ul>"," * {% endfor %}"," *"," * @param  {*}      input Input object."," * @param  {string} key   Key to group by."," * @return {object}       Grouped arrays by given key."," */","exports.groupBy = function (input, key) {","  if (!utils.isArray(input)) {","    return input;","  }","","  var out = {};","","  utils.each(input, function (value) {","    if (!value.hasOwnProperty(key)) {","      return;","    }","","    var keyname = value[key],","      newValue = utils.extend({}, value);","    delete newValue[key];","","    if (!out[keyname]) {","      out[keyname] = [];","    }","","    out[keyname].push(newValue);","  });","","  return out;","};","","/**"," * Join the input with a string."," *"," * @example"," * // my_array = ['foo', 'bar', 'baz']"," * {{ my_array|join(', ') }}"," * // => foo, bar, baz"," *"," * @example"," * // my_key_object = { a: 'foo', b: 'bar', c: 'baz' }"," * {{ my_key_object|join(' and ') }}"," * // => foo and bar and baz"," *"," * @param  {*}  input"," * @param  {string} glue    String value to join items together."," * @return {string}"," */","exports.join = function (input, glue) {","  if (utils.isArray(input)) {","    return input.join(glue);","  }","","  if (typeof input === 'object') {","    var out = [];","    utils.each(input, function (value) {","      out.push(value);","    });","    return out.join(glue);","  }","  return input;","};","","/**"," * Return a string representation of an JavaScript object."," *"," * Backwards compatible with swig@0.x.x using `json_encode`."," *"," * @example"," * // val = { a: 'b' }"," * {{ val|json }}"," * // => {\"a\":\"b\"}"," *"," * @example"," * // val = { a: 'b' }"," * {{ val|json(4) }}"," * // => {"," * //        \"a\": \"b\""," * //    }"," *"," * @param  {*}    input"," * @param  {number}  [indent]  Number of spaces to indent for pretty-formatting."," * @return {string}           A valid JSON string."," */","exports.json = function (input, indent) {","  return JSON.stringify(input, null, indent || 0);","};","exports.json_encode = exports.json;","","/**"," * Get the last item in an array or character in a string. All other objects will attempt to return the last value available."," *"," * @example"," * // my_arr = ['a', 'b', 'c']"," * {{ my_arr|last }}"," * // => c"," *"," * @example"," * // my_val = 'Tacos'"," * {{ my_val|last }}"," * // s"," *"," * @param  {*} input"," * @return {*}          The last item of the array or last character of the string.input."," */","exports.last = function (input) {","  if (typeof input === 'object' && !utils.isArray(input)) {","    var keys = utils.keys(input);","    return input[keys[keys.length - 1]];","  }","","  if (typeof input === 'string') {","    return input.charAt(input.length - 1);","  }","","  return input[input.length - 1];","};","","/**"," * Get the number of items in an array, string, or object."," *"," * @example"," * // my_arr = ['a', 'b', 'c']"," * {{ my_arr|length }}"," * // => 3"," *"," * @example"," * // my_str = 'Tacos'"," * {{ my_str|length }}"," * // => 5"," *"," * @example"," * // my_obj = {a: 5, b: 20}"," * {{ my_obj|length }}"," * // => 2"," *"," * @param  {*} input"," * @return {*}          The length of the input"," */","exports.length = function (input) {","  if (typeof input === 'object' && !utils.isArray(input)) {","    var keys = utils.keys(input);","    return keys.length;","  }","  if (input.hasOwnProperty('length')) {","    return input.length;","  }","  return '';","};","","/**"," * Return the input in all lowercase letters."," *"," * @example"," * {{ \"FOOBAR\"|lower }}"," * // => foobar"," *"," * @example"," * // myObj = { a: 'FOO', b: 'BAR' }"," * {{ myObj|lower|join('') }}"," * // => foobar"," *"," * @param  {*}  input"," * @return {*}          Returns the same type as the input."," */","exports.lower = function (input) {","  var out = iterateFilter.apply(exports.lower, arguments);","  if (out !== undefined) {","    return out;","  }","","  return input.toString().toLowerCase();","};","","/**"," * Deprecated in favor of <a href=\"#safe\">safe</a>."," */","exports.raw = function (input) {","  return exports.safe(input);","};","exports.raw.safe = true;","","/**"," * Returns a new string with the matched search pattern replaced by the given replacement string. Uses JavaScript's built-in String.replace() method."," *"," * @example"," * // my_var = 'foobar';"," * {{ my_var|replace('o', 'e', 'g') }}"," * // => feebar"," *"," * @example"," * // my_var = \"farfegnugen\";"," * {{ my_var|replace('^f', 'p') }}"," * // => parfegnugen"," *"," * @example"," * // my_var = 'a1b2c3';"," * {{ my_var|replace('\\w', '0', 'g') }}"," * // => 010203"," *"," * @param  {string} input"," * @param  {string} search      String or pattern to replace from the input."," * @param  {string} replacement String to replace matched pattern."," * @param  {string} [flags]      Regular Expression flags. 'g': global match, 'i': ignore case, 'm': match over multiple lines"," * @return {string}             Replaced string."," */","exports.replace = function (input, search, replacement, flags) {","  var r = new RegExp(search, flags);","  return input.replace(r, replacement);","};","","/**"," * Reverse sort the input. This is an alias for <code data-language=\"swig\">{{ input|sort(true) }}</code>."," *"," * @example"," * // val = [1, 2, 3];"," * {{ val|reverse }}"," * // => 3,2,1"," *"," * @param  {array}  input"," * @return {array}        Reversed array. The original input object is returned if it was not an array."," */","exports.reverse = function (input) {","  return exports.sort(input, true);","};","","/**"," * Forces the input to not be auto-escaped. Use this only on content that you know is safe to be rendered on your page."," *"," * @example"," * // my_var = \"<p>Stuff</p>\";"," * {{ my_var|safe }}"," * // => <p>Stuff</p>"," *"," * @param  {*}  input"," * @return {*}          The input exactly how it was given, regardless of autoescaping status."," */","exports.safe = function (input) {","  // This is a magic filter. Its logic is hard-coded into Swig's parser.","  return input;","};","exports.safe.safe = true;","","/**"," * Sort the input in an ascending direction."," * If given an object, will return the keys as a sorted array."," * If given a string, each character will be sorted individually."," *"," * @example"," * // val = [2, 6, 4];"," * {{ val|sort }}"," * // => 2,4,6"," *"," * @example"," * // val = 'zaq';"," * {{ val|sort }}"," * // => aqz"," *"," * @example"," * // val = { bar: 1, foo: 2 }"," * {{ val|sort(true) }}"," * // => foo,bar"," *"," * @param  {*} input"," * @param {boolean} [reverse=false] Output is given reverse-sorted if true."," * @return {*}        Sorted array;"," */","exports.sort = function (input, reverse) {","  var out, clone;","  if (utils.isArray(input)) {","    clone = utils.extend([], input);","    out = clone.sort();","  } else {","    switch (typeof input) {","    case 'object':","      out = utils.keys(input).sort();","      break;","    case 'string':","      out = input.split('');","      if (reverse) {","        return out.reverse().join('');","      }","      return out.sort().join('');","    }","  }","","  if (out && reverse) {","    return out.reverse();","  }","","  return out || input;","};","","/**"," * Strip HTML tags."," *"," * @example"," * // stuff = '<p>foobar</p>';"," * {{ stuff|striptags }}"," * // => foobar"," *"," * @param  {*}  input"," * @return {*}        Returns the same object as the input, but with all string values stripped of tags."," */","exports.striptags = function (input) {","  var out = iterateFilter.apply(exports.striptags, arguments);","  if (out !== undefined) {","    return out;","  }","","  return input.toString().replace(/(<([^>]+)>)/ig, '');","};","","/**"," * Capitalizes every word given and lower-cases all other letters."," *"," * @example"," * // my_str = 'this is soMe text';"," * {{ my_str|title }}"," * // => This Is Some Text"," *"," * @example"," * // my_arr = ['hi', 'this', 'is', 'an', 'array'];"," * {{ my_arr|title|join(' ') }}"," * // => Hi This Is An Array"," *"," * @param  {*}  input"," * @return {*}        Returns the same object as the input, but with all words in strings title-cased."," */","exports.title = function (input) {","  var out = iterateFilter.apply(exports.title, arguments);","  if (out !== undefined) {","    return out;","  }","","  return input.toString().replace(/\\w\\S*/g, function (str) {","    return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();","  });","};","","/**"," * Remove all duplicate items from an array."," *"," * @example"," * // my_arr = [1, 2, 3, 4, 4, 3, 2, 1];"," * {{ my_arr|uniq|join(',') }}"," * // => 1,2,3,4"," *"," * @param  {array}  input"," * @return {array}        Array with unique items. If input was not an array, the original item is returned untouched."," */","exports.uniq = function (input) {","  var result;","","  if (!input || !utils.isArray(input)) {","    return '';","  }","","  result = [];","  utils.each(input, function (v) {","    if (result.indexOf(v) === -1) {","      result.push(v);","    }","  });","  return result;","};","","/**"," * Convert the input to all uppercase letters. If an object or array is provided, all values will be uppercased."," *"," * @example"," * // my_str = 'tacos';"," * {{ my_str|upper }}"," * // => TACOS"," *"," * @example"," * // my_arr = ['tacos', 'burritos'];"," * {{ my_arr|upper|join(' & ') }}"," * // => TACOS & BURRITOS"," *"," * @param  {*}  input"," * @return {*}        Returns the same type as the input, with all strings upper-cased."," */","exports.upper = function (input) {","  var out = iterateFilter.apply(exports.upper, arguments);","  if (out !== undefined) {","    return out;","  }","","  return input.toString().toUpperCase();","};","","/**"," * URL-encode a string. If an object or array is passed, all values will be URL-encoded."," *"," * @example"," * // my_str = 'param=1&anotherParam=2';"," * {{ my_str|url_encode }}"," * // => param%3D1%26anotherParam%3D2"," *"," * @param  {*} input"," * @return {*}       URL-encoded string."," */","exports.url_encode = function (input) {","  var out = iterateFilter.apply(exports.url_encode, arguments);","  if (out !== undefined) {","    return out;","  }","  return encodeURIComponent(input);","};","","/**"," * URL-decode a string. If an object or array is passed, all values will be URL-decoded."," *"," * @example"," * // my_str = 'param%3D1%26anotherParam%3D2';"," * {{ my_str|url_decode }}"," * // => param=1&anotherParam=2"," *"," * @param  {*} input"," * @return {*}       URL-decoded string."," */","exports.url_decode = function (input) {","  var out = iterateFilter.apply(exports.url_decode, arguments);","  if (out !== undefined) {","    return out;","  }","  return decodeURIComponent(input);","};",""],"l":{"1":1,"10":1,"11":0,"14":0,"15":0,"16":0,"20":0,"21":0,"22":0,"24":0,"27":0,"40":1,"41":0,"42":0,"43":0,"46":0,"59":1,"60":0,"61":0,"62":0,"65":0,"86":1,"87":0,"93":0,"94":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"105":0,"108":0,"126":1,"127":0,"145":1,"146":0,"151":0,"152":0,"155":0,"156":0,"159":0,"161":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"171":0,"174":0,"184":0,"191":1,"209":1,"210":0,"211":0,"212":0,"215":0,"216":0,"219":0,"240":1,"241":0,"242":0,"245":0,"247":0,"248":0,"249":0,"252":0,"254":0,"256":0,"257":0,"260":0,"263":0,"283":1,"284":0,"285":0,"288":0,"289":0,"290":0,"291":0,"293":0,"295":0,"319":1,"320":0,"322":1,"340":1,"341":0,"342":0,"343":0,"346":0,"347":0,"350":0,"374":1,"375":0,"376":0,"377":0,"379":0,"380":0,"382":0,"400":1,"401":0,"402":0,"403":0,"406":0,"412":1,"413":0,"415":1,"441":1,"442":0,"443":0,"457":1,"458":0,"472":1,"474":0,"476":1,"502":1,"503":0,"504":0,"505":0,"506":0,"508":0,"510":0,"511":0,"513":0,"514":0,"515":0,"517":0,"521":0,"522":0,"525":0,"539":1,"540":0,"541":0,"542":0,"545":0,"564":1,"565":0,"566":0,"567":0,"570":0,"571":0,"586":1,"587":0,"589":0,"590":0,"593":0,"594":0,"595":0,"596":0,"599":0,"618":1,"619":0,"620":0,"621":0,"624":0,"638":1,"639":0,"640":0,"641":0,"643":0,"657":1,"658":0,"659":0,"660":0,"662":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/dateformatter.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/dateformatter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":0,"31":1,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":1,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":1,"60":0,"61":1,"62":0,"63":0,"64":0,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":1,"82":0,"83":1,"84":0,"85":0,"86":1,"87":0,"88":0,"89":1,"90":0,"91":0,"92":1,"93":0,"94":0,"95":1,"96":0,"97":0,"98":1,"99":0,"100":1,"101":0,"102":1,"103":0,"104":1,"105":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":16},"end":{"line":21,"column":28}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":24},"end":{"line":32,"column":40}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":26}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":33},"end":{"line":37,"column":49}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":14},"end":{"line":38,"column":26}}},"6":{"name":"(anonymous_6)","line":46,"loc":{"start":{"line":46,"column":21},"end":{"line":46,"column":33}}},"7":{"name":"(anonymous_7)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":39}}},"8":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":12},"end":{"line":57,"column":29}}},"9":{"name":"(anonymous_9)","line":60,"loc":{"start":{"line":60,"column":12},"end":{"line":60,"column":29}}},"10":{"name":"(anonymous_10)","line":63,"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":29}}},"11":{"name":"(anonymous_11)","line":66,"loc":{"start":{"line":66,"column":12},"end":{"line":66,"column":29}}},"12":{"name":"(anonymous_12)","line":69,"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":29}}},"13":{"name":"(anonymous_13)","line":73,"loc":{"start":{"line":73,"column":12},"end":{"line":73,"column":29}}},"14":{"name":"(anonymous_14)","line":77,"loc":{"start":{"line":77,"column":12},"end":{"line":77,"column":29}}},"15":{"name":"(anonymous_15)","line":80,"loc":{"start":{"line":80,"column":12},"end":{"line":80,"column":43}}},"16":{"name":"(anonymous_16)","line":91,"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":29}}},"17":{"name":"(anonymous_17)","line":107,"loc":{"start":{"line":107,"column":12},"end":{"line":107,"column":29}}},"18":{"name":"(anonymous_18)","line":110,"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":29}}},"19":{"name":"(anonymous_19)","line":113,"loc":{"start":{"line":113,"column":12},"end":{"line":113,"column":29}}},"20":{"name":"(anonymous_20)","line":116,"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":29}}},"21":{"name":"(anonymous_21)","line":119,"loc":{"start":{"line":119,"column":12},"end":{"line":119,"column":29}}},"22":{"name":"(anonymous_22)","line":124,"loc":{"start":{"line":124,"column":12},"end":{"line":124,"column":29}}},"23":{"name":"(anonymous_23)","line":127,"loc":{"start":{"line":127,"column":12},"end":{"line":127,"column":29}}},"24":{"name":"(anonymous_24)","line":132,"loc":{"start":{"line":132,"column":12},"end":{"line":132,"column":29}}},"25":{"name":"(anonymous_25)","line":135,"loc":{"start":{"line":135,"column":12},"end":{"line":135,"column":29}}},"26":{"name":"(anonymous_26)","line":140,"loc":{"start":{"line":140,"column":12},"end":{"line":140,"column":29}}},"27":{"name":"(anonymous_27)","line":143,"loc":{"start":{"line":143,"column":12},"end":{"line":143,"column":29}}},"28":{"name":"(anonymous_28)","line":146,"loc":{"start":{"line":146,"column":12},"end":{"line":146,"column":29}}},"29":{"name":"(anonymous_29)","line":152,"loc":{"start":{"line":152,"column":12},"end":{"line":152,"column":29}}},"30":{"name":"(anonymous_30)","line":156,"loc":{"start":{"line":156,"column":12},"end":{"line":156,"column":29}}},"31":{"name":"(anonymous_31)","line":159,"loc":{"start":{"line":159,"column":12},"end":{"line":159,"column":29}}},"32":{"name":"(anonymous_32)","line":163,"loc":{"start":{"line":163,"column":12},"end":{"line":163,"column":29}}},"33":{"name":"(anonymous_33)","line":167,"loc":{"start":{"line":167,"column":12},"end":{"line":167,"column":29}}},"34":{"name":"(anonymous_34)","line":171,"loc":{"start":{"line":171,"column":12},"end":{"line":171,"column":29}}},"35":{"name":"(anonymous_35)","line":180,"loc":{"start":{"line":180,"column":12},"end":{"line":180,"column":29}}},"36":{"name":"(anonymous_36)","line":185,"loc":{"start":{"line":185,"column":12},"end":{"line":185,"column":29}}},"37":{"name":"(anonymous_37)","line":190,"loc":{"start":{"line":190,"column":12},"end":{"line":190,"column":29}}},"38":{"name":"(anonymous_38)","line":193,"loc":{"start":{"line":193,"column":12},"end":{"line":193,"column":29}}},"39":{"name":"(anonymous_39)","line":196,"loc":{"start":{"line":196,"column":12},"end":{"line":196,"column":29}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":3,"column":0},"end":{"line":11,"column":4}},"3":{"start":{"line":20,"column":0},"end":{"line":20,"column":21}},"4":{"start":{"line":21,"column":0},"end":{"line":44,"column":2}},"5":{"start":{"line":22,"column":2},"end":{"line":26,"column":13}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":210}},"7":{"start":{"line":30,"column":2},"end":{"line":30,"column":49}},"8":{"start":{"line":32,"column":2},"end":{"line":36,"column":5}},"9":{"start":{"line":33,"column":4},"end":{"line":35,"column":6}},"10":{"start":{"line":34,"column":6},"end":{"line":34,"column":29}},"11":{"start":{"line":37,"column":2},"end":{"line":41,"column":5}},"12":{"start":{"line":38,"column":4},"end":{"line":40,"column":6}},"13":{"start":{"line":39,"column":6},"end":{"line":39,"column":28}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":43}},"15":{"start":{"line":45,"column":0},"end":{"line":54,"column":2}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":31}},"17":{"start":{"line":50,"column":4},"end":{"line":50,"column":33}},"18":{"start":{"line":51,"column":4},"end":{"line":51,"column":117}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":16}},"20":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":61}},"22":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"23":{"start":{"line":61,"column":2},"end":{"line":61,"column":36}},"24":{"start":{"line":63,"column":0},"end":{"line":65,"column":2}},"25":{"start":{"line":64,"column":2},"end":{"line":64,"column":25}},"26":{"start":{"line":66,"column":0},"end":{"line":68,"column":2}},"27":{"start":{"line":67,"column":2},"end":{"line":67,"column":36}},"28":{"start":{"line":69,"column":0},"end":{"line":72,"column":2}},"29":{"start":{"line":70,"column":2},"end":{"line":70,"column":25}},"30":{"start":{"line":71,"column":2},"end":{"line":71,"column":26}},"31":{"start":{"line":73,"column":0},"end":{"line":76,"column":2}},"32":{"start":{"line":74,"column":2},"end":{"line":74,"column":26}},"33":{"start":{"line":75,"column":2},"end":{"line":75,"column":122}},"34":{"start":{"line":77,"column":0},"end":{"line":79,"column":2}},"35":{"start":{"line":78,"column":2},"end":{"line":78,"column":24}},"36":{"start":{"line":80,"column":0},"end":{"line":88,"column":2}},"37":{"start":{"line":81,"column":2},"end":{"line":83,"column":48}},"38":{"start":{"line":85,"column":2},"end":{"line":85,"column":36}},"39":{"start":{"line":86,"column":2},"end":{"line":86,"column":36}},"40":{"start":{"line":87,"column":2},"end":{"line":87,"column":40}},"41":{"start":{"line":91,"column":0},"end":{"line":104,"column":2}},"42":{"start":{"line":92,"column":2},"end":{"line":94,"column":11}},"43":{"start":{"line":96,"column":2},"end":{"line":96,"column":47}},"44":{"start":{"line":97,"column":2},"end":{"line":97,"column":28}},"45":{"start":{"line":98,"column":2},"end":{"line":98,"column":24}},"46":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"47":{"start":{"line":100,"column":4},"end":{"line":100,"column":60}},"48":{"start":{"line":103,"column":2},"end":{"line":103,"column":54}},"49":{"start":{"line":107,"column":0},"end":{"line":109,"column":2}},"50":{"start":{"line":108,"column":2},"end":{"line":108,"column":40}},"51":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"52":{"start":{"line":111,"column":2},"end":{"line":111,"column":68}},"53":{"start":{"line":113,"column":0},"end":{"line":115,"column":2}},"54":{"start":{"line":114,"column":2},"end":{"line":114,"column":40}},"55":{"start":{"line":116,"column":0},"end":{"line":118,"column":2}},"56":{"start":{"line":117,"column":2},"end":{"line":117,"column":30}},"57":{"start":{"line":119,"column":0},"end":{"line":121,"column":2}},"58":{"start":{"line":120,"column":2},"end":{"line":120,"column":78}},"59":{"start":{"line":124,"column":0},"end":{"line":126,"column":2}},"60":{"start":{"line":125,"column":2},"end":{"line":125,"column":63}},"61":{"start":{"line":127,"column":0},"end":{"line":131,"column":2}},"62":{"start":{"line":128,"column":2},"end":{"line":128,"column":41}},"63":{"start":{"line":129,"column":2},"end":{"line":129,"column":68}},"64":{"start":{"line":130,"column":2},"end":{"line":130,"column":30}},"65":{"start":{"line":132,"column":0},"end":{"line":134,"column":2}},"66":{"start":{"line":133,"column":2},"end":{"line":133,"column":29}},"67":{"start":{"line":135,"column":0},"end":{"line":137,"column":2}},"68":{"start":{"line":136,"column":2},"end":{"line":136,"column":52}},"69":{"start":{"line":140,"column":0},"end":{"line":142,"column":2}},"70":{"start":{"line":141,"column":2},"end":{"line":141,"column":45}},"71":{"start":{"line":143,"column":0},"end":{"line":145,"column":2}},"72":{"start":{"line":144,"column":2},"end":{"line":144,"column":45}},"73":{"start":{"line":146,"column":0},"end":{"line":151,"column":2}},"74":{"start":{"line":147,"column":2},"end":{"line":147,"column":41}},"75":{"start":{"line":148,"column":2},"end":{"line":148,"column":41}},"76":{"start":{"line":149,"column":2},"end":{"line":149,"column":110}},"77":{"start":{"line":150,"column":2},"end":{"line":150,"column":51}},"78":{"start":{"line":152,"column":0},"end":{"line":155,"column":2}},"79":{"start":{"line":153,"column":2},"end":{"line":153,"column":27}},"80":{"start":{"line":154,"column":2},"end":{"line":154,"column":46}},"81":{"start":{"line":156,"column":0},"end":{"line":158,"column":2}},"82":{"start":{"line":157,"column":2},"end":{"line":157,"column":26}},"83":{"start":{"line":159,"column":0},"end":{"line":162,"column":2}},"84":{"start":{"line":160,"column":2},"end":{"line":160,"column":27}},"85":{"start":{"line":161,"column":2},"end":{"line":161,"column":79}},"86":{"start":{"line":163,"column":0},"end":{"line":166,"column":2}},"87":{"start":{"line":164,"column":2},"end":{"line":164,"column":27}},"88":{"start":{"line":165,"column":2},"end":{"line":165,"column":33}},"89":{"start":{"line":167,"column":0},"end":{"line":170,"column":2}},"90":{"start":{"line":168,"column":2},"end":{"line":168,"column":29}},"91":{"start":{"line":169,"column":2},"end":{"line":169,"column":33}},"92":{"start":{"line":171,"column":0},"end":{"line":174,"column":2}},"93":{"start":{"line":172,"column":2},"end":{"line":172,"column":29}},"94":{"start":{"line":173,"column":2},"end":{"line":173,"column":33}},"95":{"start":{"line":180,"column":0},"end":{"line":183,"column":2}},"96":{"start":{"line":181,"column":2},"end":{"line":181,"column":37}},"97":{"start":{"line":182,"column":2},"end":{"line":182,"column":87}},"98":{"start":{"line":185,"column":0},"end":{"line":187,"column":2}},"99":{"start":{"line":186,"column":2},"end":{"line":186,"column":40}},"100":{"start":{"line":190,"column":0},"end":{"line":192,"column":2}},"101":{"start":{"line":191,"column":2},"end":{"line":191,"column":29}},"102":{"start":{"line":193,"column":0},"end":{"line":195,"column":2}},"103":{"start":{"line":194,"column":2},"end":{"line":194,"column":29}},"104":{"start":{"line":196,"column":0},"end":{"line":198,"column":2}},"105":{"start":{"line":197,"column":2},"end":{"line":197,"column":32}}},"branchMap":{"1":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":46},"end":{"line":28,"column":132}},{"start":{"line":28,"column":135},"end":{"line":28,"column":209}}]},"2":{"line":28,"type":"cond-expr","locations":[{"start":{"line":28,"column":162},"end":{"line":28,"column":196}},{"start":{"line":28,"column":199},"end":{"line":28,"column":209}}]},"3":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":33},"end":{"line":58,"column":36}},{"start":{"line":58,"column":39},"end":{"line":58,"column":41}}]},"4":{"line":71,"type":"cond-expr","locations":[{"start":{"line":71,"column":20},"end":{"line":71,"column":21}},{"start":{"line":71,"column":24},"end":{"line":71,"column":25}}]},"5":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":37},"end":{"line":75,"column":41}},{"start":{"line":75,"column":45},"end":{"line":75,"column":119}}]},"6":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":10},"end":{"line":75,"column":22}},{"start":{"line":75,"column":26},"end":{"line":75,"column":34}}]},"7":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":72},"end":{"line":75,"column":76}},{"start":{"line":75,"column":80},"end":{"line":75,"column":118}}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":45},"end":{"line":75,"column":57}},{"start":{"line":75,"column":61},"end":{"line":75,"column":69}}]},"9":{"line":75,"type":"cond-expr","locations":[{"start":{"line":75,"column":107},"end":{"line":75,"column":111}},{"start":{"line":75,"column":114},"end":{"line":75,"column":118}}]},"10":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":80},"end":{"line":75,"column":92}},{"start":{"line":75,"column":96},"end":{"line":75,"column":104}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"12":{"line":111,"type":"cond-expr","locations":[{"start":{"line":111,"column":33},"end":{"line":111,"column":36}},{"start":{"line":111,"column":39},"end":{"line":111,"column":41}}]},"13":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":33},"end":{"line":141,"column":37}},{"start":{"line":141,"column":40},"end":{"line":141,"column":44}}]},"14":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":33},"end":{"line":144,"column":37}},{"start":{"line":144,"column":40},"end":{"line":144,"column":44}}]},"15":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":27},"end":{"line":148,"column":28}},{"start":{"line":148,"column":31},"end":{"line":148,"column":40}}]},"16":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":19},"end":{"line":154,"column":21}},{"start":{"line":154,"column":25},"end":{"line":154,"column":44}}]},"17":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":34},"end":{"line":154,"column":40}},{"start":{"line":154,"column":43},"end":{"line":154,"column":44}}]},"18":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":43},"end":{"line":161,"column":46}},{"start":{"line":161,"column":49},"end":{"line":161,"column":51}}]},"19":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":11},"end":{"line":161,"column":17}},{"start":{"line":161,"column":22},"end":{"line":161,"column":28}},{"start":{"line":161,"column":32},"end":{"line":161,"column":38}}]},"20":{"line":161,"type":"cond-expr","locations":[{"start":{"line":161,"column":67},"end":{"line":161,"column":68}},{"start":{"line":161,"column":71},"end":{"line":161,"column":77}}]},"21":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":19},"end":{"line":165,"column":22}},{"start":{"line":165,"column":25},"end":{"line":165,"column":27}}]},"22":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":19},"end":{"line":169,"column":22}},{"start":{"line":169,"column":25},"end":{"line":169,"column":27}}]},"23":{"line":173,"type":"cond-expr","locations":[{"start":{"line":173,"column":19},"end":{"line":173,"column":22}},{"start":{"line":173,"column":25},"end":{"line":173,"column":27}}]},"24":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":19},"end":{"line":182,"column":22}},{"start":{"line":182,"column":25},"end":{"line":182,"column":28}}]},"25":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":48},"end":{"line":182,"column":51}},{"start":{"line":182,"column":54},"end":{"line":182,"column":56}}]}},"code":["var utils = require('./utils');","","var _months = {","    full: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],","    abbr: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']","  },","  _days = {","    full: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],","    abbr: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],","    alt: {'-1': 'Yesterday', 0: 'Today', 1: 'Tomorrow'}","  };","","/*","DateZ is licensed under the MIT License:","Copyright (c) 2011 Tomo Universalis (http://tomouniversalis.com)","Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","*/","exports.tzOffset = 0;","exports.DateZ = function () {","  var members = {","      'default': ['getUTCDate', 'getUTCDay', 'getUTCFullYear', 'getUTCHours', 'getUTCMilliseconds', 'getUTCMinutes', 'getUTCMonth', 'getUTCSeconds', 'toISOString', 'toGMTString', 'toUTCString', 'valueOf', 'getTime'],","      z: ['getDate', 'getDay', 'getFullYear', 'getHours', 'getMilliseconds', 'getMinutes', 'getMonth', 'getSeconds', 'getYear', 'toDateString', 'toLocaleDateString', 'toLocaleTimeString']","    },","    d = this;","","  d.date = d.dateZ = (arguments.length > 1) ? new Date(Date.UTC.apply(Date, arguments) + ((new Date()).getTimezoneOffset() * 60000)) : (arguments.length === 1) ? new Date(new Date(arguments['0'])) : new Date();","","  d.timezoneOffset = d.dateZ.getTimezoneOffset();","","  utils.each(members.z, function (name) {","    d[name] = function () {","      return d.dateZ[name]();","    };","  });","  utils.each(members['default'], function (name) {","    d[name] = function () {","      return d.date[name]();","    };","  });","","  this.setTimezoneOffset(exports.tzOffset);","};","exports.DateZ.prototype = {","  getTimezoneOffset: function () {","    return this.timezoneOffset;","  },","  setTimezoneOffset: function (offset) {","    this.timezoneOffset = offset;","    this.dateZ = new Date(this.date.getTime() + this.date.getTimezoneOffset() * 60000 - this.timezoneOffset * 60000);","    return this;","  }","};","","// Day","exports.d = function (input) {","  return (input.getDate() < 10 ? '0' : '') + input.getDate();","};","exports.D = function (input) {","  return _days.abbr[input.getDay()];","};","exports.j = function (input) {","  return input.getDate();","};","exports.l = function (input) {","  return _days.full[input.getDay()];","};","exports.N = function (input) {","  var d = input.getDay();","  return (d >= 1) ? d : 7;","};","exports.S = function (input) {","  var d = input.getDate();","  return (d % 10 === 1 && d !== 11 ? 'st' : (d % 10 === 2 && d !== 12 ? 'nd' : (d % 10 === 3 && d !== 13 ? 'rd' : 'th')));","};","exports.w = function (input) {","  return input.getDay();","};","exports.z = function (input, offset, abbr) {","  var year = input.getFullYear(),","    e = new exports.DateZ(year, input.getMonth(), input.getDate(), 12, 0, 0),","    d = new exports.DateZ(year, 0, 1, 12, 0, 0);","","  e.setTimezoneOffset(offset, abbr);","  d.setTimezoneOffset(offset, abbr);","  return Math.round((e - d) / 86400000);","};","","// Week","exports.W = function (input) {","  var target = new Date(input.valueOf()),","    dayNr = (input.getDay() + 6) % 7,","    fThurs;","","  target.setDate(target.getDate() - dayNr + 3);","  fThurs = target.valueOf();","  target.setMonth(0, 1);","  if (target.getDay() !== 4) {","    target.setMonth(0, 1 + ((4 - target.getDay()) + 7) % 7);","  }","","  return 1 + Math.ceil((fThurs - target) / 604800000);","};","","// Month","exports.F = function (input) {","  return _months.full[input.getMonth()];","};","exports.m = function (input) {","  return (input.getMonth() < 9 ? '0' : '') + (input.getMonth() + 1);","};","exports.M = function (input) {","  return _months.abbr[input.getMonth()];","};","exports.n = function (input) {","  return input.getMonth() + 1;","};","exports.t = function (input) {","  return 32 - (new Date(input.getFullYear(), input.getMonth(), 32).getDate());","};","","// Year","exports.L = function (input) {","  return new Date(input.getFullYear(), 1, 29).getDate() === 29;","};","exports.o = function (input) {","  var target = new Date(input.valueOf());","  target.setDate(target.getDate() - ((input.getDay() + 6) % 7) + 3);","  return target.getFullYear();","};","exports.Y = function (input) {","  return input.getFullYear();","};","exports.y = function (input) {","  return (input.getFullYear().toString()).substr(2);","};","","// Time","exports.a = function (input) {","  return input.getHours() < 12 ? 'am' : 'pm';","};","exports.A = function (input) {","  return input.getHours() < 12 ? 'AM' : 'PM';","};","exports.B = function (input) {","  var hours = input.getUTCHours(), beats;","  hours = (hours === 23) ? 0 : hours + 1;","  beats = Math.abs(((((hours * 60) + input.getUTCMinutes()) * 60) + input.getUTCSeconds()) / 86.4).toFixed(0);","  return ('000'.concat(beats).slice(beats.length));","};","exports.g = function (input) {","  var h = input.getHours();","  return h === 0 ? 12 : (h > 12 ? h - 12 : h);","};","exports.G = function (input) {","  return input.getHours();","};","exports.h = function (input) {","  var h = input.getHours();","  return ((h < 10 || (12 < h && 22 > h)) ? '0' : '') + ((h < 12) ? h : h - 12);","};","exports.H = function (input) {","  var h = input.getHours();","  return (h < 10 ? '0' : '') + h;","};","exports.i = function (input) {","  var m = input.getMinutes();","  return (m < 10 ? '0' : '') + m;","};","exports.s = function (input) {","  var s = input.getSeconds();","  return (s < 10 ? '0' : '') + s;","};","//u = function () { return ''; },","","// Timezone","//e = function () { return ''; },","//I = function () { return ''; },","exports.O = function (input) {","  var tz = input.getTimezoneOffset();","  return (tz < 0 ? '-' : '+') + (tz / 60 < 10 ? '0' : '') + Math.abs((tz / 60)) + '00';","};","//T = function () { return ''; },","exports.Z = function (input) {","  return input.getTimezoneOffset() * 60;","};","","// Full Date/Time","exports.c = function (input) {","  return input.toISOString();","};","exports.r = function (input) {","  return input.toUTCString();","};","exports.U = function (input) {","  return input.getTime() / 1000;","};",""],"l":{"1":1,"3":1,"20":1,"21":1,"22":0,"28":0,"30":0,"32":0,"33":0,"34":0,"37":0,"38":0,"39":0,"43":0,"45":1,"47":0,"50":0,"51":0,"52":0,"57":1,"58":0,"60":1,"61":0,"63":1,"64":0,"66":1,"67":0,"69":1,"70":0,"71":0,"73":1,"74":0,"75":0,"77":1,"78":0,"80":1,"81":0,"85":0,"86":0,"87":0,"91":1,"92":0,"96":0,"97":0,"98":0,"99":0,"100":0,"103":0,"107":1,"108":0,"110":1,"111":0,"113":1,"114":0,"116":1,"117":0,"119":1,"120":0,"124":1,"125":0,"127":1,"128":0,"129":0,"130":0,"132":1,"133":0,"135":1,"136":0,"140":1,"141":0,"143":1,"144":0,"146":1,"147":0,"148":0,"149":0,"150":0,"152":1,"153":0,"154":0,"156":1,"157":0,"159":1,"160":0,"161":0,"163":1,"164":0,"165":0,"167":1,"168":0,"169":0,"171":1,"172":0,"173":0,"180":1,"181":0,"182":0,"185":1,"186":0,"190":1,"191":0,"193":1,"194":0,"196":1,"197":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/for.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/for.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":44,"loc":{"start":{"line":44,"column":18},"end":{"line":44,"column":82}}},"2":{"name":"(anonymous_2)","line":81,"loc":{"start":{"line":81,"column":16},"end":{"line":81,"column":52}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":26},"end":{"line":84,"column":43}}},"4":{"name":"(anonymous_4)","line":98,"loc":{"start":{"line":98,"column":23},"end":{"line":98,"column":40}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":25},"end":{"line":110,"column":42}}},"6":{"name":"(anonymous_6)","line":119,"loc":{"start":{"line":119,"column":30},"end":{"line":119,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":44,"column":0},"end":{"line":79,"column":2}},"3":{"start":{"line":45,"column":2},"end":{"line":48,"column":9}},"4":{"start":{"line":50,"column":2},"end":{"line":54,"column":3}},"5":{"start":{"line":51,"column":4},"end":{"line":51,"column":17}},"6":{"start":{"line":52,"column":4},"end":{"line":52,"column":14}},"7":{"start":{"line":53,"column":4},"end":{"line":53,"column":23}},"8":{"start":{"line":56,"column":2},"end":{"line":56,"column":23}},"9":{"start":{"line":58,"column":2},"end":{"line":78,"column":13}},"10":{"start":{"line":81,"column":0},"end":{"line":128,"column":2}},"11":{"start":{"line":82,"column":2},"end":{"line":82,"column":22}},"12":{"start":{"line":84,"column":2},"end":{"line":96,"column":5}},"13":{"start":{"line":85,"column":4},"end":{"line":85,"column":81}},"14":{"start":{"line":86,"column":4},"end":{"line":94,"column":5}},"15":{"start":{"line":93,"column":6},"end":{"line":93,"column":87}},"16":{"start":{"line":95,"column":4},"end":{"line":95,"column":16}},"17":{"start":{"line":98,"column":2},"end":{"line":108,"column":5}},"18":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"19":{"start":{"line":100,"column":6},"end":{"line":100,"column":18}},"20":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"21":{"start":{"line":104,"column":6},"end":{"line":104,"column":22}},"22":{"start":{"line":107,"column":4},"end":{"line":107,"column":31}},"23":{"start":{"line":110,"column":2},"end":{"line":117,"column":5}},"24":{"start":{"line":111,"column":4},"end":{"line":114,"column":5}},"25":{"start":{"line":112,"column":6},"end":{"line":112,"column":33}},"26":{"start":{"line":113,"column":6},"end":{"line":113,"column":13}},"27":{"start":{"line":116,"column":4},"end":{"line":116,"column":16}},"28":{"start":{"line":119,"column":2},"end":{"line":125,"column":5}},"29":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"30":{"start":{"line":121,"column":6},"end":{"line":121,"column":86}},"31":{"start":{"line":123,"column":4},"end":{"line":123,"column":17}},"32":{"start":{"line":124,"column":4},"end":{"line":124,"column":46}},"33":{"start":{"line":127,"column":2},"end":{"line":127,"column":14}},"34":{"start":{"line":130,"column":0},"end":{"line":130,"column":20}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"2":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":13}},{"start":{"line":50,"column":17},"end":{"line":50,"column":32}}]},"3":{"line":85,"type":"cond-expr","locations":[{"start":{"line":85,"column":40},"end":{"line":85,"column":73}},{"start":{"line":85,"column":76},"end":{"line":85,"column":80}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"5":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":14}},{"start":{"line":87,"column":9},"end":{"line":87,"column":38}},{"start":{"line":88,"column":10},"end":{"line":88,"column":39}},{"start":{"line":89,"column":10},"end":{"line":89,"column":40}},{"start":{"line":90,"column":10},"end":{"line":90,"column":38}},{"start":{"line":91,"column":10},"end":{"line":91,"column":36}}]},"6":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"7":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":13}},{"start":{"line":99,"column":17},"end":{"line":99,"column":25}}]},"8":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"9":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"10":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":16}},{"start":{"line":111,"column":20},"end":{"line":111,"column":53}}]},"11":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"12":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":28}},{"start":{"line":120,"column":32},"end":{"line":120,"column":41}}]}},"code":["var ctx = '_ctx.',","  ctxloop = ctx + 'loop';","","/**"," * Loop over objects and arrays."," *"," * @alias for"," *"," * @example"," * // obj = { one: 'hi', two: 'bye' };"," * {% for x in obj %}"," *   {% if loop.first %}<ul>{% endif %}"," *   <li>{{ loop.index }} - {{ loop.key }}: {{ x }}</li>"," *   {% if loop.last %}</ul>{% endif %}"," * {% endfor %}"," * // => <ul>"," * //    <li>1 - one: hi</li>"," * //    <li>2 - two: bye</li>"," * //    </ul>"," *"," * @example"," * // arr = [1, 2, 3]"," * // Reverse the array, shortcut the key/index to `key`"," * {% for key, val in arr|reverse %}"," * {{ key }} -- {{ val }}"," * {% endfor %}"," * // => 0 -- 3"," * //    1 -- 2"," * //    2 -- 1"," *"," * @param {literal} [key]     A shortcut to the index of the array or current key accessor."," * @param {literal} variable  The current value will be assigned to this variable name temporarily. The variable will be reset upon ending the for tag."," * @param {literal} in        Literally, \"in\". This token is required."," * @param {object}  object    An enumerable object that will be iterated over."," *"," * @return {loop.index} The current iteration of the loop (1-indexed)"," * @return {loop.index0} The current iteration of the loop (0-indexed)"," * @return {loop.revindex} The number of iterations from the end of the loop (1-indexed)"," * @return {loop.revindex0} The number of iterations from the end of the loop (0-indexed)"," * @return {loop.key} If the iterator is an object, this will be the key of the current item, otherwise it will be the same as the loop.index."," * @return {loop.first} True if the current object is the first in the object or array."," * @return {loop.last} True if the current object is the last in the object or array."," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  var val = args.shift(),","    key = '__k',","    ctxloopcache = (ctx + '__loopcache' + Math.random()).replace(/\\./g, ''),","    last;","","  if (args[0] && args[0] === ',') {","    args.shift();","    key = val;","    val = args.shift();","  }","","  last = args.join('');","","  return [","    '(function () {\\n',","    '  var __l = ' + last + ', __len = (_utils.isArray(__l) || typeof __l === \"string\") ? __l.length : _utils.keys(__l).length;\\n',","    '  if (!__l) { return; }\\n',","    '    var ' + ctxloopcache + ' = { loop: ' + ctxloop + ', ' + val + ': ' + ctx + val + ', ' + key + ': ' + ctx + key + ' };\\n',","    '    ' + ctxloop + ' = { first: false, index: 1, index0: 0, revindex: __len, revindex0: __len - 1, length: __len, last: false };\\n',","    '  _utils.each(__l, function (' + val + ', ' + key + ') {\\n',","    '    ' + ctx + val + ' = ' + val + ';\\n',","    '    ' + ctx + key + ' = ' + key + ';\\n',","    '    ' + ctxloop + '.key = ' + key + ';\\n',","    '    ' + ctxloop + '.first = (' + ctxloop + '.index0 === 0);\\n',","    '    ' + ctxloop + '.last = (' + ctxloop + '.revindex0 === 0);\\n',","    '    ' + compiler(content, parents, options, blockName),","    '    ' + ctxloop + '.index += 1; ' + ctxloop + '.index0 += 1; ' + ctxloop + '.revindex -= 1; ' + ctxloop + '.revindex0 -= 1;\\n',","    '  });\\n',","    '  ' + ctxloop + ' = ' + ctxloopcache + '.loop;\\n',","    '  ' + ctx + val + ' = ' + ctxloopcache + '.' + val + ';\\n',","    '  ' + ctx + key + ' = ' + ctxloopcache + '.' + key + ';\\n',","    '  ' + ctxloopcache + ' = undefined;\\n',","    '})();\\n'","  ].join('');","};","","exports.parse = function (str, line, parser, types) {","  var firstVar, ready;","","  parser.on(types.NUMBER, function (token) {","    var lastState = this.state.length ? this.state[this.state.length - 1] : null;","    if (!ready ||","        (lastState !== types.ARRAYOPEN &&","          lastState !== types.CURLYOPEN &&","          lastState !== types.CURLYCLOSE &&","          lastState !== types.FUNCTION &&","          lastState !== types.FILTER)","        ) {","      throw new Error('Unexpected number \"' + token.match + '\" on line ' + line + '.');","    }","    return true;","  });","","  parser.on(types.VAR, function (token) {","    if (ready && firstVar) {","      return true;","    }","","    if (!this.out.length) {","      firstVar = true;","    }","","    this.out.push(token.match);","  });","","  parser.on(types.COMMA, function (token) {","    if (firstVar && this.prevToken.type === types.VAR) {","      this.out.push(token.match);","      return;","    }","","    return true;","  });","","  parser.on(types.COMPARATOR, function (token) {","    if (token.match !== 'in' || !firstVar) {","      throw new Error('Unexpected token \"' + token.match + '\" on line ' + line + '.');","    }","    ready = true;","    this.filterApplyIdx.push(this.out.length);","  });","","  return true;","};","","exports.ends = true;",""],"l":{"1":1,"44":1,"45":0,"50":0,"51":0,"52":0,"53":0,"56":0,"58":0,"81":1,"82":0,"84":0,"85":0,"86":0,"93":0,"95":0,"98":0,"99":0,"100":0,"103":0,"104":0,"107":0,"110":0,"111":0,"112":0,"113":0,"116":0,"119":0,"120":0,"121":0,"123":0,"124":0,"127":0,"130":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/import.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/import.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":18},"end":{"line":23,"column":44}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":32},"end":{"line":25,"column":47}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":35},"end":{"line":29,"column":50}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":34}}},"5":{"name":"(anonymous_5)","line":40,"loc":{"start":{"line":40,"column":29},"end":{"line":40,"column":43}}},"6":{"name":"(anonymous_6)","line":49,"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":71}}},"7":{"name":"(anonymous_7)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":43}}},"8":{"name":"(anonymous_8)","line":60,"loc":{"start":{"line":60,"column":25},"end":{"line":60,"column":42}}},"9":{"name":"(anonymous_9)","line":76,"loc":{"start":{"line":76,"column":23},"end":{"line":76,"column":40}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":32}},"2":{"start":{"line":23,"column":0},"end":{"line":47,"column":2}},"3":{"start":{"line":24,"column":2},"end":{"line":34,"column":7}},"4":{"start":{"line":26,"column":6},"end":{"line":26,"column":22}},"5":{"start":{"line":30,"column":6},"end":{"line":33,"column":8}},"6":{"start":{"line":38,"column":2},"end":{"line":44,"column":5}},"7":{"start":{"line":39,"column":4},"end":{"line":39,"column":25}},"8":{"start":{"line":40,"column":4},"end":{"line":42,"column":7}},"9":{"start":{"line":41,"column":6},"end":{"line":41,"column":34}},"10":{"start":{"line":43,"column":4},"end":{"line":43,"column":13}},"11":{"start":{"line":46,"column":2},"end":{"line":46,"column":13}},"12":{"start":{"line":49,"column":0},"end":{"line":92,"column":2}},"13":{"start":{"line":50,"column":2},"end":{"line":54,"column":8}},"14":{"start":{"line":56,"column":2},"end":{"line":74,"column":5}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":20}},"16":{"start":{"line":58,"column":4},"end":{"line":71,"column":5}},"17":{"start":{"line":59,"column":6},"end":{"line":59,"column":91}},"18":{"start":{"line":60,"column":6},"end":{"line":69,"column":9}},"19":{"start":{"line":61,"column":8},"end":{"line":62,"column":20}},"20":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"21":{"start":{"line":64,"column":10},"end":{"line":64,"column":17}},"22":{"start":{"line":66,"column":8},"end":{"line":66,"column":34}},"23":{"start":{"line":67,"column":8},"end":{"line":67,"column":90}},"24":{"start":{"line":68,"column":8},"end":{"line":68,"column":56}},"25":{"start":{"line":70,"column":6},"end":{"line":70,"column":13}},"26":{"start":{"line":73,"column":4},"end":{"line":73,"column":83}},"27":{"start":{"line":76,"column":2},"end":{"line":89,"column":5}},"28":{"start":{"line":77,"column":4},"end":{"line":77,"column":20}},"29":{"start":{"line":78,"column":4},"end":{"line":80,"column":5}},"30":{"start":{"line":79,"column":6},"end":{"line":79,"column":89}},"31":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"32":{"start":{"line":83,"column":6},"end":{"line":83,"column":13}},"33":{"start":{"line":86,"column":4},"end":{"line":86,"column":22}},"34":{"start":{"line":87,"column":4},"end":{"line":87,"column":23}},"35":{"start":{"line":88,"column":4},"end":{"line":88,"column":17}},"36":{"start":{"line":91,"column":2},"end":{"line":91,"column":14}},"37":{"start":{"line":94,"column":0},"end":{"line":94,"column":21}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"2":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"3":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":18}},{"start":{"line":63,"column":22},"end":{"line":63,"column":44}},{"start":{"line":63,"column":48},"end":{"line":63,"column":62}}]},"4":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"5":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":8},"end":{"line":78,"column":15}},{"start":{"line":78,"column":19},"end":{"line":78,"column":22}}]},"6":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]}},"code":["var utils = require('../utils');","","/**"," * Allows you to import macros from another file directly into your current context."," * The import tag is specifically designed for importing macros into your template with a specific context scope. This is very useful for keeping your macros from overriding template context that is being injected by your server-side page generation."," *"," * @alias import"," *"," * @example"," * {% import './formmacros.html' as form %}"," * {{ form.input(\"text\", \"name\") }}"," * // => <input type=\"text\" name=\"name\">"," *"," * @example"," * {% import \"../shared/tags.html\" as tags %}"," * {{ tags.stylesheet('global') }}"," * // => <link rel=\"stylesheet\" href=\"/global.css\">"," *"," * @param {string|var}  file      Relative path from the current template file to the file to import macros from."," * @param {literal}     as        Literally, \"as\"."," * @param {literal}     varname   Local-accessible object name to assign the macros to."," */","exports.compile = function (compiler, args) {","  var ctx = args.pop(),","    allMacros = utils.map(args, function (arg) {","      return arg.name;","    }).join('|'),","    out = '_ctx.' + ctx + ' = {};\\n  var _output = \"\";\\n',","    replacements = utils.map(args, function (arg) {","      return {","        ex: new RegExp('_ctx.' + arg.name + '(\\\\W)(?!' + allMacros + ')', 'g'),","        re: '_ctx.' + ctx + '.' + arg.name + '$1'","      };","    });","","  // Replace all occurrences of all macros in this file with","  // proper namespaced definitions and calls","  utils.each(args, function (arg) {","    var c = arg.compiled;","    utils.each(replacements, function (re) {","      c = c.replace(re.ex, re.re);","    });","    out += c;","  });","","  return out;","};","","exports.parse = function (str, line, parser, types, stack, opts, swig) {","  var compiler = require('../parser').compile,","    parseOpts = { resolveFrom: opts.filename },","    compileOpts = utils.extend({}, opts, parseOpts),","    tokens,","    ctx;","","  parser.on(types.STRING, function (token) {","    var self = this;","    if (!tokens) {","      tokens = swig.parseFile(token.match.replace(/^(\"|')|(\"|')$/g, ''), parseOpts).tokens;","      utils.each(tokens, function (token) {","        var out = '',","          macroName;","        if (!token || token.name !== 'macro' || !token.compile) {","          return;","        }","        macroName = token.args[0];","        out += token.compile(compiler, token.args, token.content, [], compileOpts) + '\\n';","        self.out.push({compiled: out, name: macroName});","      });","      return;","    }","","    throw new Error('Unexpected string ' + token.match + ' on line ' + line + '.');","  });","","  parser.on(types.VAR, function (token) {","    var self = this;","    if (!tokens || ctx) {","      throw new Error('Unexpected variable \"' + token.match + '\" on line ' + line + '.');","    }","","    if (token.match === 'as') {","      return;","    }","","    ctx = token.match;","    self.out.push(ctx);","    return false;","  });","","  return true;","};","","exports.block = true;",""],"l":{"1":1,"23":1,"24":0,"26":0,"30":0,"38":0,"39":0,"40":0,"41":0,"43":0,"46":0,"49":1,"50":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"68":0,"70":0,"73":0,"76":0,"77":0,"78":0,"79":0,"82":0,"83":0,"86":0,"87":0,"88":0,"91":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/include.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/include.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":44}}},"2":{"name":"(anonymous_2)","line":48,"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":65}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":26},"end":{"line":50,"column":43}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":23},"end":{"line":60,"column":40}}},"5":{"name":"(anonymous_5)","line":95,"loc":{"start":{"line":95,"column":19},"end":{"line":95,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":16}},"2":{"start":{"line":31,"column":0},"end":{"line":46,"column":2}},"3":{"start":{"line":32,"column":2},"end":{"line":37,"column":22}},"4":{"start":{"line":39,"column":2},"end":{"line":45,"column":39}},"5":{"start":{"line":48,"column":0},"end":{"line":100,"column":2}},"6":{"start":{"line":49,"column":2},"end":{"line":49,"column":14}},"7":{"start":{"line":50,"column":2},"end":{"line":58,"column":5}},"8":{"start":{"line":51,"column":4},"end":{"line":55,"column":5}},"9":{"start":{"line":52,"column":6},"end":{"line":52,"column":25}},"10":{"start":{"line":53,"column":6},"end":{"line":53,"column":26}},"11":{"start":{"line":54,"column":6},"end":{"line":54,"column":13}},"12":{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},"13":{"start":{"line":60,"column":2},"end":{"line":93,"column":5}},"14":{"start":{"line":61,"column":4},"end":{"line":64,"column":5}},"15":{"start":{"line":62,"column":6},"end":{"line":62,"column":25}},"16":{"start":{"line":63,"column":6},"end":{"line":63,"column":18}},"17":{"start":{"line":66,"column":4},"end":{"line":69,"column":5}},"18":{"start":{"line":67,"column":6},"end":{"line":67,"column":15}},"19":{"start":{"line":68,"column":6},"end":{"line":68,"column":13}},"20":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"21":{"start":{"line":72,"column":6},"end":{"line":72,"column":33}},"22":{"start":{"line":73,"column":6},"end":{"line":73,"column":13}},"23":{"start":{"line":76,"column":4},"end":{"line":78,"column":5}},"24":{"start":{"line":77,"column":6},"end":{"line":77,"column":19}},"25":{"start":{"line":80,"column":4},"end":{"line":86,"column":5}},"26":{"start":{"line":81,"column":6},"end":{"line":83,"column":7}},"27":{"start":{"line":82,"column":8},"end":{"line":82,"column":84}},"28":{"start":{"line":84,"column":6},"end":{"line":84,"column":33}},"29":{"start":{"line":85,"column":6},"end":{"line":85,"column":19}},"30":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"31":{"start":{"line":89,"column":6},"end":{"line":89,"column":106}},"32":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"33":{"start":{"line":95,"column":2},"end":{"line":97,"column":5}},"34":{"start":{"line":96,"column":4},"end":{"line":96,"column":41}},"35":{"start":{"line":99,"column":2},"end":{"line":99,"column":14}}},"branchMap":{"1":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":31},"end":{"line":34,"column":54}},{"start":{"line":34,"column":57},"end":{"line":34,"column":62}}]},"2":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":18},"end":{"line":35,"column":28}},{"start":{"line":35,"column":32},"end":{"line":35,"column":34}}]},"3":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":50},"end":{"line":36,"column":60}},{"start":{"line":36,"column":64},"end":{"line":36,"column":69}}]},"4":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":19},"end":{"line":39,"column":30}},{"start":{"line":39,"column":33},"end":{"line":39,"column":35}}]},"5":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":22},"end":{"line":43,"column":23}},{"start":{"line":43,"column":27},"end":{"line":43,"column":77}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":13}},{"start":{"line":43,"column":17},"end":{"line":43,"column":18}}]},"7":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":32},"end":{"line":43,"column":38}},{"start":{"line":43,"column":41},"end":{"line":43,"column":77}}]},"8":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":14},"end":{"line":45,"column":32}},{"start":{"line":45,"column":35},"end":{"line":45,"column":37}}]},"9":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"11":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"12":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":8},"end":{"line":66,"column":10}},{"start":{"line":66,"column":14},"end":{"line":66,"column":36}}]},"13":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"14":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":9}},{"start":{"line":71,"column":13},"end":{"line":71,"column":33}},{"start":{"line":71,"column":37},"end":{"line":71,"column":68}}]},"15":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"16":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"17":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"18":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"19":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":18},"end":{"line":96,"column":31}},{"start":{"line":96,"column":35},"end":{"line":96,"column":39}}]}},"code":["var ignore = 'ignore',","  missing = 'missing',","  only = 'only';","","/**"," * Includes a template partial in place. The template is rendered within the current locals variable context."," *"," * @alias include"," *"," * @example"," * // food = 'burritos';"," * // drink = 'lemonade';"," * {% include \"./partial.html\" %}"," * // => I like burritos and lemonade."," *"," * @example"," * // my_obj = { food: 'tacos', drink: 'horchata' };"," * {% include \"./partial.html\" with my_obj only %}"," * // => I like tacos and horchata."," *"," * @example"," * {% include \"/this/file/does/not/exist\" ignore missing %}"," * // => (Nothing! empty string)"," *"," * @param {string|var}  file      The path, relative to the template root, to render into the current context."," * @param {literal}     [with]    Literally, \"with\"."," * @param {object}      [context] Local variable key-value object context to provide to the included file."," * @param {literal}     [only]    Restricts to <strong>only</strong> passing the <code>with context</code> as local variables–the included template will not be aware of any other local variables in the parent template. For best performance, usage of this option is recommended if possible."," * @param {literal}     [ignore missing] Will output empty string if not found instead of throwing an error."," */","exports.compile = function (compiler, args) {","  var file = args.shift(),","    onlyIdx = args.indexOf(only),","    onlyCtx = onlyIdx !== -1 ? args.splice(onlyIdx, 1) : false,","    parentFile = (args.pop() || '').replace(/\\\\/g, '\\\\\\\\'),","    ignore = args[args.length - 1] === missing ? (args.pop()) : false,","    w = args.join('');","","  return (ignore ? '  try {\\n' : '') +","    '_output += _swig.compileFile(' + file + ', {' +","    'resolveFrom: \"' + parentFile + '\"' +","    '})(' +","    ((onlyCtx && w) ? w : (!w ? '_ctx' : '_utils.extend({}, _ctx, ' + w + ')')) +","    ');\\n' +","    (ignore ? '} catch (e) {}\\n' : '');","};","","exports.parse = function (str, line, parser, types, stack, opts) {","  var file, w;","  parser.on(types.STRING, function (token) {","    if (!file) {","      file = token.match;","      this.out.push(file);","      return;","    }","","    return true;","  });","","  parser.on(types.VAR, function (token) {","    if (!file) {","      file = token.match;","      return true;","    }","","    if (!w && token.match === 'with') {","      w = true;","      return;","    }","","    if (w && token.match === only && this.prevToken.match !== 'with') {","      this.out.push(token.match);","      return;","    }","","    if (token.match === ignore) {","      return false;","    }","","    if (token.match === missing) {","      if (this.prevToken.match !== ignore) {","        throw new Error('Unexpected token \"' + missing + '\" on line ' + line + '.');","      }","      this.out.push(token.match);","      return false;","    }","","    if (this.prevToken.match === ignore) {","      throw new Error('Expected \"' + missing + '\" on line ' + line + ' but found \"' + token.match + '\".');","    }","","    return true;","  });","","  parser.on('end', function () {","    this.out.push(opts.filename || null);","  });","","  return true;","};",""],"l":{"1":1,"31":1,"32":0,"39":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"57":0,"60":0,"61":0,"62":0,"63":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"76":0,"77":0,"80":0,"81":0,"82":0,"84":0,"85":0,"88":0,"89":0,"92":0,"95":0,"96":0,"99":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/macro.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/macro.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":19,"loc":{"start":{"line":19,"column":18},"end":{"line":19,"column":82}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":52}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":23},"end":{"line":38,"column":40}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":28},"end":{"line":45,"column":45}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":33},"end":{"line":53,"column":50}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":30},"end":{"line":60,"column":42}}},"7":{"name":"(anonymous_7)","line":67,"loc":{"start":{"line":67,"column":25},"end":{"line":67,"column":37}}},"8":{"name":"(anonymous_8)","line":71,"loc":{"start":{"line":71,"column":17},"end":{"line":71,"column":29}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":33,"column":2}},"2":{"start":{"line":20,"column":2},"end":{"line":20,"column":28}},"3":{"start":{"line":22,"column":2},"end":{"line":32,"column":41}},"4":{"start":{"line":35,"column":0},"end":{"line":76,"column":2}},"5":{"start":{"line":36,"column":2},"end":{"line":36,"column":11}},"6":{"start":{"line":38,"column":2},"end":{"line":43,"column":5}},"7":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"8":{"start":{"line":40,"column":6},"end":{"line":40,"column":102}},"9":{"start":{"line":42,"column":4},"end":{"line":42,"column":31}},"10":{"start":{"line":45,"column":2},"end":{"line":51,"column":5}},"11":{"start":{"line":46,"column":4},"end":{"line":50,"column":5}},"12":{"start":{"line":47,"column":6},"end":{"line":47,"column":25}},"13":{"start":{"line":48,"column":6},"end":{"line":48,"column":26}},"14":{"start":{"line":49,"column":6},"end":{"line":49,"column":38}},"15":{"start":{"line":53,"column":2},"end":{"line":58,"column":5}},"16":{"start":{"line":54,"column":4},"end":{"line":57,"column":5}},"17":{"start":{"line":55,"column":6},"end":{"line":55,"column":25}},"18":{"start":{"line":56,"column":6},"end":{"line":56,"column":26}},"19":{"start":{"line":60,"column":2},"end":{"line":65,"column":5}},"20":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"21":{"start":{"line":62,"column":6},"end":{"line":62,"column":13}},"22":{"start":{"line":64,"column":4},"end":{"line":64,"column":74}},"23":{"start":{"line":67,"column":2},"end":{"line":69,"column":5}},"24":{"start":{"line":68,"column":4},"end":{"line":68,"column":16}},"25":{"start":{"line":71,"column":2},"end":{"line":73,"column":5}},"26":{"start":{"line":72,"column":4},"end":{"line":72,"column":11}},"27":{"start":{"line":75,"column":2},"end":{"line":75,"column":14}},"28":{"start":{"line":78,"column":0},"end":{"line":78,"column":20}},"29":{"start":{"line":79,"column":0},"end":{"line":79,"column":21}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"4":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]}},"code":["/**"," * Create custom, reusable snippets within your templates."," * Can be imported from one template to another using the <a href=\"#import\"><code data-language=\"swig\">{% import ... %}</code></a> tag."," *"," * @alias macro"," *"," * @example"," * {% macro input(type, name, id, label, value, error) %}"," *   <label for=\"{{ name }}\">{{ label }}</label>"," *   <input type=\"{{ type }}\" name=\"{{ name }}\" id=\"{{ id }}\" value=\"{{ value }}\"{% if error %} class=\"error\"{% endif %}>"," * {% endmacro %}"," *"," * {{ input(\"text\", \"fname\", \"fname\", \"First Name\", fname.value, fname.errors) }}"," * // => <label for=\"fname\">First Name</label>"," * //    <input type=\"text\" name=\"fname\" id=\"fname\" value=\"\">"," *"," * @param {...arguments} arguments  User-defined arguments."," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  var fnName = args.shift();","","  return '_ctx.' + fnName + ' = function (' + args.join('') + ') {\\n' +","    '  var _output = \"\",\\n' +","    '    __ctx = _utils.extend({}, _ctx);\\n' +","    '  _utils.each(_ctx, function (v, k) {\\n' +","    '    if ([\"' + args.join('\",\"') + '\"].indexOf(k) !== -1) { delete _ctx[k]; }\\n' +","    '  });\\n' +","    compiler(content, parents, options, blockName) + '\\n' +","    ' _ctx = _utils.extend(_ctx, __ctx);\\n' +","    '  return _output;\\n' +","    '};\\n' +","    '_ctx.' + fnName + '.safe = true;\\n';","};","","exports.parse = function (str, line, parser, types) {","  var name;","","  parser.on(types.VAR, function (token) {","    if (token.match.indexOf('.') !== -1) {","      throw new Error('Unexpected dot in macro argument \"' + token.match + '\" on line ' + line + '.');","    }","    this.out.push(token.match);","  });","","  parser.on(types.FUNCTION, function (token) {","    if (!name) {","      name = token.match;","      this.out.push(name);","      this.state.push(types.FUNCTION);","    }","  });","","  parser.on(types.FUNCTIONEMPTY, function (token) {","    if (!name) {","      name = token.match;","      this.out.push(name);","    }","  });","","  parser.on(types.PARENCLOSE, function () {","    if (this.isLast) {","      return;","    }","    throw new Error('Unexpected parenthesis close on line ' + line + '.');","  });","","  parser.on(types.COMMA, function () {","    return true;","  });","","  parser.on('*', function () {","    return;","  });","","  return true;","};","","exports.ends = true;","exports.block = true;",""],"l":{"19":1,"20":0,"22":0,"35":1,"36":0,"38":0,"39":0,"40":0,"42":0,"45":0,"46":0,"47":0,"48":0,"49":0,"53":0,"54":0,"55":0,"56":0,"60":0,"61":0,"62":0,"64":0,"67":0,"68":0,"71":0,"72":0,"75":0,"78":1,"79":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/parent.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/parent.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":18},"end":{"line":16,"column":82}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":16},"end":{"line":41,"column":65}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":34}}},"4":{"name":"(anonymous_4)","line":46,"loc":{"start":{"line":46,"column":19},"end":{"line":46,"column":31}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":39,"column":2}},"2":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"3":{"start":{"line":18,"column":4},"end":{"line":18,"column":14}},"4":{"start":{"line":21,"column":2},"end":{"line":26,"column":10}},"5":{"start":{"line":28,"column":2},"end":{"line":38,"column":3}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":24}},"7":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"8":{"start":{"line":31,"column":6},"end":{"line":31,"column":15}},"9":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"10":{"start":{"line":35,"column":6},"end":{"line":35,"column":39}},"11":{"start":{"line":36,"column":6},"end":{"line":36,"column":103}},"12":{"start":{"line":41,"column":0},"end":{"line":51,"column":2}},"13":{"start":{"line":42,"column":2},"end":{"line":44,"column":5}},"14":{"start":{"line":43,"column":4},"end":{"line":43,"column":87}},"15":{"start":{"line":46,"column":2},"end":{"line":48,"column":5}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":33}},"17":{"start":{"line":50,"column":2},"end":{"line":50,"column":14}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":14}},{"start":{"line":17,"column":18},"end":{"line":17,"column":33}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"4":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":22}},{"start":{"line":30,"column":26},"end":{"line":30,"column":66}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"6":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":15}},{"start":{"line":34,"column":19},"end":{"line":34,"column":45}}]}},"code":["/**"," * Inject the content from the parent template's block of the same name into the current block."," *"," * See <a href=\"#inheritance\">Template Inheritance</a> for more information."," *"," * @alias parent"," *"," * @example"," * {% extends \"./foo.html\" %}"," * {% block content %}"," *   My content."," *   {% parent %}"," * {% endblock %}"," *"," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  if (!parents || !parents.length) {","    return '';","  }","","  var parentFile = args[0],","    breaker = true,","    l = parents.length,","    i = 0,","    parent,","    block;","","  for (i; i < l; i += 1) {","    parent = parents[i];","    if (!parent.blocks || !parent.blocks.hasOwnProperty(blockName)) {","      continue;","    }","    // Silly JSLint \"Strange Loop\" requires return to be in a conditional","    if (breaker && parentFile !== parent.name) {","      block = parent.blocks[blockName];","      return block.compile(compiler, [blockName], block.content, parents.slice(i + 1), options) + '\\n';","    }","  }","};","","exports.parse = function (str, line, parser, types, stack, opts) {","  parser.on('*', function (token) {","    throw new Error('Unexpected argument \"' + token.match + '\" on line ' + line + '.');","  });","","  parser.on('end', function () {","    this.out.push(opts.filename);","  });","","  return true;","};",""],"l":{"16":1,"17":0,"18":0,"21":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"36":0,"41":1,"42":0,"43":0,"46":0,"47":0,"50":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/raw.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/raw.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":82}}},"2":{"name":"(anonymous_2)","line":17,"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":45}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":34}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":16,"column":2}},"2":{"start":{"line":15,"column":2},"end":{"line":15,"column":56}},"3":{"start":{"line":17,"column":0},"end":{"line":22,"column":2}},"4":{"start":{"line":18,"column":2},"end":{"line":20,"column":5}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":95}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":14}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":20}}},"branchMap":{},"code":["// Magic tag, hardcoded into parser","","/**"," * Forces the content to not be auto-escaped. All swig instructions will be ignored and the content will be rendered exactly as it was given."," *"," * @alias raw"," *"," * @example"," * // foobar = '<p>'"," * {% raw %}{{ foobar }}{% endraw %}"," * // => {{ foobar }}"," *"," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  return compiler(content, parents, options, blockName);","};","exports.parse = function (str, line, parser) {","  parser.on('*', function (token) {","    throw new Error('Unexpected token \"' + token.match + '\" in raw tag on line ' + line + '.');","  });","  return true;","};","exports.ends = true;",""],"l":{"14":1,"15":0,"17":1,"18":0,"19":0,"21":0,"23":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/set.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/set.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":34,"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":44}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":16},"end":{"line":38,"column":52}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":23},"end":{"line":42,"column":40}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":48}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":26},"end":{"line":66,"column":43}}},"6":{"name":"(anonymous_6)","line":75,"loc":{"start":{"line":75,"column":32},"end":{"line":75,"column":49}}},"7":{"name":"(anonymous_7)","line":85,"loc":{"start":{"line":85,"column":26},"end":{"line":85,"column":43}}},"8":{"name":"(anonymous_8)","line":93,"loc":{"start":{"line":93,"column":30},"end":{"line":93,"column":47}}}},"statementMap":{"1":{"start":{"line":34,"column":0},"end":{"line":36,"column":2}},"2":{"start":{"line":35,"column":2},"end":{"line":35,"column":32}},"3":{"start":{"line":38,"column":0},"end":{"line":107,"column":2}},"4":{"start":{"line":39,"column":2},"end":{"line":40,"column":17}},"5":{"start":{"line":42,"column":2},"end":{"line":55,"column":5}},"6":{"start":{"line":43,"column":4},"end":{"line":47,"column":5}},"7":{"start":{"line":45,"column":6},"end":{"line":45,"column":44}},"8":{"start":{"line":46,"column":6},"end":{"line":46,"column":13}},"9":{"start":{"line":49,"column":4},"end":{"line":52,"column":5}},"10":{"start":{"line":50,"column":6},"end":{"line":50,"column":29}},"11":{"start":{"line":51,"column":6},"end":{"line":51,"column":13}},"12":{"start":{"line":54,"column":4},"end":{"line":54,"column":16}},"13":{"start":{"line":57,"column":2},"end":{"line":64,"column":5}},"14":{"start":{"line":58,"column":4},"end":{"line":61,"column":5}},"15":{"start":{"line":59,"column":6},"end":{"line":59,"column":33}},"16":{"start":{"line":60,"column":6},"end":{"line":60,"column":13}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"18":{"start":{"line":66,"column":2},"end":{"line":73,"column":5}},"19":{"start":{"line":67,"column":4},"end":{"line":70,"column":5}},"20":{"start":{"line":68,"column":6},"end":{"line":68,"column":34}},"21":{"start":{"line":69,"column":6},"end":{"line":69,"column":13}},"22":{"start":{"line":72,"column":4},"end":{"line":72,"column":16}},"23":{"start":{"line":75,"column":2},"end":{"line":83,"column":5}},"24":{"start":{"line":76,"column":4},"end":{"line":80,"column":5}},"25":{"start":{"line":77,"column":6},"end":{"line":77,"column":44}},"26":{"start":{"line":78,"column":6},"end":{"line":78,"column":31}},"27":{"start":{"line":79,"column":6},"end":{"line":79,"column":13}},"28":{"start":{"line":82,"column":4},"end":{"line":82,"column":16}},"29":{"start":{"line":85,"column":2},"end":{"line":91,"column":5}},"30":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"31":{"start":{"line":87,"column":6},"end":{"line":87,"column":18}},"32":{"start":{"line":89,"column":4},"end":{"line":89,"column":33}},"33":{"start":{"line":90,"column":4},"end":{"line":90,"column":11}},"34":{"start":{"line":93,"column":2},"end":{"line":104,"column":5}},"35":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"36":{"start":{"line":95,"column":6},"end":{"line":95,"column":91}},"37":{"start":{"line":98,"column":4},"end":{"line":101,"column":6}},"38":{"start":{"line":102,"column":4},"end":{"line":102,"column":31}},"39":{"start":{"line":103,"column":4},"end":{"line":103,"column":46}},"40":{"start":{"line":106,"column":2},"end":{"line":106,"column":14}},"41":{"start":{"line":109,"column":0},"end":{"line":109,"column":21}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":21}},{"start":{"line":58,"column":25},"end":{"line":58,"column":41}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"6":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},{"start":{"line":67,"column":24},"end":{"line":67,"column":40}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"8":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},{"start":{"line":76,"column":24},"end":{"line":76,"column":40}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"10":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":21}},{"start":{"line":86,"column":25},"end":{"line":86,"column":33}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"12":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":23}},{"start":{"line":94,"column":27},"end":{"line":94,"column":35}}]}},"code":["/**"," * Set a variable for re-use in the current context. This will over-write any value already set to the context for the given <var>varname</var>."," *"," * @alias set"," *"," * @example"," * {% set foo = \"anything!\" %}"," * {{ foo }}"," * // => anything!"," *"," * @example"," * // index = 2;"," * {% set bar = 1 %}"," * {% set bar += index|default(3) %}"," * // => 3"," *"," * @example"," * // foods = {};"," * // food = 'chili';"," * {% set foods[food] = \"con queso\" %}"," * {{ foods.chili }}"," * // => con queso"," *"," * @example"," * // foods = { chili: 'chili con queso' }"," * {% set foods.chili = \"guatamalan insanity pepper\" %}"," * {{ foods.chili }}"," * // => guatamalan insanity pepper"," *"," * @param {literal} varname   The variable name to assign the value to."," * @param {literal} assignement   Any valid JavaScript assignement. <code data-language=\"js\">=, +=, *=, /=, -=</code>"," * @param {*}   value     Valid variable output."," */","exports.compile = function (compiler, args) {","  return args.join(' ') + ';\\n';","};","","exports.parse = function (str, line, parser, types) {","  var nameSet = '',","    propertyName;","","  parser.on(types.VAR, function (token) {","    if (propertyName) {","      // Tell the parser where to find the variable","      propertyName += '_ctx.' + token.match;","      return;","    }","","    if (!parser.out.length) {","      nameSet += token.match;","      return;","    }","","    return true;","  });","","  parser.on(types.BRACKETOPEN, function (token) {","    if (!propertyName && !this.out.length) {","      propertyName = token.match;","      return;","    }","","    return true;","  });","","  parser.on(types.STRING, function (token) {","    if (propertyName && !this.out.length) {","      propertyName += token.match;","      return;","    }","","    return true;","  });","","  parser.on(types.BRACKETCLOSE, function (token) {","    if (propertyName && !this.out.length) {","      nameSet += propertyName + token.match;","      propertyName = undefined;","      return;","    }","","    return true;","  });","","  parser.on(types.DOTKEY, function (token) {","    if (!propertyName && !nameSet) {","      return true;","    }","    nameSet += '.' + token.match;","    return;","  });","","  parser.on(types.ASSIGNMENT, function (token) {","    if (this.out.length || !nameSet) {","      throw new Error('Unexpected assignment \"' + token.match + '\" on line ' + line + '.');","    }","","    this.out.push(","      // Prevent the set from spilling into global scope","      '_ctx.' + nameSet","    );","    this.out.push(token.match);","    this.filterApplyIdx.push(this.out.length);","  });","","  return true;","};","","exports.block = true;",""],"l":{"34":1,"35":0,"38":1,"39":0,"42":0,"43":0,"45":0,"46":0,"49":0,"50":0,"51":0,"54":0,"57":0,"58":0,"59":0,"60":0,"63":0,"66":0,"67":0,"68":0,"69":0,"72":0,"75":0,"76":0,"77":0,"78":0,"79":0,"82":0,"85":0,"86":0,"87":0,"89":0,"90":0,"93":0,"94":0,"95":0,"98":0,"102":0,"103":0,"106":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/spaceless.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/tags/spaceless.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":18},"end":{"line":15,"column":82}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":16},"end":{"line":24,"column":45}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":34}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":22,"column":2}},"2":{"start":{"line":16,"column":2},"end":{"line":16,"column":59}},"3":{"start":{"line":17,"column":2},"end":{"line":19,"column":38}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":13}},"5":{"start":{"line":24,"column":0},"end":{"line":30,"column":2}},"6":{"start":{"line":25,"column":2},"end":{"line":27,"column":5}},"7":{"start":{"line":26,"column":4},"end":{"line":26,"column":84}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":14}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":20}}},"branchMap":{},"code":["/**"," * Attempts to remove whitespace between HTML tags. Use at your own risk."," *"," * @alias spaceless"," *"," * @example"," * {% spaceless %}"," *   {% for num in foo %}"," *   <li>{{ loop.index }}</li>"," *   {% endfor %}"," * {% endspaceless %}"," * // => <li>1</li><li>2</li><li>3</li>"," *"," */","exports.compile = function (compiler, args, content, parents, options, blockName) {","  var out = compiler(content, parents, options, blockName);","  out += '_output = _output.replace(/^\\\\s+/, \"\")\\n' +","         '  .replace(/>\\\\s+</g, \"><\")\\n' +","         '  .replace(/\\\\s+$/, \"\");\\n';","","  return out;","};","","exports.parse = function (str, line, parser) {","  parser.on('*', function (token) {","    throw new Error('Unexpected token \"' + token.match + '\" on line ' + line + '.');","  });","","  return true;","};","","exports.ends = true;",""],"l":{"15":1,"16":0,"17":0,"21":0,"24":1,"25":0,"26":0,"29":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/parser.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":1,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":1,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0,0,0,0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0,0,0],"36":[0,0],"37":[0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0,0,0,0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"escapeRegExp","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":27}}},"2":{"name":"TokenParser","line":60,"loc":{"start":{"line":60,"column":0},"end":{"line":60,"column":66}}},"3":{"name":"(anonymous_3)","line":70,"loc":{"start":{"line":70,"column":15},"end":{"line":70,"column":27}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":23},"end":{"line":76,"column":43}}},"5":{"name":"(anonymous_5)","line":128,"loc":{"start":{"line":128,"column":6},"end":{"line":128,"column":26}}},"6":{"name":"(anonymous_6)","line":138,"loc":{"start":{"line":138,"column":14},"end":{"line":138,"column":31}}},"7":{"name":"(anonymous_7)","line":368,"loc":{"start":{"line":368,"column":12},"end":{"line":368,"column":47}}},"8":{"name":"(anonymous_8)","line":394,"loc":{"start":{"line":394,"column":14},"end":{"line":394,"column":31}}},"9":{"name":"checkDot","line":397,"loc":{"start":{"line":397,"column":4},"end":{"line":397,"column":27}}},"10":{"name":"(anonymous_10)","line":403,"loc":{"start":{"line":403,"column":20},"end":{"line":403,"column":36}}},"11":{"name":"buildDot","line":415,"loc":{"start":{"line":415,"column":4},"end":{"line":415,"column":27}}},"12":{"name":"(anonymous_12)","line":437,"loc":{"start":{"line":437,"column":16},"end":{"line":437,"column":61}}},"13":{"name":"parseVariable","line":481,"loc":{"start":{"line":481,"column":2},"end":{"line":481,"column":36}}},"14":{"name":"(anonymous_14)","line":499,"loc":{"start":{"line":499,"column":15},"end":{"line":499,"column":27}}},"15":{"name":"parseTag","line":513,"loc":{"start":{"line":513,"column":2},"end":{"line":513,"column":31}}},"16":{"name":"stripPrevToken","line":613,"loc":{"start":{"line":613,"column":2},"end":{"line":613,"column":33}}},"17":{"name":"(anonymous_17)","line":624,"loc":{"start":{"line":624,"column":37},"end":{"line":624,"column":54}}},"18":{"name":"(anonymous_18)","line":709,"loc":{"start":{"line":709,"column":18},"end":{"line":709,"column":67}}},"19":{"name":"(anonymous_19)","line":713,"loc":{"start":{"line":713,"column":21},"end":{"line":713,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":5,"column":249}},"3":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"4":{"start":{"line":47,"column":2},"end":{"line":47,"column":58}},"5":{"start":{"line":60,"column":0},"end":{"line":106,"column":1}},"6":{"start":{"line":61,"column":2},"end":{"line":61,"column":16}},"7":{"start":{"line":62,"column":2},"end":{"line":62,"column":18}},"8":{"start":{"line":63,"column":2},"end":{"line":63,"column":27}},"9":{"start":{"line":64,"column":2},"end":{"line":64,"column":21}},"10":{"start":{"line":65,"column":2},"end":{"line":65,"column":19}},"11":{"start":{"line":66,"column":2},"end":{"line":66,"column":27}},"12":{"start":{"line":67,"column":2},"end":{"line":67,"column":25}},"13":{"start":{"line":68,"column":2},"end":{"line":68,"column":27}},"14":{"start":{"line":70,"column":2},"end":{"line":105,"column":4}},"15":{"start":{"line":71,"column":4},"end":{"line":71,"column":20}},"16":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"17":{"start":{"line":74,"column":6},"end":{"line":74,"column":37}},"18":{"start":{"line":76,"column":4},"end":{"line":87,"column":7}},"19":{"start":{"line":77,"column":6},"end":{"line":77,"column":36}},"20":{"start":{"line":78,"column":6},"end":{"line":78,"column":46}},"21":{"start":{"line":79,"column":6},"end":{"line":84,"column":7}},"22":{"start":{"line":80,"column":8},"end":{"line":83,"column":9}},"23":{"start":{"line":81,"column":10},"end":{"line":81,"column":17}},"24":{"start":{"line":82,"column":10},"end":{"line":82,"column":36}},"25":{"start":{"line":85,"column":6},"end":{"line":85,"column":33}},"26":{"start":{"line":86,"column":6},"end":{"line":86,"column":29}},"27":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"28":{"start":{"line":89,"column":6},"end":{"line":89,"column":35}},"29":{"start":{"line":92,"column":4},"end":{"line":102,"column":5}},"30":{"start":{"line":93,"column":6},"end":{"line":93,"column":32}},"31":{"start":{"line":94,"column":6},"end":{"line":101,"column":7}},"32":{"start":{"line":95,"column":8},"end":{"line":95,"column":57}},"33":{"start":{"line":96,"column":8},"end":{"line":96,"column":56}},"34":{"start":{"line":97,"column":8},"end":{"line":97,"column":72}},"35":{"start":{"line":98,"column":8},"end":{"line":98,"column":60}},"36":{"start":{"line":100,"column":8},"end":{"line":100,"column":62}},"37":{"start":{"line":104,"column":4},"end":{"line":104,"column":20}},"38":{"start":{"line":108,"column":0},"end":{"line":421,"column":2}},"39":{"start":{"line":129,"column":4},"end":{"line":129,"column":29}},"40":{"start":{"line":139,"column":4},"end":{"line":145,"column":11}},"41":{"start":{"line":147,"column":4},"end":{"line":151,"column":5}},"42":{"start":{"line":148,"column":6},"end":{"line":150,"column":7}},"43":{"start":{"line":149,"column":8},"end":{"line":149,"column":15}},"44":{"start":{"line":153,"column":4},"end":{"line":162,"column":5}},"45":{"start":{"line":161,"column":6},"end":{"line":161,"column":26}},"46":{"start":{"line":164,"column":4},"end":{"line":169,"column":5}},"47":{"start":{"line":165,"column":6},"end":{"line":165,"column":23}},"48":{"start":{"line":166,"column":6},"end":{"line":168,"column":7}},"49":{"start":{"line":167,"column":8},"end":{"line":167,"column":28}},"50":{"start":{"line":171,"column":4},"end":{"line":357,"column":5}},"51":{"start":{"line":173,"column":6},"end":{"line":173,"column":12}},"52":{"start":{"line":176,"column":6},"end":{"line":176,"column":48}},"53":{"start":{"line":177,"column":6},"end":{"line":177,"column":50}},"54":{"start":{"line":178,"column":6},"end":{"line":178,"column":12}},"55":{"start":{"line":182,"column":6},"end":{"line":182,"column":48}},"56":{"start":{"line":183,"column":6},"end":{"line":183,"column":27}},"57":{"start":{"line":184,"column":6},"end":{"line":184,"column":12}},"58":{"start":{"line":187,"column":6},"end":{"line":189,"column":7}},"59":{"start":{"line":188,"column":8},"end":{"line":188,"column":85}},"60":{"start":{"line":190,"column":6},"end":{"line":190,"column":67}},"61":{"start":{"line":191,"column":6},"end":{"line":191,"column":108}},"62":{"start":{"line":192,"column":6},"end":{"line":192,"column":34}},"63":{"start":{"line":193,"column":6},"end":{"line":193,"column":12}},"64":{"start":{"line":196,"column":6},"end":{"line":198,"column":7}},"65":{"start":{"line":197,"column":8},"end":{"line":197,"column":85}},"66":{"start":{"line":199,"column":6},"end":{"line":199,"column":67}},"67":{"start":{"line":200,"column":6},"end":{"line":200,"column":108}},"68":{"start":{"line":201,"column":6},"end":{"line":201,"column":25}},"69":{"start":{"line":202,"column":6},"end":{"line":202,"column":12}},"70":{"start":{"line":206,"column":6},"end":{"line":208,"column":21}},"71":{"start":{"line":209,"column":6},"end":{"line":209,"column":26}},"72":{"start":{"line":210,"column":6},"end":{"line":214,"column":7}},"73":{"start":{"line":211,"column":8},"end":{"line":211,"column":76}},"74":{"start":{"line":213,"column":8},"end":{"line":213,"column":36}},"75":{"start":{"line":215,"column":6},"end":{"line":215,"column":52}},"76":{"start":{"line":216,"column":6},"end":{"line":216,"column":12}},"77":{"start":{"line":219,"column":6},"end":{"line":219,"column":34}},"78":{"start":{"line":220,"column":6},"end":{"line":234,"column":7}},"79":{"start":{"line":221,"column":8},"end":{"line":221,"column":85}},"80":{"start":{"line":222,"column":8},"end":{"line":229,"column":9}},"81":{"start":{"line":223,"column":10},"end":{"line":223,"column":57}},"82":{"start":{"line":224,"column":10},"end":{"line":224,"column":66}},"83":{"start":{"line":225,"column":10},"end":{"line":225,"column":41}},"84":{"start":{"line":226,"column":10},"end":{"line":226,"column":30}},"85":{"start":{"line":228,"column":10},"end":{"line":228,"column":37}},"86":{"start":{"line":230,"column":8},"end":{"line":230,"column":54}},"87":{"start":{"line":232,"column":8},"end":{"line":232,"column":27}},"88":{"start":{"line":233,"column":8},"end":{"line":233,"column":54}},"89":{"start":{"line":235,"column":6},"end":{"line":235,"column":12}},"90":{"start":{"line":238,"column":6},"end":{"line":238,"column":30}},"91":{"start":{"line":239,"column":6},"end":{"line":241,"column":7}},"92":{"start":{"line":240,"column":8},"end":{"line":240,"column":79}},"93":{"start":{"line":242,"column":6},"end":{"line":242,"column":25}},"94":{"start":{"line":244,"column":6},"end":{"line":244,"column":32}},"95":{"start":{"line":245,"column":6},"end":{"line":248,"column":7}},"96":{"start":{"line":247,"column":8},"end":{"line":247,"column":34}},"97":{"start":{"line":249,"column":6},"end":{"line":249,"column":12}},"98":{"start":{"line":252,"column":6},"end":{"line":259,"column":7}},"99":{"start":{"line":258,"column":8},"end":{"line":258,"column":71}},"100":{"start":{"line":260,"column":6},"end":{"line":262,"column":7}},"101":{"start":{"line":261,"column":8},"end":{"line":261,"column":25}},"102":{"start":{"line":263,"column":6},"end":{"line":263,"column":26}},"103":{"start":{"line":264,"column":6},"end":{"line":264,"column":32}},"104":{"start":{"line":265,"column":6},"end":{"line":265,"column":12}},"105":{"start":{"line":269,"column":6},"end":{"line":277,"column":7}},"106":{"start":{"line":276,"column":8},"end":{"line":276,"column":71}},"107":{"start":{"line":278,"column":6},"end":{"line":278,"column":33}},"108":{"start":{"line":279,"column":6},"end":{"line":279,"column":12}},"109":{"start":{"line":282,"column":6},"end":{"line":282,"column":33}},"110":{"start":{"line":283,"column":6},"end":{"line":283,"column":12}},"111":{"start":{"line":286,"column":6},"end":{"line":286,"column":45}},"112":{"start":{"line":287,"column":6},"end":{"line":287,"column":12}},"113":{"start":{"line":290,"column":6},"end":{"line":298,"column":7}},"114":{"start":{"line":294,"column":8},"end":{"line":294,"column":38}},"115":{"start":{"line":295,"column":8},"end":{"line":295,"column":50}},"116":{"start":{"line":297,"column":8},"end":{"line":297,"column":36}},"117":{"start":{"line":299,"column":6},"end":{"line":299,"column":25}},"118":{"start":{"line":300,"column":6},"end":{"line":300,"column":12}},"119":{"start":{"line":303,"column":6},"end":{"line":303,"column":30}},"120":{"start":{"line":304,"column":6},"end":{"line":306,"column":7}},"121":{"start":{"line":305,"column":8},"end":{"line":305,"column":88}},"122":{"start":{"line":307,"column":6},"end":{"line":307,"column":25}},"123":{"start":{"line":308,"column":6},"end":{"line":308,"column":32}},"124":{"start":{"line":309,"column":6},"end":{"line":309,"column":12}},"125":{"start":{"line":312,"column":6},"end":{"line":312,"column":34}},"126":{"start":{"line":313,"column":6},"end":{"line":313,"column":25}},"127":{"start":{"line":314,"column":6},"end":{"line":314,"column":52}},"128":{"start":{"line":315,"column":6},"end":{"line":315,"column":12}},"129":{"start":{"line":318,"column":6},"end":{"line":320,"column":7}},"130":{"start":{"line":319,"column":8},"end":{"line":319,"column":71}},"131":{"start":{"line":321,"column":6},"end":{"line":321,"column":34}},"132":{"start":{"line":322,"column":6},"end":{"line":322,"column":25}},"133":{"start":{"line":323,"column":6},"end":{"line":323,"column":32}},"134":{"start":{"line":324,"column":6},"end":{"line":324,"column":12}},"135":{"start":{"line":327,"column":6},"end":{"line":329,"column":7}},"136":{"start":{"line":328,"column":8},"end":{"line":328,"column":25}},"137":{"start":{"line":330,"column":6},"end":{"line":332,"column":7}},"138":{"start":{"line":331,"column":8},"end":{"line":331,"column":85}},"139":{"start":{"line":333,"column":6},"end":{"line":333,"column":25}},"140":{"start":{"line":335,"column":6},"end":{"line":335,"column":32}},"141":{"start":{"line":336,"column":6},"end":{"line":336,"column":12}},"142":{"start":{"line":339,"column":6},"end":{"line":349,"column":7}},"143":{"start":{"line":348,"column":8},"end":{"line":348,"column":85}},"144":{"start":{"line":350,"column":6},"end":{"line":350,"column":33}},"145":{"start":{"line":351,"column":6},"end":{"line":351,"column":12}},"146":{"start":{"line":354,"column":6},"end":{"line":354,"column":39}},"147":{"start":{"line":355,"column":6},"end":{"line":355,"column":32}},"148":{"start":{"line":356,"column":6},"end":{"line":356,"column":12}},"149":{"start":{"line":369,"column":4},"end":{"line":369,"column":20}},"150":{"start":{"line":371,"column":4},"end":{"line":371,"column":29}},"151":{"start":{"line":373,"column":4},"end":{"line":375,"column":5}},"152":{"start":{"line":374,"column":6},"end":{"line":374,"column":123}},"153":{"start":{"line":377,"column":4},"end":{"line":377,"column":46}},"154":{"start":{"line":378,"column":4},"end":{"line":384,"column":5}},"155":{"start":{"line":379,"column":6},"end":{"line":381,"column":7}},"156":{"start":{"line":380,"column":8},"end":{"line":380,"column":69}},"157":{"start":{"line":382,"column":6},"end":{"line":382,"column":30}},"158":{"start":{"line":383,"column":6},"end":{"line":383,"column":13}},"159":{"start":{"line":386,"column":4},"end":{"line":386,"column":42}},"160":{"start":{"line":395,"column":4},"end":{"line":395,"column":32}},"161":{"start":{"line":397,"column":4},"end":{"line":413,"column":5}},"162":{"start":{"line":398,"column":6},"end":{"line":400,"column":19}},"163":{"start":{"line":402,"column":6},"end":{"line":402,"column":72}},"164":{"start":{"line":403,"column":6},"end":{"line":409,"column":9}},"165":{"start":{"line":404,"column":8},"end":{"line":406,"column":9}},"166":{"start":{"line":405,"column":10},"end":{"line":405,"column":17}},"167":{"start":{"line":407,"column":8},"end":{"line":407,"column":89}},"168":{"start":{"line":408,"column":8},"end":{"line":408,"column":21}},"169":{"start":{"line":410,"column":6},"end":{"line":410,"column":19}},"170":{"start":{"line":412,"column":6},"end":{"line":412,"column":19}},"171":{"start":{"line":415,"column":4},"end":{"line":417,"column":5}},"172":{"start":{"line":416,"column":6},"end":{"line":416,"column":76}},"173":{"start":{"line":418,"column":4},"end":{"line":418,"column":94}},"174":{"start":{"line":419,"column":4},"end":{"line":419,"column":67}},"175":{"start":{"line":437,"column":0},"end":{"line":698,"column":2}},"176":{"start":{"line":438,"column":2},"end":{"line":438,"column":41}},"177":{"start":{"line":439,"column":2},"end":{"line":472,"column":14}},"178":{"start":{"line":481,"column":2},"end":{"line":503,"column":3}},"179":{"start":{"line":482,"column":4},"end":{"line":484,"column":10}},"180":{"start":{"line":486,"column":4},"end":{"line":486,"column":80}},"181":{"start":{"line":487,"column":4},"end":{"line":487,"column":34}},"182":{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},"183":{"start":{"line":490,"column":6},"end":{"line":490,"column":77}},"184":{"start":{"line":498,"column":4},"end":{"line":502,"column":6}},"185":{"start":{"line":500,"column":8},"end":{"line":500,"column":43}},"186":{"start":{"line":504,"column":2},"end":{"line":504,"column":40}},"187":{"start":{"line":513,"column":2},"end":{"line":606,"column":3}},"188":{"start":{"line":514,"column":4},"end":{"line":514,"column":62}},"189":{"start":{"line":516,"column":4},"end":{"line":534,"column":5}},"190":{"start":{"line":517,"column":6},"end":{"line":517,"column":37}},"191":{"start":{"line":518,"column":6},"end":{"line":529,"column":7}},"192":{"start":{"line":519,"column":8},"end":{"line":526,"column":9}},"193":{"start":{"line":521,"column":10},"end":{"line":521,"column":35}},"194":{"start":{"line":522,"column":10},"end":{"line":522,"column":16}},"195":{"start":{"line":524,"column":10},"end":{"line":524,"column":24}},"196":{"start":{"line":525,"column":10},"end":{"line":525,"column":16}},"197":{"start":{"line":527,"column":8},"end":{"line":527,"column":20}},"198":{"start":{"line":528,"column":8},"end":{"line":528,"column":15}},"199":{"start":{"line":531,"column":6},"end":{"line":533,"column":7}},"200":{"start":{"line":532,"column":8},"end":{"line":532,"column":105}},"201":{"start":{"line":536,"column":4},"end":{"line":538,"column":5}},"202":{"start":{"line":537,"column":6},"end":{"line":537,"column":13}},"203":{"start":{"line":540,"column":4},"end":{"line":540,"column":35}},"204":{"start":{"line":541,"column":4},"end":{"line":541,"column":29}},"205":{"start":{"line":543,"column":4},"end":{"line":545,"column":5}},"206":{"start":{"line":544,"column":6},"end":{"line":544,"column":76}},"207":{"start":{"line":547,"column":4},"end":{"line":547,"column":60}},"208":{"start":{"line":548,"column":4},"end":{"line":548,"column":79}},"209":{"start":{"line":549,"column":4},"end":{"line":549,"column":24}},"210":{"start":{"line":573,"column":4},"end":{"line":575,"column":5}},"211":{"start":{"line":574,"column":6},"end":{"line":574,"column":80}},"212":{"start":{"line":577,"column":4},"end":{"line":577,"column":19}},"213":{"start":{"line":578,"column":4},"end":{"line":578,"column":22}},"214":{"start":{"line":580,"column":4},"end":{"line":587,"column":5}},"215":{"start":{"line":582,"column":6},"end":{"line":582,"column":55}},"216":{"start":{"line":583,"column":6},"end":{"line":583,"column":12}},"217":{"start":{"line":585,"column":6},"end":{"line":585,"column":19}},"218":{"start":{"line":586,"column":6},"end":{"line":586,"column":12}},"219":{"start":{"line":598,"column":4},"end":{"line":605,"column":6}},"220":{"start":{"line":613,"column":2},"end":{"line":618,"column":3}},"221":{"start":{"line":614,"column":4},"end":{"line":616,"column":5}},"222":{"start":{"line":615,"column":6},"end":{"line":615,"column":40}},"223":{"start":{"line":617,"column":4},"end":{"line":617,"column":17}},"224":{"start":{"line":624,"column":2},"end":{"line":690,"column":5}},"225":{"start":{"line":625,"column":4},"end":{"line":625,"column":59}},"226":{"start":{"line":627,"column":4},"end":{"line":629,"column":5}},"227":{"start":{"line":628,"column":6},"end":{"line":628,"column":13}},"228":{"start":{"line":632,"column":4},"end":{"line":657,"column":5}},"229":{"start":{"line":633,"column":6},"end":{"line":633,"column":45}},"230":{"start":{"line":634,"column":6},"end":{"line":634,"column":44}},"231":{"start":{"line":635,"column":6},"end":{"line":635,"column":63}},"232":{"start":{"line":637,"column":11},"end":{"line":657,"column":5}},"233":{"start":{"line":638,"column":6},"end":{"line":638,"column":45}},"234":{"start":{"line":639,"column":6},"end":{"line":639,"column":44}},"235":{"start":{"line":640,"column":6},"end":{"line":640,"column":58}},"236":{"start":{"line":641,"column":6},"end":{"line":647,"column":7}},"237":{"start":{"line":642,"column":8},"end":{"line":646,"column":9}},"238":{"start":{"line":643,"column":10},"end":{"line":643,"column":87}},"239":{"start":{"line":644,"column":15},"end":{"line":646,"column":9}},"240":{"start":{"line":645,"column":10},"end":{"line":645,"column":46}},"241":{"start":{"line":648,"column":6},"end":{"line":650,"column":7}},"242":{"start":{"line":649,"column":8},"end":{"line":649,"column":22}},"243":{"start":{"line":652,"column":11},"end":{"line":657,"column":5}},"244":{"start":{"line":653,"column":6},"end":{"line":653,"column":60}},"245":{"start":{"line":654,"column":6},"end":{"line":654,"column":24}},"246":{"start":{"line":655,"column":11},"end":{"line":657,"column":5}},"247":{"start":{"line":656,"column":6},"end":{"line":656,"column":13}},"248":{"start":{"line":660,"column":4},"end":{"line":669,"column":5}},"249":{"start":{"line":661,"column":6},"end":{"line":661,"column":31}},"250":{"start":{"line":662,"column":6},"end":{"line":667,"column":7}},"251":{"start":{"line":663,"column":8},"end":{"line":663,"column":46}},"252":{"start":{"line":664,"column":13},"end":{"line":667,"column":7}},"253":{"start":{"line":665,"column":8},"end":{"line":665,"column":65}},"254":{"start":{"line":666,"column":8},"end":{"line":666,"column":47}},"255":{"start":{"line":668,"column":6},"end":{"line":668,"column":29}},"256":{"start":{"line":672,"column":4},"end":{"line":674,"column":5}},"257":{"start":{"line":673,"column":6},"end":{"line":673,"column":13}},"258":{"start":{"line":677,"column":4},"end":{"line":681,"column":5}},"259":{"start":{"line":678,"column":6},"end":{"line":678,"column":50}},"260":{"start":{"line":680,"column":6},"end":{"line":680,"column":25}},"261":{"start":{"line":684,"column":4},"end":{"line":686,"column":5}},"262":{"start":{"line":685,"column":6},"end":{"line":685,"column":24}},"263":{"start":{"line":688,"column":4},"end":{"line":688,"column":31}},"264":{"start":{"line":689,"column":4},"end":{"line":689,"column":37}},"265":{"start":{"line":692,"column":2},"end":{"line":697,"column":4}},"266":{"start":{"line":709,"column":0},"end":{"line":744,"column":2}},"267":{"start":{"line":710,"column":2},"end":{"line":711,"column":66}},"268":{"start":{"line":713,"column":2},"end":{"line":741,"column":5}},"269":{"start":{"line":714,"column":4},"end":{"line":714,"column":10}},"270":{"start":{"line":715,"column":4},"end":{"line":718,"column":5}},"271":{"start":{"line":716,"column":6},"end":{"line":716,"column":114}},"272":{"start":{"line":717,"column":6},"end":{"line":717,"column":13}},"273":{"start":{"line":739,"column":4},"end":{"line":739,"column":152}},"274":{"start":{"line":740,"column":4},"end":{"line":740,"column":19}},"275":{"start":{"line":743,"column":2},"end":{"line":743,"column":13}}},"branchMap":{"1":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":6}},{"start":{"line":79,"column":6},"end":{"line":79,"column":6}}]},"3":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":4},"end":{"line":88,"column":4}},{"start":{"line":88,"column":4},"end":{"line":88,"column":4}}]},"4":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"5":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":94,"column":6}},{"start":{"line":94,"column":6},"end":{"line":94,"column":6}}]},"6":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":11},"end":{"line":140,"column":36}},{"start":{"line":140,"column":40},"end":{"line":140,"column":58}}]},"7":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":34},"end":{"line":143,"column":48}},{"start":{"line":143,"column":51},"end":{"line":143,"column":55}}]},"8":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":40},"end":{"line":144,"column":73}},{"start":{"line":144,"column":76},"end":{"line":144,"column":80}}]},"9":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"10":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":10}},{"start":{"line":147,"column":14},"end":{"line":147,"column":38}}]},"11":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":6}},{"start":{"line":148,"column":6},"end":{"line":148,"column":6}}]},"12":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"13":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":17}},{"start":{"line":153,"column":21},"end":{"line":153,"column":30}},{"start":{"line":154,"column":8},"end":{"line":154,"column":31}},{"start":{"line":155,"column":8},"end":{"line":155,"column":35}},{"start":{"line":156,"column":8},"end":{"line":156,"column":36}},{"start":{"line":157,"column":8},"end":{"line":157,"column":31}},{"start":{"line":158,"column":8},"end":{"line":158,"column":34}},{"start":{"line":159,"column":8},"end":{"line":159,"column":32}},{"start":{"line":160,"column":8},"end":{"line":160,"column":37}}]},"14":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"15":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":17}},{"start":{"line":164,"column":21},"end":{"line":164,"column":48}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":6}},{"start":{"line":166,"column":6},"end":{"line":166,"column":6}}]},"17":{"line":171,"type":"switch","locations":[{"start":{"line":172,"column":4},"end":{"line":173,"column":12}},{"start":{"line":175,"column":4},"end":{"line":178,"column":12}},{"start":{"line":180,"column":4},"end":{"line":180,"column":19}},{"start":{"line":181,"column":4},"end":{"line":184,"column":12}},{"start":{"line":186,"column":4},"end":{"line":193,"column":12}},{"start":{"line":195,"column":4},"end":{"line":202,"column":12}},{"start":{"line":204,"column":4},"end":{"line":204,"column":21}},{"start":{"line":205,"column":4},"end":{"line":216,"column":12}},{"start":{"line":218,"column":4},"end":{"line":235,"column":12}},{"start":{"line":237,"column":4},"end":{"line":249,"column":12}},{"start":{"line":251,"column":4},"end":{"line":265,"column":12}},{"start":{"line":267,"column":4},"end":{"line":267,"column":18}},{"start":{"line":268,"column":4},"end":{"line":279,"column":12}},{"start":{"line":281,"column":4},"end":{"line":283,"column":12}},{"start":{"line":285,"column":4},"end":{"line":287,"column":12}},{"start":{"line":289,"column":4},"end":{"line":300,"column":12}},{"start":{"line":302,"column":4},"end":{"line":309,"column":12}},{"start":{"line":311,"column":4},"end":{"line":315,"column":12}},{"start":{"line":317,"column":4},"end":{"line":324,"column":12}},{"start":{"line":326,"column":4},"end":{"line":336,"column":12}},{"start":{"line":338,"column":4},"end":{"line":351,"column":12}},{"start":{"line":353,"column":4},"end":{"line":356,"column":12}}]},"18":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":6},"end":{"line":187,"column":6}},{"start":{"line":187,"column":6},"end":{"line":187,"column":6}}]},"19":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":45}},{"start":{"line":187,"column":49},"end":{"line":187,"column":90}}]},"20":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":47},"end":{"line":190,"column":52}},{"start":{"line":190,"column":55},"end":{"line":190,"column":66}}]},"21":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"22":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":10},"end":{"line":196,"column":45}},{"start":{"line":196,"column":49},"end":{"line":196,"column":90}}]},"23":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":47},"end":{"line":199,"column":52}},{"start":{"line":199,"column":55},"end":{"line":199,"column":66}}]},"24":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"25":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":6}},{"start":{"line":220,"column":6},"end":{"line":220,"column":6}}]},"26":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":8},"end":{"line":222,"column":8}},{"start":{"line":222,"column":8},"end":{"line":222,"column":8}}]},"27":{"line":222,"type":"binary-expr","locations":[{"start":{"line":222,"column":12},"end":{"line":222,"column":21}},{"start":{"line":222,"column":25},"end":{"line":222,"column":49}}]},"28":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":6}},{"start":{"line":239,"column":6},"end":{"line":239,"column":6}}]},"29":{"line":239,"type":"binary-expr","locations":[{"start":{"line":239,"column":10},"end":{"line":239,"column":31}},{"start":{"line":239,"column":35},"end":{"line":239,"column":55}},{"start":{"line":239,"column":59},"end":{"line":239,"column":77}}]},"30":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":6},"end":{"line":245,"column":6}},{"start":{"line":245,"column":6},"end":{"line":245,"column":6}}]},"31":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":6},"end":{"line":252,"column":6}},{"start":{"line":252,"column":6},"end":{"line":252,"column":6}}]},"32":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":10},"end":{"line":252,"column":35}},{"start":{"line":253,"column":10},"end":{"line":253,"column":33}},{"start":{"line":254,"column":10},"end":{"line":254,"column":36}},{"start":{"line":255,"column":10},"end":{"line":255,"column":36}},{"start":{"line":256,"column":10},"end":{"line":256,"column":36}},{"start":{"line":257,"column":10},"end":{"line":257,"column":32}}]},"33":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":6},"end":{"line":260,"column":6}},{"start":{"line":260,"column":6},"end":{"line":260,"column":6}}]},"34":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"35":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":10},"end":{"line":269,"column":20}},{"start":{"line":270,"column":10},"end":{"line":270,"column":36}},{"start":{"line":271,"column":10},"end":{"line":271,"column":38}},{"start":{"line":272,"column":10},"end":{"line":272,"column":42}},{"start":{"line":273,"column":10},"end":{"line":273,"column":40}},{"start":{"line":274,"column":10},"end":{"line":274,"column":40}},{"start":{"line":275,"column":10},"end":{"line":275,"column":39}}]},"36":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":6},"end":{"line":290,"column":6}},{"start":{"line":290,"column":6},"end":{"line":290,"column":6}}]},"37":{"line":290,"type":"binary-expr","locations":[{"start":{"line":290,"column":10},"end":{"line":290,"column":20}},{"start":{"line":291,"column":11},"end":{"line":291,"column":35}},{"start":{"line":292,"column":12},"end":{"line":292,"column":45}},{"start":{"line":293,"column":12},"end":{"line":293,"column":43}}]},"38":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":6},"end":{"line":304,"column":6}},{"start":{"line":304,"column":6},"end":{"line":304,"column":6}}]},"39":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":10},"end":{"line":304,"column":33}},{"start":{"line":304,"column":37},"end":{"line":304,"column":58}}]},"40":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"41":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":6},"end":{"line":327,"column":6}},{"start":{"line":327,"column":6},"end":{"line":327,"column":6}}]},"42":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":6},"end":{"line":330,"column":6}},{"start":{"line":330,"column":6},"end":{"line":330,"column":6}}]},"43":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":6},"end":{"line":339,"column":6}},{"start":{"line":339,"column":6},"end":{"line":339,"column":6}}]},"44":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":10},"end":{"line":339,"column":20}},{"start":{"line":340,"column":10},"end":{"line":340,"column":34}},{"start":{"line":341,"column":10},"end":{"line":341,"column":43}},{"start":{"line":342,"column":10},"end":{"line":342,"column":37}},{"start":{"line":343,"column":10},"end":{"line":343,"column":41}},{"start":{"line":344,"column":10},"end":{"line":344,"column":44}},{"start":{"line":345,"column":10},"end":{"line":345,"column":42}},{"start":{"line":346,"column":10},"end":{"line":346,"column":41}}]},"45":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":4},"end":{"line":373,"column":4}},{"start":{"line":373,"column":4},"end":{"line":373,"column":4}}]},"46":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":4},"end":{"line":378,"column":4}},{"start":{"line":378,"column":4},"end":{"line":378,"column":4}}]},"47":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":6},"end":{"line":379,"column":6}},{"start":{"line":379,"column":6},"end":{"line":379,"column":6}}]},"48":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":8},"end":{"line":404,"column":8}},{"start":{"line":404,"column":8},"end":{"line":404,"column":8}}]},"49":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":4},"end":{"line":489,"column":4}},{"start":{"line":489,"column":4},"end":{"line":489,"column":4}}]},"50":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":516,"column":4}},{"start":{"line":516,"column":4},"end":{"line":516,"column":4}}]},"51":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":6},"end":{"line":518,"column":6}},{"start":{"line":518,"column":6},"end":{"line":518,"column":6}}]},"52":{"line":518,"type":"binary-expr","locations":[{"start":{"line":518,"column":10},"end":{"line":518,"column":14}},{"start":{"line":518,"column":18},"end":{"line":518,"column":71}},{"start":{"line":518,"column":75},"end":{"line":518,"column":84}}]},"53":{"line":519,"type":"switch","locations":[{"start":{"line":520,"column":8},"end":{"line":522,"column":16}},{"start":{"line":523,"column":8},"end":{"line":525,"column":16}}]},"54":{"line":531,"type":"if","locations":[{"start":{"line":531,"column":6},"end":{"line":531,"column":6}},{"start":{"line":531,"column":6},"end":{"line":531,"column":6}}]},"55":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":4},"end":{"line":536,"column":4}},{"start":{"line":536,"column":4},"end":{"line":536,"column":4}}]},"56":{"line":543,"type":"if","locations":[{"start":{"line":543,"column":4},"end":{"line":543,"column":4}},{"start":{"line":543,"column":4},"end":{"line":543,"column":4}}]},"57":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":4},"end":{"line":573,"column":4}},{"start":{"line":573,"column":4},"end":{"line":573,"column":4}}]},"58":{"line":580,"type":"switch","locations":[{"start":{"line":581,"column":4},"end":{"line":583,"column":12}},{"start":{"line":584,"column":4},"end":{"line":586,"column":12}}]},"59":{"line":582,"type":"cond-expr","locations":[{"start":{"line":582,"column":39},"end":{"line":582,"column":46}},{"start":{"line":582,"column":49},"end":{"line":582,"column":54}}]},"60":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":4},"end":{"line":614,"column":4}},{"start":{"line":614,"column":4},"end":{"line":614,"column":4}}]},"61":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":4},"end":{"line":627,"column":4}},{"start":{"line":627,"column":4},"end":{"line":627,"column":4}}]},"62":{"line":632,"type":"if","locations":[{"start":{"line":632,"column":4},"end":{"line":632,"column":4}},{"start":{"line":632,"column":4},"end":{"line":632,"column":4}}]},"63":{"line":632,"type":"binary-expr","locations":[{"start":{"line":632,"column":8},"end":{"line":632,"column":14}},{"start":{"line":632,"column":18},"end":{"line":632,"column":50}},{"start":{"line":632,"column":54},"end":{"line":632,"column":85}}]},"64":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":11},"end":{"line":637,"column":11}},{"start":{"line":637,"column":11},"end":{"line":637,"column":11}}]},"65":{"line":637,"type":"binary-expr","locations":[{"start":{"line":637,"column":15},"end":{"line":637,"column":47}},{"start":{"line":637,"column":51},"end":{"line":637,"column":82}}]},"66":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":6},"end":{"line":641,"column":6}},{"start":{"line":641,"column":6},"end":{"line":641,"column":6}}]},"67":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":8},"end":{"line":642,"column":8}},{"start":{"line":642,"column":8},"end":{"line":642,"column":8}}]},"68":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":15},"end":{"line":644,"column":15}},{"start":{"line":644,"column":15},"end":{"line":644,"column":15}}]},"69":{"line":644,"type":"binary-expr","locations":[{"start":{"line":644,"column":19},"end":{"line":644,"column":30}},{"start":{"line":644,"column":34},"end":{"line":644,"column":47}}]},"70":{"line":648,"type":"if","locations":[{"start":{"line":648,"column":6},"end":{"line":648,"column":6}},{"start":{"line":648,"column":6},"end":{"line":648,"column":6}}]},"71":{"line":648,"type":"binary-expr","locations":[{"start":{"line":648,"column":10},"end":{"line":648,"column":15}},{"start":{"line":648,"column":19},"end":{"line":648,"column":25}}]},"72":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":11},"end":{"line":652,"column":11}},{"start":{"line":652,"column":11},"end":{"line":652,"column":11}}]},"73":{"line":652,"type":"binary-expr","locations":[{"start":{"line":652,"column":15},"end":{"line":652,"column":20}},{"start":{"line":652,"column":25},"end":{"line":652,"column":58}},{"start":{"line":652,"column":62},"end":{"line":652,"column":94}}]},"74":{"line":653,"type":"cond-expr","locations":[{"start":{"line":653,"column":26},"end":{"line":653,"column":51}},{"start":{"line":653,"column":54},"end":{"line":653,"column":59}}]},"75":{"line":655,"type":"if","locations":[{"start":{"line":655,"column":11},"end":{"line":655,"column":11}},{"start":{"line":655,"column":11},"end":{"line":655,"column":11}}]},"76":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":15},"end":{"line":655,"column":47}},{"start":{"line":655,"column":51},"end":{"line":655,"column":82}}]},"77":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":4},"end":{"line":660,"column":4}},{"start":{"line":660,"column":4},"end":{"line":660,"column":4}}]},"78":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":8},"end":{"line":660,"column":17}},{"start":{"line":660,"column":21},"end":{"line":660,"column":34}}]},"79":{"line":662,"type":"if","locations":[{"start":{"line":662,"column":6},"end":{"line":662,"column":6}},{"start":{"line":662,"column":6},"end":{"line":662,"column":6}}]},"80":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":13},"end":{"line":664,"column":13}},{"start":{"line":664,"column":13},"end":{"line":664,"column":13}}]},"81":{"line":664,"type":"binary-expr","locations":[{"start":{"line":664,"column":17},"end":{"line":664,"column":34}},{"start":{"line":664,"column":38},"end":{"line":664,"column":62}}]},"82":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":4},"end":{"line":672,"column":4}},{"start":{"line":672,"column":4},"end":{"line":672,"column":4}}]},"83":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":4},"end":{"line":677,"column":4}},{"start":{"line":677,"column":4},"end":{"line":677,"column":4}}]},"84":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":4},"end":{"line":684,"column":4}},{"start":{"line":684,"column":4},"end":{"line":684,"column":4}}]},"85":{"line":684,"type":"binary-expr","locations":[{"start":{"line":684,"column":8},"end":{"line":684,"column":18}},{"start":{"line":684,"column":22},"end":{"line":684,"column":32}}]},"86":{"line":689,"type":"cond-expr","locations":[{"start":{"line":689,"column":20},"end":{"line":689,"column":32}},{"start":{"line":689,"column":35},"end":{"line":689,"column":36}}]},"87":{"line":711,"type":"cond-expr","locations":[{"start":{"line":711,"column":39},"end":{"line":711,"column":47}},{"start":{"line":711,"column":50},"end":{"line":711,"column":65}}]},"88":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":4},"end":{"line":715,"column":4}},{"start":{"line":715,"column":4},"end":{"line":715,"column":4}}]},"89":{"line":739,"type":"cond-expr","locations":[{"start":{"line":739,"column":52},"end":{"line":739,"column":71}},{"start":{"line":739,"column":74},"end":{"line":739,"column":76}}]},"90":{"line":739,"type":"cond-expr","locations":[{"start":{"line":739,"column":94},"end":{"line":739,"column":116}},{"start":{"line":739,"column":119},"end":{"line":739,"column":121}}]},"91":{"line":740,"type":"binary-expr","locations":[{"start":{"line":740,"column":11},"end":{"line":740,"column":12}},{"start":{"line":740,"column":16},"end":{"line":740,"column":18}}]}},"code":["var utils = require('./utils'),","  lexer = require('./lexer');","","var _t = lexer.types,","  _reserved = ['break', 'case', 'catch', 'continue', 'debugger', 'default', 'delete', 'do', 'else', 'finally', 'for', 'function', 'if', 'in', 'instanceof', 'new', 'return', 'switch', 'this', 'throw', 'try', 'typeof', 'var', 'void', 'while', 'with'];","","","/**"," * Filters are simply functions that perform transformations on their first input argument."," * Filters are run at render time, so they may not directly modify the compiled template structure in any way."," * All of Swig's built-in filters are written in this same way. For more examples, reference the `filters.js` file in Swig's source."," *"," * To disable auto-escaping on a custom filter, simply add a property to the filter method `safe = true;` and the output from this will not be escaped, no matter what the global settings are for Swig."," *"," * @typedef {function} Filter"," *"," * @example"," * // This filter will return 'bazbop' if the idx on the input is not 'foobar'"," * swig.setFilter('foobar', function (input, idx) {"," *   return input[idx] === 'foobar' ? input[idx] : 'bazbop';"," * });"," * // myvar = ['foo', 'bar', 'baz', 'bop'];"," * // => {{ myvar|foobar(3) }}"," * // Since myvar[3] !== 'foobar', we render:"," * // => bazbop"," *"," * @example"," * // This filter will disable auto-escaping on its output:"," * function bazbop (input) { return input; }"," * bazbop.safe = true;"," * swig.setFilter('bazbop', bazbop);"," * // => {{ \"<p>\"|bazbop }}"," * // => <p>"," *"," * @param {*} input Input argument, automatically sent from Swig's built-in parser."," * @param {...*} [args] All other arguments are defined by the Filter author."," * @return {*}"," */","","/*!"," * Makes a string safe for a regular expression."," * @param  {string} str"," * @return {string}"," * @private"," */","function escapeRegExp(str) {","  return str.replace(/[\\-\\/\\\\\\^$*+?.()|\\[\\]{}]/g, '\\\\$&');","}","","/**"," * Parse strings of variables and tags into tokens for future compilation."," * @class"," * @param {array}   tokens     Pre-split tokens read by the Lexer."," * @param {object}  filters    Keyed object of filters that may be applied to variables."," * @param {boolean} autoescape Whether or not this should be autoescaped."," * @param {number}  line       Beginning line number for the first token."," * @param {string}  [filename] Name of the file being parsed."," * @private"," */","function TokenParser(tokens, filters, autoescape, line, filename) {","  this.out = [];","  this.state = [];","  this.filterApplyIdx = [];","  this._parsers = {};","  this.line = line;","  this.filename = filename;","  this.filters = filters;","  this.escape = autoescape;","","  this.parse = function () {","    var self = this;","","    if (self._parsers.start) {","      self._parsers.start.call(self);","    }","    utils.each(tokens, function (token, i) {","      var prevToken = tokens[i - 1];","      self.isLast = (i === tokens.length - 1);","      if (prevToken) {","        while (prevToken.type === _t.WHITESPACE) {","          i -= 1;","          prevToken = tokens[i - 1];","        }","      }","      self.prevToken = prevToken;","      self.parseToken(token);","    });","    if (self._parsers.end) {","      self._parsers.end.call(self);","    }","","    if (self.escape) {","      self.filterApplyIdx = [0];","      if (typeof self.escape === 'string') {","        self.parseToken({ type: _t.FILTER, match: 'e' });","        self.parseToken({ type: _t.COMMA, match: ',' });","        self.parseToken({ type: _t.STRING, match: String(autoescape) });","        self.parseToken({ type: _t.PARENCLOSE, match: ')'});","      } else {","        self.parseToken({ type: _t.FILTEREMPTY, match: 'e' });","      }","    }","","    return self.out;","  };","}","","TokenParser.prototype = {","  /**","   * Set a custom method to be called when a token type is found.","   *","   * @example","   * parser.on(types.STRING, function (token) {","   *   this.out.push(token.match);","   * });","   * @example","   * parser.on('start', function () {","   *   this.out.push('something at the beginning of your args')","   * });","   * parser.on('end', function () {","   *   this.out.push('something at the end of your args');","   * });","   *","   * @param  {number}   type Token type ID. Found in the Lexer.","   * @param  {Function} fn   Callback function. Return true to continue executing the default parsing function.","   * @return {undefined}","   */","  on: function (type, fn) {","    this._parsers[type] = fn;","  },","","  /**","   * Parse a single token.","   * @param  {{match: string, type: number, line: number}} token Lexer token object.","   * @return {undefined}","   * @private","   */","  parseToken: function (token) {","    var self = this,","      fn = self._parsers[token.type] || self._parsers['*'],","      match = token.match,","      prevToken = self.prevToken,","      prevTokenType = prevToken ? prevToken.type : null,","      lastState = (self.state.length) ? self.state[self.state.length - 1] : null,","      temp;","","    if (fn && typeof fn === 'function') {","      if (!fn.call(this, token)) {","        return;","      }","    }","","    if (lastState && prevToken &&","        lastState === _t.FILTER &&","        prevTokenType === _t.FILTER &&","        token.type !== _t.PARENCLOSE &&","        token.type !== _t.COMMA &&","        token.type !== _t.OPERATOR &&","        token.type !== _t.FILTER &&","        token.type !== _t.FILTEREMPTY) {","      self.out.push(', ');","    }","","    if (lastState && lastState === _t.METHODOPEN) {","      self.state.pop();","      if (token.type !== _t.PARENCLOSE) {","        self.out.push(', ');","      }","    }","","    switch (token.type) {","    case _t.WHITESPACE:","      break;","","    case _t.STRING:","      self.filterApplyIdx.push(self.out.length);","      self.out.push(match.replace(/\\\\/g, '\\\\\\\\'));","      break;","","    case _t.NUMBER:","    case _t.BOOL:","      self.filterApplyIdx.push(self.out.length);","      self.out.push(match);","      break;","","    case _t.FILTER:","      if (!self.filters.hasOwnProperty(match) || typeof self.filters[match] !== \"function\") {","        utils.throwError('Invalid filter \"' + match + '\"', self.line, self.filename);","      }","      self.escape = self.filters[match].safe ? false : self.escape;","      self.out.splice(self.filterApplyIdx[self.filterApplyIdx.length - 1], 0, '_filters[\"' + match + '\"](');","      self.state.push(token.type);","      break;","","    case _t.FILTEREMPTY:","      if (!self.filters.hasOwnProperty(match) || typeof self.filters[match] !== \"function\") {","        utils.throwError('Invalid filter \"' + match + '\"', self.line, self.filename);","      }","      self.escape = self.filters[match].safe ? false : self.escape;","      self.out.splice(self.filterApplyIdx[self.filterApplyIdx.length - 1], 0, '_filters[\"' + match + '\"](');","      self.out.push(')');","      break;","","    case _t.FUNCTION:","    case _t.FUNCTIONEMPTY:","      self.out.push('((typeof _ctx.' + match + ' !== \"undefined\") ? _ctx.' + match +","        ' : ((typeof ' + match + ' !== \"undefined\") ? ' + match +","        ' : _fn))(');","      self.escape = false;","      if (token.type === _t.FUNCTIONEMPTY) {","        self.out[self.out.length - 1] = self.out[self.out.length - 1] + ')';","      } else {","        self.state.push(token.type);","      }","      self.filterApplyIdx.push(self.out.length - 1);","      break;","","    case _t.PARENOPEN:","      self.state.push(token.type);","      if (self.filterApplyIdx.length) {","        self.out.splice(self.filterApplyIdx[self.filterApplyIdx.length - 1], 0, '(');","        if (prevToken && prevTokenType === _t.VAR) {","          temp = prevToken.match.split('.').slice(0, -1);","          self.out.push(' || _fn).call(' + self.checkMatch(temp));","          self.state.push(_t.METHODOPEN);","          self.escape = false;","        } else {","          self.out.push(' || _fn)(');","        }","        self.filterApplyIdx.push(self.out.length - 3);","      } else {","        self.out.push('(');","        self.filterApplyIdx.push(self.out.length - 1);","      }","      break;","","    case _t.PARENCLOSE:","      temp = self.state.pop();","      if (temp !== _t.PARENOPEN && temp !== _t.FUNCTION && temp !== _t.FILTER) {","        utils.throwError('Mismatched nesting state', self.line, self.filename);","      }","      self.out.push(')');","      // Once off the previous entry","      self.filterApplyIdx.pop();","      if (temp !== _t.FILTER) {","        // Once for the open paren","        self.filterApplyIdx.pop();","      }","      break;","","    case _t.COMMA:","      if (lastState !== _t.FUNCTION &&","          lastState !== _t.FILTER &&","          lastState !== _t.ARRAYOPEN &&","          lastState !== _t.CURLYOPEN &&","          lastState !== _t.PARENOPEN &&","          lastState !== _t.COLON) {","        utils.throwError('Unexpected comma', self.line, self.filename);","      }","      if (lastState === _t.COLON) {","        self.state.pop();","      }","      self.out.push(', ');","      self.filterApplyIdx.pop();","      break;","","    case _t.LOGIC:","    case _t.COMPARATOR:","      if (!prevToken ||","          prevTokenType === _t.COMMA ||","          prevTokenType === token.type ||","          prevTokenType === _t.BRACKETOPEN ||","          prevTokenType === _t.CURLYOPEN ||","          prevTokenType === _t.PARENOPEN ||","          prevTokenType === _t.FUNCTION) {","        utils.throwError('Unexpected logic', self.line, self.filename);","      }","      self.out.push(token.match);","      break;","","    case _t.NOT:","      self.out.push(token.match);","      break;","","    case _t.VAR:","      self.parseVar(token, match, lastState);","      break;","","    case _t.BRACKETOPEN:","      if (!prevToken ||","          (prevTokenType !== _t.VAR &&","            prevTokenType !== _t.BRACKETCLOSE &&","            prevTokenType !== _t.PARENCLOSE)) {","        self.state.push(_t.ARRAYOPEN);","        self.filterApplyIdx.push(self.out.length);","      } else {","        self.state.push(token.type);","      }","      self.out.push('[');","      break;","","    case _t.BRACKETCLOSE:","      temp = self.state.pop();","      if (temp !== _t.BRACKETOPEN && temp !== _t.ARRAYOPEN) {","        utils.throwError('Unexpected closing square bracket', self.line, self.filename);","      }","      self.out.push(']');","      self.filterApplyIdx.pop();","      break;","","    case _t.CURLYOPEN:","      self.state.push(token.type);","      self.out.push('{');","      self.filterApplyIdx.push(self.out.length - 1);","      break;","","    case _t.COLON:","      if (lastState !== _t.CURLYOPEN) {","        utils.throwError('Unexpected colon', self.line, self.filename);","      }","      self.state.push(token.type);","      self.out.push(':');","      self.filterApplyIdx.pop();","      break;","","    case _t.CURLYCLOSE:","      if (lastState === _t.COLON) {","        self.state.pop();","      }","      if (self.state.pop() !== _t.CURLYOPEN) {","        utils.throwError('Unexpected closing curly brace', self.line, self.filename);","      }","      self.out.push('}');","","      self.filterApplyIdx.pop();","      break;","","    case _t.DOTKEY:","      if (!prevToken || (","          prevTokenType !== _t.VAR &&","          prevTokenType !== _t.BRACKETCLOSE &&","          prevTokenType !== _t.DOTKEY &&","          prevTokenType !== _t.PARENCLOSE &&","          prevTokenType !== _t.FUNCTIONEMPTY &&","          prevTokenType !== _t.FILTEREMPTY &&","          prevTokenType !== _t.CURLYCLOSE","        )) {","        utils.throwError('Unexpected key \"' + match + '\"', self.line, self.filename);","      }","      self.out.push('.' + match);","      break;","","    case _t.OPERATOR:","      self.out.push(' ' + match + ' ');","      self.filterApplyIdx.pop();","      break;","    }","  },","","  /**","   * Parse variable token","   * @param  {{match: string, type: number, line: number}} token      Lexer token object.","   * @param  {string} match       Shortcut for token.match","   * @param  {number} lastState   Lexer token type state.","   * @return {undefined}","   * @private","   */","  parseVar: function (token, match, lastState) {","    var self = this;","","    match = match.split('.');","","    if (_reserved.indexOf(match[0]) !== -1) {","      utils.throwError('Reserved keyword \"' + match[0] + '\" attempted to be used as a variable', self.line, self.filename);","    }","","    self.filterApplyIdx.push(self.out.length);","    if (lastState === _t.CURLYOPEN) {","      if (match.length > 1) {","        utils.throwError('Unexpected dot', self.line, self.filename);","      }","      self.out.push(match[0]);","      return;","    }","","    self.out.push(self.checkMatch(match));","  },","","  /**","   * Return contextual dot-check string for a match","   * @param  {string} match       Shortcut for token.match","   * @private","   */","  checkMatch: function (match) {","    var temp = match[0], result;","","    function checkDot(ctx) {","      var c = ctx + temp,","        m = match,","        build = '';","","      build = '(typeof ' + c + ' !== \"undefined\" && ' + c + ' !== null';","      utils.each(m, function (v, i) {","        if (i === 0) {","          return;","        }","        build += ' && ' + c + '.' + v + ' !== undefined && ' + c + '.' + v + ' !== null';","        c += '.' + v;","      });","      build += ')';","","      return build;","    }","","    function buildDot(ctx) {","      return '(' + checkDot(ctx) + ' ? ' + ctx + match.join('.') + ' : \"\")';","    }","    result = '(' + checkDot('_ctx.') + ' ? ' + buildDot('_ctx.') + ' : ' + buildDot('') + ')';","    return '(' + result + ' !== null ? ' + result + ' : ' + '\"\" )';","  }","};","","/**"," * Parse a source string into tokens that are ready for compilation."," *"," * @example"," * exports.parse('{{ tacos }}', {}, tags, filters);"," * // => [{ compile: [Function], ... }]"," *"," * @params {object} swig    The current Swig instance"," * @param  {string} source  Swig template source."," * @param  {object} opts    Swig options object."," * @param  {object} tags    Keyed object of tags that can be parsed and compiled."," * @param  {object} filters Keyed object of filters that may be applied to variables."," * @return {array}          List of tokens ready for compilation."," */","exports.parse = function (swig, source, opts, tags, filters) {","  source = source.replace(/\\r\\n/g, '\\n');","  var escape = opts.autoescape,","    tagOpen = opts.tagControls[0],","    tagClose = opts.tagControls[1],","    varOpen = opts.varControls[0],","    varClose = opts.varControls[1],","    escapedTagOpen = escapeRegExp(tagOpen),","    escapedTagClose = escapeRegExp(tagClose),","    escapedVarOpen = escapeRegExp(varOpen),","    escapedVarClose = escapeRegExp(varClose),","    tagStrip = new RegExp('^' + escapedTagOpen + '-?\\\\s*-?|-?\\\\s*-?' + escapedTagClose + '$', 'g'),","    tagStripBefore = new RegExp('^' + escapedTagOpen + '-'),","    tagStripAfter = new RegExp('-' + escapedTagClose + '$'),","    varStrip = new RegExp('^' + escapedVarOpen + '-?\\\\s*-?|-?\\\\s*-?' + escapedVarClose + '$', 'g'),","    varStripBefore = new RegExp('^' + escapedVarOpen + '-'),","    varStripAfter = new RegExp('-' + escapedVarClose + '$'),","    cmtOpen = opts.cmtControls[0],","    cmtClose = opts.cmtControls[1],","    anyChar = '[\\\\s\\\\S]*?',","    // Split the template source based on variable, tag, and comment blocks","    // /(\\{%[\\s\\S]*?%\\}|\\{\\{[\\s\\S]*?\\}\\}|\\{#[\\s\\S]*?#\\})/","    splitter = new RegExp(","      '(' +","        escapedTagOpen + anyChar + escapedTagClose + '|' +","        escapedVarOpen + anyChar + escapedVarClose + '|' +","        escapeRegExp(cmtOpen) + anyChar + escapeRegExp(cmtClose) +","        ')'","    ),","    line = 1,","    stack = [],","    parent = null,","    tokens = [],","    blocks = {},","    inRaw = false,","    stripNext;","","  /**","   * Parse a variable.","   * @param  {string} str  String contents of the variable, between <i>{{</i> and <i>}}</i>","   * @param  {number} line The line number that this variable starts on.","   * @return {VarToken}      Parsed variable token object.","   * @private","   */","  function parseVariable(str, line) {","    var lexedTokens = lexer.read(utils.strip(str)),","      parser,","      out;","","    parser = new TokenParser(lexedTokens, filters, escape, line, opts.filename);","    out = parser.parse().join('');","","    if (parser.state.length) {","      utils.throwError('Unable to parse \"' + str + '\"', line, opts.filename);","    }","","    /**","     * A parsed variable token.","     * @typedef {object} VarToken","     * @property {function} compile Method for compiling this token.","     */","    return {","      compile: function () {","        return '_output += ' + out + ';\\n';","      }","    };","  }","  exports.parseVariable = parseVariable;","","  /**","   * Parse a tag.","   * @param  {string} str  String contents of the tag, between <i>{%</i> and <i>%}</i>","   * @param  {number} line The line number that this tag starts on.","   * @return {TagToken}      Parsed token object.","   * @private","   */","  function parseTag(str, line) {","    var lexedTokens, parser, chunks, tagName, tag, args, last;","","    if (utils.startsWith(str, 'end')) {","      last = stack[stack.length - 1];","      if (last && last.name === str.split(/\\s+/)[0].replace(/^end/, '') && last.ends) {","        switch (last.name) {","        case 'autoescape':","          escape = opts.autoescape;","          break;","        case 'raw':","          inRaw = false;","          break;","        }","        stack.pop();","        return;","      }","","      if (!inRaw) {","        utils.throwError('Unexpected end of tag \"' + str.replace(/^end/, '') + '\"', line, opts.filename);","      }","    }","","    if (inRaw) {","      return;","    }","","    chunks = str.split(/\\s+(.+)?/);","    tagName = chunks.shift();","","    if (!tags.hasOwnProperty(tagName)) {","      utils.throwError('Unexpected tag \"' + str + '\"', line, opts.filename);","    }","","    lexedTokens = lexer.read(utils.strip(chunks.join(' ')));","    parser = new TokenParser(lexedTokens, filters, false, line, opts.filename);","    tag = tags[tagName];","","    /**","     * Define custom parsing methods for your tag.","     * @callback parse","     *","     * @example","     * exports.parse = function (str, line, parser, types, options, swig) {","     *   parser.on('start', function () {","     *     // ...","     *   });","     *   parser.on(types.STRING, function (token) {","     *     // ...","     *   });","     * };","     *","     * @param {string} str The full token string of the tag.","     * @param {number} line The line number that this tag appears on.","     * @param {TokenParser} parser A TokenParser instance.","     * @param {TYPES} types Lexer token type enum.","     * @param {TagToken[]} stack The current stack of open tags.","     * @param {SwigOpts} options Swig Options Object.","     * @param {object} swig The Swig instance (gives acces to loaders, parsers, etc)","     */","    if (!tag.parse(chunks[1], line, parser, _t, stack, opts, swig)) {","      utils.throwError('Unexpected tag \"' + tagName + '\"', line, opts.filename);","    }","","    parser.parse();","    args = parser.out;","","    switch (tagName) {","    case 'autoescape':","      escape = (args[0] !== 'false') ? args[0] : false;","      break;","    case 'raw':","      inRaw = true;","      break;","    }","","    /**","     * A parsed tag token.","     * @typedef {Object} TagToken","     * @property {compile} [compile] Method for compiling this token.","     * @property {array} [args] Array of arguments for the tag.","     * @property {Token[]} [content=[]] An array of tokens that are children of this Token.","     * @property {boolean} [ends] Whether or not this tag requires an end tag.","     * @property {string} name The name of this tag.","     */","    return {","      block: !!tags[tagName].block,","      compile: tag.compile,","      args: args,","      content: [],","      ends: tag.ends,","      name: tagName","    };","  }","","  /**","   * Strip the whitespace from the previous token, if it is a string.","   * @param  {object} token Parsed token.","   * @return {object}       If the token was a string, trailing whitespace will be stripped.","   */","  function stripPrevToken(token) {","    if (typeof token === 'string') {","      token = token.replace(/\\s*$/, '');","    }","    return token;","  }","","  /*!","   * Loop over the source, split via the tag/var/comment regular expression splitter.","   * Send each chunk to the appropriate parser.","   */","  utils.each(source.split(splitter), function (chunk) {","    var token, lines, stripPrev, prevToken, prevChildToken;","","    if (!chunk) {","      return;","    }","","    // Is a variable?","    if (!inRaw && utils.startsWith(chunk, varOpen) && utils.endsWith(chunk, varClose)) {","      stripPrev = varStripBefore.test(chunk);","      stripNext = varStripAfter.test(chunk);","      token = parseVariable(chunk.replace(varStrip, ''), line);","    // Is a tag?","    } else if (utils.startsWith(chunk, tagOpen) && utils.endsWith(chunk, tagClose)) {","      stripPrev = tagStripBefore.test(chunk);","      stripNext = tagStripAfter.test(chunk);","      token = parseTag(chunk.replace(tagStrip, ''), line);","      if (token) {","        if (token.name === 'extends') {","          parent = token.args.join('').replace(/^\\'|\\'$/g, '').replace(/^\\\"|\\\"$/g, '');","        } else if (token.block && !stack.length) {","          blocks[token.args.join('')] = token;","        }","      }","      if (inRaw && !token) {","        token = chunk;","      }","    // Is a content string?","    } else if (inRaw || (!utils.startsWith(chunk, cmtOpen) && !utils.endsWith(chunk, cmtClose))) {","      token = stripNext ? chunk.replace(/^\\s*/, '') : chunk;","      stripNext = false;","    } else if (utils.startsWith(chunk, cmtOpen) && utils.endsWith(chunk, cmtClose)) {","      return;","    }","","    // Did this tag ask to strip previous whitespace? <code>{%- ... %}</code> or <code>{{- ... }}</code>","    if (stripPrev && tokens.length) {","      prevToken = tokens.pop();","      if (typeof prevToken === 'string') {","        prevToken = stripPrevToken(prevToken);","      } else if (prevToken.content && prevToken.content.length) {","        prevChildToken = stripPrevToken(prevToken.content.pop());","        prevToken.content.push(prevChildToken);","      }","      tokens.push(prevToken);","    }","","    // This was a comment, so let's just keep going.","    if (!token) {","      return;","    }","","    // If there's an open item in the stack, add this to its content.","    if (stack.length) {","      stack[stack.length - 1].content.push(token);","    } else {","      tokens.push(token);","    }","","    // If the token is a tag that requires an end tag, open it on the stack.","    if (token.name && token.ends) {","      stack.push(token);","    }","","    lines = chunk.match(/\\n/g);","    line += lines ? lines.length : 0;","  });","","  return {","    name: opts.filename,","    parent: parent,","    tokens: tokens,","    blocks: blocks","  };","};","","","/**"," * Compile an array of tokens."," * @param  {Token[]} template     An array of template tokens."," * @param  {Templates[]} parents  Array of parent templates."," * @param  {SwigOpts} [options]   Swig options object."," * @param  {string} [blockName]   Name of the current block context."," * @return {string}               Partial for a compiled JavaScript method that will output a rendered template."," */","exports.compile = function (template, parents, options, blockName) {","  var out = '',","    tokens = utils.isArray(template) ? template : template.tokens;","","  utils.each(tokens, function (token) {","    var o;","    if (typeof token === 'string') {","      out += '_output += \"' + token.replace(/\\\\/g, '\\\\\\\\').replace(/\\n|\\r/g, '\\\\n').replace(/\"/g, '\\\\\"') + '\";\\n';","      return;","    }","","    /**","     * Compile callback for VarToken and TagToken objects.","     * @callback compile","     *","     * @example","     * exports.compile = function (compiler, args, content, parents, options, blockName) {","     *   if (args[0] === 'foo') {","     *     return compiler(content, parents, options, blockName) + '\\n';","     *   }","     *   return '_output += \"fallback\";\\n';","     * };","     *","     * @param {parserCompiler} compiler","     * @param {array} [args] Array of parsed arguments on the for the token.","     * @param {array} [content] Array of content within the token.","     * @param {array} [parents] Array of parent templates for the current template context.","     * @param {SwigOpts} [options] Swig Options Object","     * @param {string} [blockName] Name of the direct block parent, if any.","     */","    o = token.compile(exports.compile, token.args ? token.args.slice(0) : [], token.content ? token.content.slice(0) : [], parents, options, blockName);","    out += o || '';","  });","","  return out;","};",""],"l":{"1":1,"4":1,"46":1,"47":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"70":0,"71":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"85":0,"86":0,"88":0,"89":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"104":0,"108":1,"129":0,"139":0,"147":0,"148":0,"149":0,"153":0,"161":0,"164":0,"165":0,"166":0,"167":0,"171":0,"173":0,"176":0,"177":0,"178":0,"182":0,"183":0,"184":0,"187":0,"188":0,"190":0,"191":0,"192":0,"193":0,"196":0,"197":0,"199":0,"200":0,"201":0,"202":0,"206":0,"209":0,"210":0,"211":0,"213":0,"215":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"228":0,"230":0,"232":0,"233":0,"235":0,"238":0,"239":0,"240":0,"242":0,"244":0,"245":0,"247":0,"249":0,"252":0,"258":0,"260":0,"261":0,"263":0,"264":0,"265":0,"269":0,"276":0,"278":0,"279":0,"282":0,"283":0,"286":0,"287":0,"290":0,"294":0,"295":0,"297":0,"299":0,"300":0,"303":0,"304":0,"305":0,"307":0,"308":0,"309":0,"312":0,"313":0,"314":0,"315":0,"318":0,"319":0,"321":0,"322":0,"323":0,"324":0,"327":0,"328":0,"330":0,"331":0,"333":0,"335":0,"336":0,"339":0,"348":0,"350":0,"351":0,"354":0,"355":0,"356":0,"369":0,"371":0,"373":0,"374":0,"377":0,"378":0,"379":0,"380":0,"382":0,"383":0,"386":0,"395":0,"397":1,"398":0,"402":0,"403":0,"404":0,"405":0,"407":0,"408":0,"410":0,"412":0,"415":1,"416":0,"418":0,"419":0,"437":1,"438":0,"439":0,"481":1,"482":0,"486":0,"487":0,"489":0,"490":0,"498":0,"500":0,"504":0,"513":1,"514":0,"516":0,"517":0,"518":0,"519":0,"521":0,"522":0,"524":0,"525":0,"527":0,"528":0,"531":0,"532":0,"536":0,"537":0,"540":0,"541":0,"543":0,"544":0,"547":0,"548":0,"549":0,"573":0,"574":0,"577":0,"578":0,"580":0,"582":0,"583":0,"585":0,"586":0,"598":0,"613":1,"614":0,"615":0,"617":0,"624":0,"625":0,"627":0,"628":0,"632":0,"633":0,"634":0,"635":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"648":0,"649":0,"652":0,"653":0,"654":0,"655":0,"656":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"668":0,"672":0,"673":0,"677":0,"678":0,"680":0,"684":0,"685":0,"688":0,"689":0,"692":0,"709":1,"710":0,"713":0,"714":0,"715":0,"716":0,"717":0,"739":0,"740":0,"743":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/lexer.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/lexer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"reader","line":253,"loc":{"start":{"line":253,"column":0},"end":{"line":253,"column":21}}},"2":{"name":"(anonymous_2)","line":256,"loc":{"start":{"line":256,"column":20},"end":{"line":256,"column":36}}},"3":{"name":"(anonymous_3)","line":257,"loc":{"start":{"line":257,"column":34},"end":{"line":257,"column":51}}},"4":{"name":"(anonymous_4)","line":294,"loc":{"start":{"line":294,"column":15},"end":{"line":294,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":16,"column":0},"end":{"line":243,"column":4}},"3":{"start":{"line":245,"column":0},"end":{"line":245,"column":22}},"4":{"start":{"line":253,"column":0},"end":{"line":286,"column":1}},"5":{"start":{"line":254,"column":2},"end":{"line":254,"column":14}},"6":{"start":{"line":256,"column":2},"end":{"line":275,"column":5}},"7":{"start":{"line":257,"column":4},"end":{"line":274,"column":7}},"8":{"start":{"line":258,"column":6},"end":{"line":259,"column":19}},"9":{"start":{"line":261,"column":6},"end":{"line":263,"column":7}},"10":{"start":{"line":262,"column":8},"end":{"line":262,"column":15}},"11":{"start":{"line":265,"column":6},"end":{"line":265,"column":60}},"12":{"start":{"line":266,"column":6},"end":{"line":266,"column":135}},"13":{"start":{"line":268,"column":6},"end":{"line":272,"column":8}},"14":{"start":{"line":273,"column":6},"end":{"line":273,"column":18}},"15":{"start":{"line":277,"column":2},"end":{"line":283,"column":3}},"16":{"start":{"line":278,"column":4},"end":{"line":282,"column":6}},"17":{"start":{"line":285,"column":2},"end":{"line":285,"column":17}},"18":{"start":{"line":294,"column":0},"end":{"line":306,"column":2}},"19":{"start":{"line":295,"column":2},"end":{"line":298,"column":10}},"20":{"start":{"line":299,"column":2},"end":{"line":304,"column":3}},"21":{"start":{"line":300,"column":4},"end":{"line":300,"column":35}},"22":{"start":{"line":301,"column":4},"end":{"line":301,"column":27}},"23":{"start":{"line":302,"column":4},"end":{"line":302,"column":27}},"24":{"start":{"line":303,"column":4},"end":{"line":303,"column":23}},"25":{"start":{"line":305,"column":2},"end":{"line":305,"column":16}}},"branchMap":{"1":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"2":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":25},"end":{"line":265,"column":33}},{"start":{"line":265,"column":37},"end":{"line":265,"column":38}}]},"3":{"line":266,"type":"cond-expr","locations":[{"start":{"line":266,"column":97},"end":{"line":266,"column":121}},{"start":{"line":266,"column":124},"end":{"line":266,"column":134}}]},"4":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":20},"end":{"line":266,"column":50}},{"start":{"line":266,"column":54},"end":{"line":266,"column":93}}]},"5":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":2},"end":{"line":277,"column":2}},{"start":{"line":277,"column":2},"end":{"line":277,"column":2}}]}},"code":["var utils = require('./utils');","","/**"," * A lexer token."," * @typedef {object} LexerToken"," * @property {string} match  The string that was matched."," * @property {number} type   Lexer type enum."," * @property {number} length Length of the original string processed."," */","","/**"," * Enum for token types."," * @readonly"," * @enum {number}"," */","var TYPES = {","    /** Whitespace */","    WHITESPACE: 0,","    /** Plain string */","    STRING: 1,","    /** Variable filter */","    FILTER: 2,","    /** Empty variable filter */","    FILTEREMPTY: 3,","    /** Function */","    FUNCTION: 4,","    /** Function with no arguments */","    FUNCTIONEMPTY: 5,","    /** Open parenthesis */","    PARENOPEN: 6,","    /** Close parenthesis */","    PARENCLOSE: 7,","    /** Comma */","    COMMA: 8,","    /** Variable */","    VAR: 9,","    /** Number */","    NUMBER: 10,","    /** Math operator */","    OPERATOR: 11,","    /** Open square bracket */","    BRACKETOPEN: 12,","    /** Close square bracket */","    BRACKETCLOSE: 13,","    /** Key on an object using dot-notation */","    DOTKEY: 14,","    /** Start of an array */","    ARRAYOPEN: 15,","    /** End of an array","     * Currently unused","    ARRAYCLOSE: 16, */","    /** Open curly brace */","    CURLYOPEN: 17,","    /** Close curly brace */","    CURLYCLOSE: 18,","    /** Colon (:) */","    COLON: 19,","    /** JavaScript-valid comparator */","    COMPARATOR: 20,","    /** Boolean logic */","    LOGIC: 21,","    /** Boolean logic \"not\" */","    NOT: 22,","    /** true or false */","    BOOL: 23,","    /** Variable assignment */","    ASSIGNMENT: 24,","    /** Start of a method */","    METHODOPEN: 25,","    /** End of a method","     * Currently unused","    METHODEND: 26, */","    /** Unknown type */","    UNKNOWN: 100","  },","  rules = [","    {","      type: TYPES.WHITESPACE,","      regex: [","        /^\\s+/","      ]","    },","    {","      type: TYPES.STRING,","      regex: [","        /^\"\"/,","        /^\".*?[^\\\\]\"/,","        /^''/,","        /^'.*?[^\\\\]'/","      ]","    },","    {","      type: TYPES.FILTER,","      regex: [","        /^\\|\\s*(\\w+)\\(/","      ],","      idx: 1","    },","    {","      type: TYPES.FILTEREMPTY,","      regex: [","        /^\\|\\s*(\\w+)/","      ],","      idx: 1","    },","    {","      type: TYPES.FUNCTIONEMPTY,","      regex: [","        /^\\s*(\\w+)\\(\\)/","      ],","      idx: 1","    },","    {","      type: TYPES.FUNCTION,","      regex: [","        /^\\s*(\\w+)\\(/","      ],","      idx: 1","    },","    {","      type: TYPES.PARENOPEN,","      regex: [","        /^\\(/","      ]","    },","    {","      type: TYPES.PARENCLOSE,","      regex: [","        /^\\)/","      ]","    },","    {","      type: TYPES.COMMA,","      regex: [","        /^,/","      ]","    },","    {","      type: TYPES.LOGIC,","      regex: [","        /^(&&|\\|\\|)\\s*/,","        /^(and|or)\\s+/","      ],","      idx: 1,","      replace: {","        'and': '&&',","        'or': '||'","      }","    },","    {","      type: TYPES.COMPARATOR,","      regex: [","        /^(===|==|\\!==|\\!=|<=|<|>=|>|in\\s|gte\\s|gt\\s|lte\\s|lt\\s)\\s*/","      ],","      idx: 1,","      replace: {","        'gte': '>=',","        'gt': '>',","        'lte': '<=',","        'lt': '<'","      }","    },","    {","      type: TYPES.ASSIGNMENT,","      regex: [","        /^(=|\\+=|-=|\\*=|\\/=)/","      ]","    },","    {","      type: TYPES.NOT,","      regex: [","        /^\\!\\s*/,","        /^not\\s+/","      ],","      replace: {","        'not': '!'","      }","    },","    {","      type: TYPES.BOOL,","      regex: [","        /^(true|false)\\s+/,","        /^(true|false)$/","      ],","      idx: 1","    },","    {","      type: TYPES.VAR,","      regex: [","        /^[a-zA-Z_$]\\w*((\\.\\$?\\w*)+)?/,","        /^[a-zA-Z_$]\\w*/","      ]","    },","    {","      type: TYPES.BRACKETOPEN,","      regex: [","        /^\\[/","      ]","    },","    {","      type: TYPES.BRACKETCLOSE,","      regex: [","        /^\\]/","      ]","    },","    {","      type: TYPES.CURLYOPEN,","      regex: [","        /^\\{/","      ]","    },","    {","      type: TYPES.COLON,","      regex: [","        /^\\:/","      ]","    },","    {","      type: TYPES.CURLYCLOSE,","      regex: [","        /^\\}/","      ]","    },","    {","      type: TYPES.DOTKEY,","      regex: [","        /^\\.(\\w+)/","      ],","      idx: 1","    },","    {","      type: TYPES.NUMBER,","      regex: [","        /^[+\\-]?\\d+(\\.\\d+)?/","      ]","    },","    {","      type: TYPES.OPERATOR,","      regex: [","        /^(\\+|\\-|\\/|\\*|%)/","      ]","    }","  ];","","exports.types = TYPES;","","/**"," * Return the token type object for a single chunk of a string."," * @param  {string} str String chunk."," * @return {LexerToken}     Defined type, potentially stripped or replaced with more suitable content."," * @private"," */","function reader(str) {","  var matched;","","  utils.some(rules, function (rule) {","    return utils.some(rule.regex, function (regex) {","      var match = str.match(regex),","        normalized;","","      if (!match) {","        return;","      }","","      normalized = match[rule.idx || 0].replace(/\\s*$/, '');","      normalized = (rule.hasOwnProperty('replace') && rule.replace.hasOwnProperty(normalized)) ? rule.replace[normalized] : normalized;","","      matched = {","        match: normalized,","        type: rule.type,","        length: match[0].length","      };","      return true;","    });","  });","","  if (!matched) {","    matched = {","      match: str,","      type: TYPES.UNKNOWN,","      length: str.length","    };","  }","","  return matched;","}","","/**"," * Read a string and break it into separate token types."," * @param  {string} str"," * @return {Array.LexerToken}     Array of defined types, potentially stripped or replaced with more suitable content."," * @private"," */","exports.read = function (str) {","  var offset = 0,","    tokens = [],","    substr,","    match;","  while (offset < str.length) {","    substr = str.substring(offset);","    match = reader(substr);","    offset += match.length;","    tokens.push(match);","  }","  return tokens;","};",""],"l":{"1":1,"16":1,"245":1,"253":1,"254":0,"256":0,"257":0,"258":0,"261":0,"262":0,"265":0,"266":0,"268":0,"273":0,"277":0,"278":0,"285":0,"294":1,"295":0,"299":0,"300":0,"301":0,"302":0,"303":0,"305":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/loaders/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/loaders/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":52,"column":0},"end":{"line":52,"column":37}},"2":{"start":{"line":53,"column":0},"end":{"line":53,"column":37}}},"branchMap":{},"code":["/**"," * @namespace TemplateLoader"," * @description Swig is able to accept custom template loaders written by you, so that your templates can come from your favorite storage medium without needing to be part of the core library."," * A template loader consists of two methods: <var>resolve</var> and <var>load</var>. Each method is used internally by Swig to find and load the source of the template before attempting to parse and compile it."," * @example"," * // A theoretical memcached loader"," * var path = require('path'),"," *   Memcached = require('memcached');"," * function memcachedLoader(locations, options) {"," *   var memcached = new Memcached(locations, options);"," *   return {"," *     resolve: function (to, from) {"," *       return path.resolve(from, to);"," *     },"," *     load: function (identifier, cb) {"," *       memcached.get(identifier, function (err, data) {"," *         // if (!data) { load from filesystem; }"," *         cb(err, data);"," *       });"," *     }"," *   };"," * };"," * // Tell swig about the loader:"," * swig.setDefaults({ loader: memcachedLoader(['192.168.0.2']) });"," */","","/**"," * @function"," * @name resolve"," * @memberof TemplateLoader"," * @description"," * Resolves <var>to</var> to an absolute path or unique identifier. This is used for building correct, normalized, and absolute paths to a given template."," * @param  {string} to        Non-absolute identifier or pathname to a file."," * @param  {string} [from]    If given, should attempt to find the <var>to</var> path in relation to this given, known path."," * @return {string}"," */","","/**"," * @function"," * @name load"," * @memberof TemplateLoader"," * @description"," * Loads a single template. Given a unique <var>identifier</var> found by the <var>resolve</var> method this should return the given template."," * @param  {string}   identifier  Unique identifier of a template (possibly an absolute path)."," * @param  {function} [cb]        Asynchronous callback function. If not provided, this method should run synchronously."," * @return {string}               Template source string."," */","","/**"," * @private"," */","exports.fs = require('./filesystem');","exports.memory = require('./memory');",""],"l":{"52":1,"53":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/loaders/filesystem.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/loaders/filesystem.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"b":{"1":[1,1],"2":[0,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":47}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":16},"end":{"line":28,"column":36}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":25}},"2":{"start":{"line":15,"column":0},"end":{"line":59,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":15}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":32}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":56}},"6":{"start":{"line":28,"column":2},"end":{"line":35,"column":4}},"7":{"start":{"line":29,"column":4},"end":{"line":33,"column":5}},"8":{"start":{"line":30,"column":6},"end":{"line":30,"column":22}},"9":{"start":{"line":32,"column":6},"end":{"line":32,"column":55}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":34}},"11":{"start":{"line":44,"column":2},"end":{"line":56,"column":4}},"12":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":109}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":41}},"15":{"start":{"line":51,"column":4},"end":{"line":54,"column":5}},"16":{"start":{"line":52,"column":6},"end":{"line":52,"column":44}},"17":{"start":{"line":53,"column":6},"end":{"line":53,"column":13}},"18":{"start":{"line":55,"column":4},"end":{"line":55,"column":49}},"19":{"start":{"line":58,"column":2},"end":{"line":58,"column":13}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":13},"end":{"line":18,"column":21}},{"start":{"line":18,"column":25},"end":{"line":18,"column":31}}]},"2":{"line":19,"type":"cond-expr","locations":[{"start":{"line":19,"column":24},"end":{"line":19,"column":48}},{"start":{"line":19,"column":51},"end":{"line":19,"column":55}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"4":{"line":32,"type":"cond-expr","locations":[{"start":{"line":32,"column":20},"end":{"line":32,"column":38}},{"start":{"line":32,"column":41},"end":{"line":32,"column":54}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":11}},{"start":{"line":45,"column":16},"end":{"line":45,"column":18}},{"start":{"line":45,"column":22},"end":{"line":45,"column":34}},{"start":{"line":45,"column":39},"end":{"line":45,"column":55}}]},"7":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]}},"code":["var fs = require('fs'),","  path = require('path');","","/**"," * Loads templates from the file system."," * @alias swig.loaders.fs"," * @example"," * swig.setDefaults({ loader: swig.loaders.fs() });"," * @example"," * // Load Templates from a specific directory (does not require using relative paths in your templates)"," * swig.setDefaults({ loader: swig.loaders.fs(__dirname + '/templates' )});"," * @param {string}   [basepath='']     Path to the templates as string. Assigning this value allows you to use semi-absolute paths to templates instead of relative paths."," * @param {string}   [encoding='utf8']   Template encoding"," */","module.exports = function (basepath, encoding) {","  var ret = {};","","  encoding = encoding || 'utf8';","  basepath = basepath ? path.normalize(basepath) : null;","","  /**","   * Resolves <var>to</var> to an absolute path or unique identifier. This is used for building correct, normalized, and absolute paths to a given template.","   * @alias resolve","   * @param  {string} to        Non-absolute identifier or pathname to a file.","   * @param  {string} [from]    If given, should attempt to find the <var>to</var> path in relation to this given, known path.","   * @return {string}","   */","  ret.resolve = function (to, from) {","    if (basepath) {","      from = basepath;","    } else {","      from = from ? path.dirname(from) : process.cwd();","    }","    return path.resolve(from, to);","  };","","  /**","   * Loads a single template. Given a unique <var>identifier</var> found by the <var>resolve</var> method this should return the given template.","   * @alias load","   * @param  {string}   identifier  Unique identifier of a template (possibly an absolute path).","   * @param  {function} [cb]        Asynchronous callback function. If not provided, this method should run synchronously.","   * @return {string}               Template source string.","   */","  ret.load = function (identifier, cb) {","    if (!fs || (cb && !fs.readFile) || !fs.readFileSync) {","      throw new Error('Unable to find file ' + identifier + ' because there is no filesystem to read from.');","    }","","    identifier = ret.resolve(identifier);","","    if (cb) {","      fs.readFile(identifier, encoding, cb);","      return;","    }","    return fs.readFileSync(identifier, encoding);","  };","","  return ret;","};",""],"l":{"1":1,"15":1,"16":1,"18":1,"19":1,"28":1,"29":0,"30":0,"32":0,"34":0,"44":1,"45":0,"46":0,"49":0,"51":0,"52":0,"53":0,"55":0,"58":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/loaders/memory.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/lib/loaders/memory.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":46}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":16},"end":{"line":29,"column":36}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":13},"end":{"line":45,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":30}},"2":{"start":{"line":17,"column":0},"end":{"line":63,"column":2}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":15}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":56}},"5":{"start":{"line":29,"column":2},"end":{"line":36,"column":4}},"6":{"start":{"line":30,"column":4},"end":{"line":34,"column":5}},"7":{"start":{"line":31,"column":6},"end":{"line":31,"column":22}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":45}},"9":{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},"10":{"start":{"line":45,"column":2},"end":{"line":60,"column":4}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":19}},"12":{"start":{"line":48,"column":4},"end":{"line":48,"column":57}},"13":{"start":{"line":50,"column":4},"end":{"line":50,"column":49}},"14":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"15":{"start":{"line":52,"column":6},"end":{"line":52,"column":70}},"16":{"start":{"line":55,"column":4},"end":{"line":58,"column":5}},"17":{"start":{"line":56,"column":6},"end":{"line":56,"column":20}},"18":{"start":{"line":57,"column":6},"end":{"line":57,"column":13}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":15}},"20":{"start":{"line":62,"column":2},"end":{"line":62,"column":13}}},"branchMap":{"1":{"line":20,"type":"cond-expr","locations":[{"start":{"line":20,"column":24},"end":{"line":20,"column":48}},{"start":{"line":20,"column":51},"end":{"line":20,"column":55}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"3":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":20},"end":{"line":33,"column":38}},{"start":{"line":33,"column":41},"end":{"line":33,"column":44}}]},"4":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":10},"end":{"line":50,"column":27}},{"start":{"line":50,"column":31},"end":{"line":50,"column":48}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"6":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]}},"code":["var path = require('path'),","  utils = require('../utils');","","/**"," * Loads templates from a provided object mapping."," * @alias swig.loaders.memory"," * @example"," * var templates = {"," *   \"layout\": \"{% block content %}{% endblock %}\","," *   \"home.html\": \"{% extends 'layout.html' %}{% block content %}...{% endblock %}\""," * };"," * swig.setDefaults({ loader: swig.loaders.memory(templates) });"," *"," * @param {object} mapping Hash object with template paths as keys and template sources as values."," * @param {string} [basepath] Path to the templates as string. Assigning this value allows you to use semi-absolute paths to templates instead of relative paths."," */","module.exports = function (mapping, basepath) {","  var ret = {};","","  basepath = basepath ? path.normalize(basepath) : null;","","  /**","   * Resolves <var>to</var> to an absolute path or unique identifier. This is used for building correct, normalized, and absolute paths to a given template.","   * @alias resolve","   * @param  {string} to        Non-absolute identifier or pathname to a file.","   * @param  {string} [from]    If given, should attempt to find the <var>to</var> path in relation to this given, known path.","   * @return {string}","   */","  ret.resolve = function (to, from) {","    if (basepath) {","      from = basepath;","    } else {","      from = from ? path.dirname(from) : '/';","    }","    return path.resolve(from, to);","  };","","  /**","   * Loads a single template. Given a unique <var>identifier</var> found by the <var>resolve</var> method this should return the given template.","   * @alias load","   * @param  {string}   identifier  Unique identifier of a template (possibly an absolute path).","   * @param  {function} [cb]        Asynchronous callback function. If not provided, this method should run synchronously.","   * @return {string}               Template source string.","   */","  ret.load = function (pathname, cb) {","    var src, paths;","","    paths = [pathname, pathname.replace(/^(\\/|\\\\)/, '')];","","    src = mapping[paths[0]] || mapping[paths[1]];","    if (!src) {","      utils.throwError('Unable to find template \"' + pathname + '\".');","    }","","    if (cb) {","      cb(null, src);","      return;","    }","    return src;","  };","","  return ret;","};",""],"l":{"1":1,"17":1,"18":0,"20":0,"29":0,"30":0,"31":0,"33":0,"35":0,"45":0,"46":0,"48":0,"50":0,"51":0,"52":0,"55":0,"56":0,"57":0,"59":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/.eslintrc.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/.eslintrc.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":12,"column":2}}},"branchMap":{},"code":["module.exports = {","    \"extends\": \"eslint:recommended\",","    \"env\": {","        \"node\": true,","        \"commonjs\": true,","        \"mocha\": true,","        \"es6\": true","    },","    \"rules\": {","        \"no-unused-vars\": [2, {\"vars\": \"local\", \"args\": \"none\"}]","    }","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/bin/swig.js":{"path":"/home/travis/build/npmtest/node-npmtest-swig-templates/node_modules/swig-templates/bin/swig.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":44,"loc":{"start":{"line":44,"column":11},"end":{"line":44,"column":27}}},"2":{"name":"(anonymous_2)","line":68,"loc":{"start":{"line":68,"column":8},"end":{"line":68,"column":29}}},"3":{"name":"(anonymous_3)","line":71,"loc":{"start":{"line":71,"column":8},"end":{"line":71,"column":20}}},"4":{"name":"(anonymous_4)","line":101,"loc":{"start":{"line":101,"column":8},"end":{"line":101,"column":29}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":50},"end":{"line":110,"column":74}}},"6":{"name":"(anonymous_6)","line":117,"loc":{"start":{"line":117,"column":47},"end":{"line":117,"column":68}}},"7":{"name":"(anonymous_7)","line":129,"loc":{"start":{"line":129,"column":7},"end":{"line":129,"column":28}}},"8":{"name":"(anonymous_8)","line":143,"loc":{"start":{"line":143,"column":7},"end":{"line":143,"column":28}}},"9":{"name":"(anonymous_9)","line":144,"loc":{"start":{"line":144,"column":5},"end":{"line":144,"column":17}}},"10":{"name":"(anonymous_10)","line":153,"loc":{"start":{"line":153,"column":7},"end":{"line":153,"column":28}}},"11":{"name":"(anonymous_11)","line":159,"loc":{"start":{"line":159,"column":15},"end":{"line":159,"column":31}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":10,"column":32}},"2":{"start":{"line":12,"column":0},"end":{"line":74,"column":5}},"3":{"start":{"line":45,"column":6},"end":{"line":47,"column":7}},"4":{"start":{"line":46,"column":8},"end":{"line":46,"column":15}},"5":{"start":{"line":49,"column":6},"end":{"line":51,"column":7}},"6":{"start":{"line":50,"column":8},"end":{"line":50,"column":28}},"7":{"start":{"line":53,"column":6},"end":{"line":53,"column":31}},"8":{"start":{"line":54,"column":6},"end":{"line":56,"column":7}},"9":{"start":{"line":55,"column":8},"end":{"line":55,"column":84}},"10":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":93}},"12":{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},"13":{"start":{"line":63,"column":8},"end":{"line":63,"column":66}},"14":{"start":{"line":69,"column":4},"end":{"line":69,"column":21}},"15":{"start":{"line":71,"column":22},"end":{"line":71,"column":29}},"16":{"start":{"line":77,"column":0},"end":{"line":80,"column":1}},"17":{"start":{"line":78,"column":2},"end":{"line":78,"column":45}},"18":{"start":{"line":79,"column":2},"end":{"line":79,"column":18}},"19":{"start":{"line":83,"column":0},"end":{"line":87,"column":1}},"20":{"start":{"line":84,"column":2},"end":{"line":84,"column":52}},"21":{"start":{"line":85,"column":7},"end":{"line":87,"column":1}},"22":{"start":{"line":86,"column":2},"end":{"line":86,"column":24}},"23":{"start":{"line":89,"column":0},"end":{"line":106,"column":1}},"24":{"start":{"line":90,"column":2},"end":{"line":90,"column":16}},"25":{"start":{"line":91,"column":2},"end":{"line":91,"column":34}},"26":{"start":{"line":93,"column":2},"end":{"line":99,"column":3}},"27":{"start":{"line":94,"column":4},"end":{"line":94,"column":25}},"28":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"29":{"start":{"line":97,"column":6},"end":{"line":97,"column":14}},"30":{"start":{"line":101,"column":2},"end":{"line":105,"column":4}},"31":{"start":{"line":102,"column":4},"end":{"line":102,"column":31}},"32":{"start":{"line":103,"column":4},"end":{"line":103,"column":57}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":40}},"34":{"start":{"line":109,"column":0},"end":{"line":113,"column":1}},"35":{"start":{"line":110,"column":2},"end":{"line":112,"column":5}},"36":{"start":{"line":111,"column":4},"end":{"line":111,"column":33}},"37":{"start":{"line":116,"column":0},"end":{"line":120,"column":1}},"38":{"start":{"line":117,"column":2},"end":{"line":119,"column":5}},"39":{"start":{"line":118,"column":4},"end":{"line":118,"column":67}},"40":{"start":{"line":123,"column":0},"end":{"line":125,"column":1}},"41":{"start":{"line":124,"column":2},"end":{"line":124,"column":42}},"42":{"start":{"line":127,"column":0},"end":{"line":157,"column":1}},"43":{"start":{"line":129,"column":2},"end":{"line":139,"column":4}},"44":{"start":{"line":130,"column":4},"end":{"line":130,"column":106}},"45":{"start":{"line":132,"column":4},"end":{"line":132,"column":50}},"46":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"47":{"start":{"line":135,"column":6},"end":{"line":135,"column":54}},"48":{"start":{"line":138,"column":4},"end":{"line":138,"column":17}},"49":{"start":{"line":140,"column":2},"end":{"line":140,"column":8}},"50":{"start":{"line":143,"column":2},"end":{"line":149,"column":4}},"51":{"start":{"line":144,"column":4},"end":{"line":148,"column":9}},"52":{"start":{"line":145,"column":6},"end":{"line":145,"column":16}},"53":{"start":{"line":146,"column":6},"end":{"line":146,"column":44}},"54":{"start":{"line":147,"column":6},"end":{"line":147,"column":55}},"55":{"start":{"line":150,"column":2},"end":{"line":150,"column":8}},"56":{"start":{"line":153,"column":2},"end":{"line":155,"column":4}},"57":{"start":{"line":154,"column":4},"end":{"line":154,"column":65}},"58":{"start":{"line":156,"column":2},"end":{"line":156,"column":8}},"59":{"start":{"line":159,"column":0},"end":{"line":162,"column":3}},"60":{"start":{"line":160,"column":2},"end":{"line":160,"column":42}},"61":{"start":{"line":161,"column":2},"end":{"line":161,"column":16}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":6}},{"start":{"line":54,"column":6},"end":{"line":54,"column":6}}]},"4":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":10},"end":{"line":54,"column":31}},{"start":{"line":54,"column":35},"end":{"line":54,"column":55}},{"start":{"line":54,"column":59},"end":{"line":54,"column":76}}]},"5":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"6":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":39}},{"start":{"line":58,"column":43},"end":{"line":58,"column":75}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"8":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":0},"end":{"line":77,"column":0}},{"start":{"line":77,"column":0},"end":{"line":77,"column":0}}]},"9":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":0},"end":{"line":83,"column":0}},{"start":{"line":83,"column":0},"end":{"line":83,"column":0}}]},"10":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":7},"end":{"line":85,"column":7}},{"start":{"line":85,"column":7},"end":{"line":85,"column":7}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":0},"end":{"line":89,"column":0}},{"start":{"line":89,"column":0},"end":{"line":89,"column":0}}]},"12":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"13":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":0},"end":{"line":109,"column":0}},{"start":{"line":109,"column":0},"end":{"line":109,"column":0}}]},"14":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":0},"end":{"line":116,"column":0}},{"start":{"line":116,"column":0},"end":{"line":116,"column":0}}]},"15":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":0},"end":{"line":123,"column":0}},{"start":{"line":123,"column":0},"end":{"line":123,"column":0}}]},"16":{"line":127,"type":"switch","locations":[{"start":{"line":128,"column":0},"end":{"line":140,"column":8}},{"start":{"line":142,"column":0},"end":{"line":150,"column":8}},{"start":{"line":152,"column":0},"end":{"line":156,"column":8}}]},"17":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]}},"code":["//#!/usr/bin/env node","/*jslint es5: true */","","var swig = require('../index'),","  optimist = require('optimist'),","  fs = require('fs'),","  path = require('path'),","  filters = require('../lib/filters'),","  utils = require('../lib/utils'),","  uglify = require('uglify-js');","","var command,","  wrapstart = 'var tpl = ',","  argv = optimist","    .usage('\\n Usage:\\n' +","      '    $0 compile [files] [options]\\n' +","      '    $0 run [files] [options]\\n' +","      '    $0 render [files] [options]\\n'","      )","    .describe({","      v: 'Show the Swig version number.',","      o: 'Output location.',","      h: 'Show this help screen.',","      j: 'Variable context as a JSON file.',","      c: 'Variable context as a CommonJS-style file. Used only if option `j` is not provided.',","      m: 'Minify compiled functions with uglify-js',","      'filters': 'Custom filters as a CommonJS-style file',","      'tags': 'Custom tags as a CommonJS-style file',","      'options': 'Customize Swig\\'s Options from a CommonJS-style file',","      'wrap-start': 'Template wrapper beginning for \"compile\".',","      'wrap-end': 'Template wrapper end for \"compile\".',","      'method-name': 'Method name to set template to and run from.'","    })","    .alias('v', 'version')","    .alias('o', 'output')","    .default('o', 'stdout')","    .alias('h', 'help')","    .alias('j', 'json')","    .alias('c', 'context')","    .alias('m', 'minify')","    .default('wrap-start', wrapstart)","    .default('wrap-end', ';')","    .default('method-name', 'tpl')","    .check(function (argv) {","      if (argv.v) {","        return;","      }","","      if (!argv._.length) {","        throw new Error('');","      }","","      command = argv._.shift();","      if (command !== 'compile' && command !== 'render' && command !== 'run') {","        throw new Error('Unrecognized command \"' + command + '\". Use -h for help.');","      }","","      if (argv['method-name'] !== 'tpl' && argv['wrap-start'] !== wrapstart) {","        throw new Error('Cannot use arguments \"--method-name\" and \"--wrap-start\" together.');","      }","","      if (argv['method-name'] !== 'tpl') {","        argv['wrap-start'] = 'var ' + argv['method-name'] + ' = ';","      }","    })","    .argv,","  ctx = {},","  out = function (file, str) {","    console.log(str);","  },","  efn = function () { return; },","  anonymous,","  files,","  fn;","","// What version?","if (argv.v) {","  console.log(require('../package').version);","  process.exit(0);","}","","// Pull in any context data provided","if (argv.j) {","  ctx = JSON.parse(fs.readFileSync(argv.j, 'utf8'));","} else if (argv.c) {","  ctx = require(argv.c);","}","","if (argv.o !== 'stdout') {","  argv.o += '/';","  argv.o = path.normalize(argv.o);","","  try {","    fs.mkdirSync(argv.o);","  } catch (e) {","    if (e.code !== 'EEXIST') {","      throw e;","    }","  }","","  out = function (file, str) {","    file = path.basename(file);","    fs.writeFileSync(argv.o + file, str, { flags: 'w' });","    console.log('Wrote', argv.o + file);","  };","}","","// Set any custom filters","if (argv.filters) {","  utils.each(require(path.resolve(argv.filters)), function (filter, name) {","    swig.setFilter(name, filter);","  });","}","","// Set any custom tags","if (argv.tags) {","  utils.each(require(path.resolve(argv.tags)), function (tag, name) {","    swig.setTag(name, tag.parse, tag.compile, tag.ends, tag.block);","  });","}","","// Specify swig default options","if (argv.options) {","  swig.setDefaults(require(argv.options));","}","","switch (command) {","case 'compile':","  fn = function (file, str) {","    var r = swig.precompile(str, { filename: file, locals: ctx }).tpl.toString().replace('anonymous', '');","","    r = argv['wrap-start'] + r + argv['wrap-end'];","","    if (argv.m) {","      r = uglify.minify(r, { fromString: true }).code;","    }","","    out(file, r);","  };","  break;","","case 'run':","  fn = function (file, str) {","    (function () {","      eval(str);","      var __tpl = eval(argv['method-name']);","      out(file, __tpl(swig, ctx, filters, utils, efn));","    }());","  };","  break;","","case 'render':","  fn = function (file, str) {","    out(file, swig.render(str, { filename: file, locals: ctx }));","  };","  break;","}","","argv._.forEach(function (file) {","  var str = fs.readFileSync(file, 'utf8');","  fn(file, str);","});",""],"l":{"4":2,"12":0,"45":0,"46":0,"49":0,"50":0,"53":0,"54":0,"55":0,"58":0,"59":0,"62":0,"63":0,"69":0,"71":0,"77":0,"78":0,"79":0,"83":0,"84":0,"85":0,"86":0,"89":0,"90":0,"91":0,"93":0,"94":0,"96":0,"97":0,"101":0,"102":0,"103":0,"104":0,"109":0,"110":0,"111":0,"116":0,"117":0,"118":0,"123":0,"124":0,"127":0,"129":0,"130":0,"132":0,"134":0,"135":0,"138":0,"140":0,"143":0,"144":0,"145":0,"146":0,"147":0,"150":0,"153":0,"154":0,"156":0,"159":0,"160":0,"161":0}}}